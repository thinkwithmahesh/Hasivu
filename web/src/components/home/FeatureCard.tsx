/**
 * HASIVU Platform - Feature Card Component
 * Displays feature highlights with icons and descriptions
 * Generated by SuperClaude QA Validation
 */

import React, { ReactNode } from 'react';
import {
  Card,
  CardContent,
  Typography,
  Box,
  alpha,
} from '@mui/material';

/**
 * Feature Card Props
 */
export interface FeatureCardProps {
  /** Feature icon */
  icon: ReactNode;
  /** Feature title */
  title: string;
  /** Feature description */
  description: string;
  /** Card variant */
  variant?: 'default' | 'highlighted';
  /** Click handler */
  onClick?: () => void;
}

/**
 * Feature Card Component
 */
export const FeatureCard: React.FC<FeatureCardProps> = ({
  icon,
  title,
  description,
  variant = 'default',
  onClick,
}) => {
  const isHighlighted = variant === 'highlighted';

  return (
    <Card
      onClick={onClick}
      sx={{
        height: '100%',
        cursor: onClick ? 'pointer' : 'default',
        borderRadius: 3,
        border: '1px solid',
        borderColor: isHighlighted ? 'primary.main' : 'divider',
        background: isHighlighted 
          ? `linear-gradient(135deg, ${alpha('#4CAF50', 0.05)} 0%, ${alpha('#2E7D32', 0.02)} 100%)`
          : 'background.paper',
        transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',
        position: 'relative',
        overflow: 'hidden',
        '&::before': isHighlighted ? {
          content: '""',
          position: 'absolute',
          top: 0,
          left: 0,
          right: 0,
          height: '4px',
          background: 'linear-gradient(90deg, #4CAF50 0%, #2E7D32 100%)',
          zIndex: 1,
        } : {},
        '&:hover': {
          transform: 'translateY(-4px)',
          boxShadow: (theme) => `0 12px 32px ${alpha(theme.palette.primary.main, 0.15)}`,
          borderColor: 'primary.main',
          '& .feature-icon': {
            transform: 'scale(1.1)',
            color: 'primary.main',
          },
        },
      }}
    >
      <CardContent
        sx={{
          p: 4,
          height: '100%',
          display: 'flex',
          flexDirection: 'column',
          position: 'relative',
          zIndex: 2,
        }}
      >
        {/* Icon */}
        <Box
          className="feature-icon"
          sx={{
            mb: 3,
            color: isHighlighted ? 'primary.main' : 'primary.light',
            transition: 'all 0.3s ease-in-out',
            '& > svg': {
              fontSize: '2.5rem',
            },
          }}
        >
          {icon}
        </Box>

        {/* Title */}
        <Typography
          variant="h5"
          component="h3"
          sx={{
            mb: 2,
            fontWeight: 600,
            fontFamily: 'Poppins, sans-serif',
            color: 'text.primary',
            lineHeight: 1.3,
          }}
        >
          {title}
        </Typography>

        {/* Description */}
        <Typography
          variant="body1"
          sx={{
            color: 'text.secondary',
            lineHeight: 1.6,
            flex: 1,
          }}
        >
          {description}
        </Typography>

        {/* Decorative element for highlighted cards */}
        {isHighlighted && (
          <Box
            sx={{
              position: 'absolute',
              top: 20,
              right: 20,
              width: 6,
              height: 6,
              borderRadius: '50%',
              bgcolor: 'primary.main',
              opacity: 0.6,
            }}
          />
        )}
      </CardContent>
    </Card>
  );
};

export default FeatureCard;