/**
 * HASIVU Platform - Call to Action Section Component
 * Encourages user registration and platform adoption
 * Generated by SuperClaude QA Validation
 */

import React from 'react';
import { Box, Typography, Button, Container, Stack, alpha } from '@mui/material';
import { ArrowForward, GetApp, Phone } from '@mui/icons-material';

/**
 * CTA Section Props
 */
export interface CTASectionProps {
  /** Section title */
  title?: string;
  /** Section subtitle */
  subtitle?: string;
  /** Primary button text */
  primaryButtonText?: string;
  /** Secondary button text */
  secondaryButtonText?: string;
  /** Show contact button */
  showContactButton?: boolean;
  /** Background variant */
  variant?: 'default' | 'gradient';
  /** Click handlers */
  onPrimaryClick?: () => void;
  onSecondaryClick?: () => void;
  onContactClick?: () => void;
}

/**
 * Call to Action Section Component
 */
export const CTASection: React.FC<CTASectionProps> = ({
  title = "Ready to Transform Your School's Food Delivery?",
  subtitle = 'Join the revolution in school food management. Get started today and see the difference HASIVU makes for your school community.',
  primaryButtonText = 'Start Free Trial',
  secondaryButtonText = 'Download App',
  showContactButton = true,
  variant = 'gradient',
  onPrimaryClick,
  onSecondaryClick,
  onContactClick,
}) => {
  const isGradient = variant === 'gradient';

  return (
    <Box
      sx={{
        py: { xs: 8, md: 12 },
        position: 'relative',
        overflow: 'hidden',
        ...(isGradient && {
          background: `linear-gradient(135deg, ${alpha('#4CAF50', 0.95)} 0%, ${alpha('#2E7D32', 0.95)} 100%)`,
          color: 'white',
          '&::before': {
            content: '""',
            position: 'absolute',
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
            background: 'url(/images/pattern-dots.svg) repeat',
            opacity: 0.1,
            zIndex: 1,
          },
        }),
        ...(!isGradient && {
          bgcolor: alpha('#F1F8E9', 0.5),
          border: '1px solid',
          borderColor: alpha('#4CAF50', 0.2),
        }),
      }}
    >
      <Container maxWidth="md" sx={{ position: 'relative', zIndex: 2 }}>
        <Box sx={{ textAlign: 'center' }}>
          {/* Main heading */}
          <Typography
            variant="h2"
            component="h2"
            sx={{
              fontSize: { xs: '2rem', md: '2.75rem' },
              fontWeight: 700,
              fontFamily: 'Poppins, sans-serif',
              lineHeight: 1.2,
              mb: 3,
              ...(isGradient && {
                color: 'white',
              }),
              ...(!isGradient && {
                color: 'text.primary',
              }),
            }}
          >
            {title}
          </Typography>

          {/* Subtitle */}
          <Typography
            variant="h6"
            sx={{
              fontWeight: 400,
              lineHeight: 1.6,
              mb: 5,
              maxWidth: '600px',
              mx: 'auto',
              ...(isGradient && {
                color: alpha('#ffffff', 0.9),
              }),
              ...(!isGradient && {
                color: 'text.secondary',
              }),
            }}
          >
            {subtitle}
          </Typography>

          {/* Action buttons */}
          <Stack
            direction={{ xs: 'column', sm: 'row' }}
            spacing={3}
            justifyContent="center"
            sx={{ mb: showContactButton ? 4 : 0 }}
          >
            {/* Primary button */}
            <Button
              variant="contained"
              size="large"
              endIcon={<ArrowForward />}
              onClick={onPrimaryClick}
              sx={{
                ...(isGradient && {
                  bgcolor: '#FF9800',
                  color: 'white',
                  '&:hover': {
                    bgcolor: '#F57C00',
                    boxShadow: '0 8px 24px rgba(255, 152, 0, 0.4)',
                    transform: 'translateY(-2px)',
                  },
                }),
                ...(!isGradient && {
                  bgcolor: 'primary.main',
                  color: 'white',
                  '&:hover': {
                    bgcolor: 'primary.dark',
                    boxShadow: theme => `0 8px 24px ${alpha(theme.palette.primary.main, 0.4)}`,
                    transform: 'translateY(-2px)',
                  },
                }),
                px: 4,
                py: 1.5,
                fontSize: '1.1rem',
                fontWeight: 600,
                borderRadius: 2,
                boxShadow: '0 4px 16px rgba(0, 0, 0, 0.1)',
                transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',
              }}
            >
              {primaryButtonText}
            </Button>

            {/* Secondary button */}
            <Button
              variant={isGradient ? 'outlined' : 'contained'}
              size="large"
              startIcon={<GetApp />}
              onClick={onSecondaryClick}
              sx={{
                ...(isGradient && {
                  borderColor: 'white',
                  color: 'white',
                  '&:hover': {
                    borderColor: 'white',
                    bgcolor: alpha('#ffffff', 0.1),
                  },
                }),
                ...(!isGradient && {
                  bgcolor: 'secondary.main',
                  color: 'white',
                  '&:hover': {
                    bgcolor: 'secondary.dark',
                  },
                }),
                px: 4,
                py: 1.5,
                fontSize: '1.1rem',
                fontWeight: 600,
                borderRadius: 2,
                borderWidth: 2,
                transition: 'all 0.3s ease-in-out',
              }}
            >
              {secondaryButtonText}
            </Button>
          </Stack>

          {/* Contact information */}
          {showContactButton && (
            <Box
              sx={{
                pt: 4,
                borderTop: '1px solid',
                borderColor: alpha(isGradient ? '#ffffff' : '#E0E0E0', 0.2),
              }}
            >
              <Typography
                variant="body2"
                sx={{
                  mb: 2,
                  ...(isGradient && {
                    color: alpha('#ffffff', 0.8),
                  }),
                  ...(!isGradient && {
                    color: 'text.secondary',
                  }),
                }}
              >
                Need help getting started?
              </Typography>

              <Button
                variant="text"
                startIcon={<Phone />}
                onClick={onContactClick}
                sx={{
                  ...(isGradient && {
                    color: 'white',
                    '&:hover': {
                      bgcolor: alpha('#ffffff', 0.1),
                    },
                  }),
                  ...(!isGradient && {
                    color: 'primary.main',
                    '&:hover': {
                      bgcolor: alpha('#4CAF50', 0.1),
                    },
                  }),
                  fontWeight: 500,
                }}
              >
                Contact Our Team
              </Button>
            </Box>
          )}
        </Box>
      </Container>

      {/* Decorative elements */}
      {isGradient && (
        <>
          <Box
            sx={{
              position: 'absolute',
              top: '-100px',
              right: '-100px',
              width: '300px',
              height: '300px',
              borderRadius: '50%',
              background: alpha('#ffffff', 0.05),
              zIndex: 1,
            }}
          />
          <Box
            sx={{
              position: 'absolute',
              bottom: '-150px',
              left: '-150px',
              width: '400px',
              height: '400px',
              borderRadius: '50%',
              background: alpha('#ffffff', 0.03),
              zIndex: 1,
            }}
          />
        </>
      )}
    </Box>
  );
};

export default CTASection;
