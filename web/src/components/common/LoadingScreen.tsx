/**
 * HASIVU Platform - Loading Screen Component
 * Beautiful loading animation with HASIVU branding and customizable messages
 * Generated by SuperClaude Frontend Implementation
 */

import React from 'react';
import { Box, Typography, CircularProgress, Fade, Container, useTheme, alpha } from '@mui/material';
import { keyframes } from '@mui/system';

// Custom animations
const pulseAnimation = keyframes`
  0% {
    transform: scale(1);
    opacity: 0.8;
  }
  50% {
    transform: scale(1.1);
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 0.8;
  }
`;

const fadeInUp = keyframes`
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
`;

const spinGlow = keyframes`
  0% {
    filter: drop-shadow(0 0 5px rgba(76, 175, 80, 0.3));
  }
  50% {
    filter: drop-shadow(0 0 20px rgba(76, 175, 80, 0.6));
  }
  100% {
    filter: drop-shadow(0 0 5px rgba(76, 175, 80, 0.3));
  }
`;

/**
 * LoadingScreen Props Interface
 */
export interface LoadingScreenProps {
  /** Custom loading message */
  message?: string;
  /** Show/hide the HASIVU logo */
  showLogo?: boolean;
  /** Size of the loading spinner */
  size?: 'small' | 'medium' | 'large';
  /** Background opacity (0-1) */
  backgroundOpacity?: number;
  /** Full screen overlay or inline */
  variant?: 'fullscreen' | 'inline';
  /** Loading progress (0-100) for progress indicator */
  progress?: number;
  /** Additional loading details/steps */
  details?: string;
  /** Custom color theme */
  color?: 'primary' | 'secondary';
  /** Animation speed */
  speed?: 'slow' | 'normal' | 'fast';
}

/**
 * HASIVU Loading Screen Component
 *
 * Features:
 * - Beautiful pulsing HASIVU logo animation
 * - Customizable loading messages and progress
 * - Mobile-responsive design
 * - Accessibility compliant (ARIA labels, focus management)
 * - School-friendly design with warm colors
 * - Multiple variants and customization options
 */
export const LoadingScreen: React.FC<LoadingScreenProps> = ({
  message = 'Loading HASIVU...',
  showLogo = true,
  size = 'medium',
  backgroundOpacity = 0.9,
  variant = 'fullscreen',
  progress,
  details,
  color = 'primary',
  speed = 'normal',
}) => {
  const theme = useTheme();

  // Animation duration based on speed
  const animationDuration = {
    slow: '3s',
    normal: '2s',
    fast: '1s',
  }[speed];

  // Spinner sizes
  const spinnerSize = {
    small: 40,
    medium: 60,
    large: 80,
  }[size];

  // Color configuration
  const primaryColor =
    color === 'primary' ? theme.palette.primary.main : theme.palette.secondary.main;
  const lightColor =
    color === 'primary' ? theme.palette.primary.light : theme.palette.secondary.light;

  // HASIVU Logo Component
  const HASIVULogo = () => (
    <Box
      sx={{
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        mb: 3,
        animation: `${pulseAnimation} ${animationDuration} ease-in-out infinite`,
      }}
    >
      {/* Logo placeholder - can be replaced with actual HASIVU logo */}
      <Box
        sx={{
          width: { xs: 80, sm: 100, md: 120 },
          height: { xs: 80, sm: 100, md: 120 },
          backgroundColor: primaryColor,
          borderRadius: '50%',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          position: 'relative',
          '&::before': {
            content: '""',
            position: 'absolute',
            top: -4,
            left: -4,
            right: -4,
            bottom: -4,
            borderRadius: '50%',
            background: `linear-gradient(45deg, ${primaryColor}, ${lightColor})`,
            opacity: 0.3,
            animation: `${spinGlow} ${animationDuration} ease-in-out infinite`,
          },
        }}
      >
        <Typography
          variant="h3"
          sx={{
            color: 'white',
            fontWeight: 'bold',
            fontSize: { xs: '1.5rem', sm: '2rem', md: '2.5rem' },
            textShadow: '0 2px 4px rgba(0,0,0,0.3)',
            position: 'relative',
            zIndex: 1,
          }}
        >
          H
        </Typography>
      </Box>
    </Box>
  );

  // Progress Bar Component
  const ProgressBar = () =>
    progress !== undefined && (
      <Box sx={{ width: '100%', maxWidth: 300, mt: 2 }}>
        <Box
          sx={{
            height: 4,
            backgroundColor: alpha(primaryColor, 0.2),
            borderRadius: 2,
            overflow: 'hidden',
            position: 'relative',
          }}
        >
          <Box
            sx={{
              height: '100%',
              backgroundColor: primaryColor,
              borderRadius: 2,
              width: `${Math.min(Math.max(progress, 0), 100)}%`,
              transition: 'width 0.3s ease-in-out',
              position: 'relative',
              '&::after': {
                content: '""',
                position: 'absolute',
                top: 0,
                left: 0,
                bottom: 0,
                right: 0,
                background: `linear-gradient(90deg, transparent, ${alpha(theme.palette.common.white, 0.3)}, transparent)`,
                animation: 'shimmer 2s infinite',
              },
            }}
          />
        </Box>
        <Typography
          variant="caption"
          sx={{
            color: theme.palette.text.secondary,
            mt: 1,
            display: 'block',
            textAlign: 'center',
          }}
        >
          {Math.round(progress)}%
        </Typography>
      </Box>
    );

  // Main loading content
  const LoadingContent = () => (
    <Box
      sx={{
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center',
        justifyContent: 'center',
        textAlign: 'center',
        p: 4,
        animation: `${fadeInUp} 0.6s ease-out`,
      }}
      role="status"
      aria-live="polite"
      aria-label={`${message}${details ? ` - ${details}` : ''}`}
    >
      {/* Logo */}
      {showLogo && <HASIVULogo />}

      {/* Loading Spinner */}
      <Box
        sx={{
          position: 'relative',
          display: 'inline-flex',
          mb: 3,
        }}
      >
        <CircularProgress
          size={spinnerSize}
          thickness={4}
          sx={{
            color: primaryColor,
            animation: `${spinGlow} ${animationDuration} ease-in-out infinite`,
          }}
        />
        {progress !== undefined && (
          <Box
            sx={{
              position: 'absolute',
              top: 0,
              left: 0,
              bottom: 0,
              right: 0,
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
            }}
          >
            <Typography
              variant="caption"
              sx={{
                fontWeight: 'bold',
                color: primaryColor,
                fontSize: '0.75rem',
              }}
            >
              {Math.round(progress)}%
            </Typography>
          </Box>
        )}
      </Box>

      {/* Loading Message */}
      <Typography
        variant="h6"
        sx={{
          color: theme.palette.text.primary,
          fontWeight: 500,
          mb: 1,
          fontSize: { xs: '1rem', sm: '1.25rem' },
        }}
      >
        {message}
      </Typography>

      {/* Loading Details */}
      {details && (
        <Typography
          variant="body2"
          sx={{
            color: theme.palette.text.secondary,
            maxWidth: 400,
            opacity: 0.8,
            animation: `${fadeInUp} 0.8s ease-out`,
          }}
        >
          {details}
        </Typography>
      )}

      {/* Progress Bar */}
      <ProgressBar />

      {/* Fun loading messages for school context */}
      <Typography
        variant="caption"
        sx={{
          color: theme.palette.text.disabled,
          mt: 2,
          fontStyle: 'italic',
        }}
      >
        üçé Preparing your delicious school meals experience...
      </Typography>
    </Box>
  );

  // Fullscreen variant
  if (variant === 'fullscreen') {
    return (
      <Fade in={true} timeout={300}>
        <Box
          sx={{
            position: 'fixed',
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
            backgroundColor: alpha(theme.palette.background.default, backgroundOpacity),
            backdropFilter: 'blur(8px)',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            zIndex: theme.zIndex.modal + 100,
            minHeight: '100vh',
          }}
        >
          <Container maxWidth="sm">
            <LoadingContent />
          </Container>
        </Box>
      </Fade>
    );
  }

  // Inline variant
  return (
    <Fade in={true} timeout={300}>
      <Box
        sx={{
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          py: { xs: 4, sm: 6, md: 8 },
        }}
      >
        <LoadingContent />
      </Box>
    </Fade>
  );
};

export default LoadingScreen;

// Add shimmer animation to global styles
const shimmerAnimation = keyframes`
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
`;

// Export animation keyframes for reuse
export { pulseAnimation, fadeInUp, spinGlow, shimmerAnimation };
