/**
 * HASIVU Platform - Next.js App Component
 * Global app wrapper with providers, theme, and error handling
 * Generated by SuperClaude Wave 3: Frontend Implementation
 */

import React, { useEffect, useState } from 'react';
import type { AppProps } from 'next/app';
import Head from 'next/head';
import { SessionProvider } from 'next-auth/react';
import { Provider as ReduxProvider } from 'react-redux';
import { PersistGate } from 'redux-persist/integration/react';
import { ThemeProvider, createTheme } from '@mui/material/styles';
import { CssBaseline, GlobalStyles } from '@mui/material';
import { CacheProvider, EmotionCache } from '@emotion/react';
import { Toaster } from 'react-hot-toast';

// Import Tailwind CSS styles
import '@/styles/globals.css';

import { store, persistor } from '@/store';
import { AuthProvider } from '@/contexts/AuthContext';
import { SocketProvider } from '@/contexts/SocketContext';
import { createEmotionCache } from '@/utils/createEmotionCache';
import { theme } from '@/styles/theme';
import { globalStyles } from '@/styles/globalStyles';
import { LoadingScreen } from '@/components/common/LoadingScreen';
import { ErrorBoundary } from '@/components/common/ErrorBoundary';
import { ProgressBarProvider } from '@/components/common/ProgressBar';

// Client-side cache for emotion
const clientSideEmotionCache = createEmotionCache();

/**
 * Extended App Props with emotion cache
 */
interface MyAppProps extends AppProps {
  emotionCache?: EmotionCache;
}

/**
 * Main App Component
 */
export default function MyApp({
  Component,
  pageProps: { session, ...pageProps },
  emotionCache = clientSideEmotionCache,
}: MyAppProps) {
  const [isHydrated, setIsHydrated] = useState(false);

  // Handle hydration
  useEffect(() => {
    setIsHydrated(true);
  }, []);

  // Show loading screen during hydration
  if (!isHydrated) {
    return <LoadingScreen message="Loading HASIVU..." />;
  }

  return (
    <CacheProvider value={emotionCache}>
      <Head>
        {/* Primary Meta Tags */}
        <title>HASIVU - Smart School Food Delivery Platform</title>
        <meta name="title" content="HASIVU - Smart School Food Delivery Platform" />
        <meta
          name="description"
          content="Revolutionary school food delivery platform with RFID verification, real-time tracking, and seamless payment integration."
        />
        <meta name="keywords" content="school food, delivery, RFID, education, nutrition, parents" />
        <meta name="author" content="HASIVU Team" />
        <meta name="robots" content="index, follow" />
        <meta name="language" content="English" />

        {/* Viewport and Mobile */}
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
        <meta name="mobile-web-app-capable" content="yes" />
        <meta name="apple-mobile-web-app-capable" content="yes" />
        <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
        <meta name="apple-mobile-web-app-title" content="HASIVU" />

        {/* Open Graph / Facebook */}
        <meta property="og:type" content="website" />
        <meta property="og:url" content="https://hasivu.com/" />
        <meta property="og:title" content="HASIVU - Smart School Food Delivery Platform" />
        <meta
          property="og:description"
          content="Revolutionary school food delivery platform with RFID verification, real-time tracking, and seamless payment integration."
        />
        <meta property="og:image" content="/images/og-image.jpg" />
        <meta property="og:site_name" content="HASIVU" />
        <meta property="og:locale" content="en_US" />

        {/* Twitter */}
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:url" content="https://hasivu.com/" />
        <meta name="twitter:title" content="HASIVU - Smart School Food Delivery Platform" />
        <meta
          name="twitter:description"
          content="Revolutionary school food delivery platform with RFID verification, real-time tracking, and seamless payment integration."
        />
        <meta name="twitter:image" content="/images/twitter-image.jpg" />
        <meta name="twitter:creator" content="@hasivu" />

        {/* Favicons */}
        <link rel="icon" type="image/x-icon" href="/favicon.ico" />
        <link rel="icon" type="image/png" sizes="16x16" href="/icons/favicon-16x16.png" />
        <link rel="icon" type="image/png" sizes="32x32" href="/icons/favicon-32x32.png" />
        <link rel="apple-touch-icon" sizes="180x180" href="/icons/apple-touch-icon.png" />

        {/* PWA Manifest */}
        <link rel="manifest" href="/manifest.json" />
        <meta name="theme-color" content="#2E7D32" />

        {/* Preconnect to external domains */}
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin="anonymous" />
        <link rel="preconnect" href="https://api.hasivu.com" />

        {/* DNS Prefetch */}
        <link rel="dns-prefetch" href="//fonts.googleapis.com" />
        <link rel="dns-prefetch" href="//fonts.gstatic.com" />
        <link rel="dns-prefetch" href="//api.hasivu.com" />

        {/* Canonical URL */}
        <link rel="canonical" href="https://hasivu.com/" />

        {/* Security Headers */}
        <meta httpEquiv="X-Content-Type-Options" content="nosniff" />
        <meta httpEquiv="X-Frame-Options" content="DENY" />
        <meta httpEquiv="X-XSS-Protection" content="1; mode=block" />

        {/* Google Fonts */}
        <link
          href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"
          rel="stylesheet"
        />
        <link
          href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap"
          rel="stylesheet"
        />

        {/* Structured Data */}
        <script
          type="application/ld+json"
          dangerouslySetInnerHTML={{
            __html: JSON.stringify({
              '@context': 'https://schema.org',
              '@type': 'WebApplication',
              name: 'HASIVU',
              description: 'Smart school food delivery platform with RFID verification',
              url: 'https://hasivu.com',
              applicationCategory: 'EducationApplication',
              operatingSystem: 'Web',
              offers: {
                '@type': 'Offer',
                price: '0',
                priceCurrency: 'INR',
              },
              author: {
                '@type': 'Organization',
                name: 'HASIVU Team',
              },
            }),
          }}
        />
      </Head>

      <ErrorBoundary>
        <ReduxProvider store={store}>
          <PersistGate loading={<LoadingScreen message="Restoring session..." />} persistor={persistor}>
            <SessionProvider session={session}>
              <ThemeProvider theme={theme}>
                <CssBaseline />
                <GlobalStyles styles={globalStyles} />
                
                <ProgressBarProvider>
                  <AuthProvider>
                    <SocketProvider>
                      {/* Main app component */}
                      <Component {...pageProps} />
                    
                    {/* Global toast notifications */}
                    <Toaster
                      position="top-right"
                      reverseOrder={false}
                      gutter={8}
                      containerClassName=""
                      containerStyle={{}}
                      toastOptions={{
                        // Default options
                        className: '',
                        duration: 4000,
                        style: {
                          background: '#fff',
                          color: '#333',
                          borderRadius: '8px',
                          boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',
                          fontSize: '14px',
                          fontWeight: '500',
                          padding: '12px 16px',
                        },
                        
                        // Success toasts
                        success: {
                          duration: 3000,
                          style: {
                            background: '#4CAF50',
                            color: '#fff',
                          },
                          iconTheme: {
                            primary: '#fff',
                            secondary: '#4CAF50',
                          },
                        },
                        
                        // Error toasts
                        error: {
                          duration: 5000,
                          style: {
                            background: '#F44336',
                            color: '#fff',
                          },
                          iconTheme: {
                            primary: '#fff',
                            secondary: '#F44336',
                          },
                        },
                        
                        // Loading toasts
                        loading: {
                          duration: Infinity,
                          style: {
                            background: '#2196F3',
                            color: '#fff',
                          },
                        },
                      }}
                    />
                    </SocketProvider>
                  </AuthProvider>
                </ProgressBarProvider>
              </ThemeProvider>
            </SessionProvider>
          </PersistGate>
        </ReduxProvider>
      </ErrorBoundary>
    </CacheProvider>
  );
}