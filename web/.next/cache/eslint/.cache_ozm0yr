[{"/Users/mahesha/Downloads/hasivu-platform/web/src/app/admin/schedule/page.tsx":"1","/Users/mahesha/Downloads/hasivu-platform/web/src/app/analytics/page.tsx":"2","/Users/mahesha/Downloads/hasivu-platform/web/src/app/auth/forgot-password/page.tsx":"3","/Users/mahesha/Downloads/hasivu-platform/web/src/app/auth/login/page.tsx":"4","/Users/mahesha/Downloads/hasivu-platform/web/src/app/auth/register/page.tsx":"5","/Users/mahesha/Downloads/hasivu-platform/web/src/app/dashboard/admin/page.tsx":"6","/Users/mahesha/Downloads/hasivu-platform/web/src/app/dashboard/kitchen/page.tsx":"7","/Users/mahesha/Downloads/hasivu-platform/web/src/app/dashboard/page.tsx":"8","/Users/mahesha/Downloads/hasivu-platform/web/src/app/dashboard/parent/page.tsx":"9","/Users/mahesha/Downloads/hasivu-platform/web/src/app/inventory-management/page.tsx":"10","/Users/mahesha/Downloads/hasivu-platform/web/src/app/kitchen/schedule/page.tsx":"11","/Users/mahesha/Downloads/hasivu-platform/web/src/app/kitchen-management/page.tsx":"12","/Users/mahesha/Downloads/hasivu-platform/web/src/app/layout.tsx":"13","/Users/mahesha/Downloads/hasivu-platform/web/src/app/menu/page.tsx":"14","/Users/mahesha/Downloads/hasivu-platform/web/src/app/notifications/page.tsx":"15","/Users/mahesha/Downloads/hasivu-platform/web/src/app/order-workflow/page.tsx":"16","/Users/mahesha/Downloads/hasivu-platform/web/src/app/orders/page.tsx":"17","/Users/mahesha/Downloads/hasivu-platform/web/src/app/page.tsx":"18","/Users/mahesha/Downloads/hasivu-platform/web/src/app/rfid-verification/page.tsx":"19","/Users/mahesha/Downloads/hasivu-platform/web/src/app/settings/page.tsx":"20","/Users/mahesha/Downloads/hasivu-platform/web/src/components/AuthModal.tsx":"21","/Users/mahesha/Downloads/hasivu-platform/web/src/components/DashboardOverview.tsx":"22","/Users/mahesha/Downloads/hasivu-platform/web/src/components/MobileResponsiveNavigation.tsx":"23","/Users/mahesha/Downloads/hasivu-platform/web/src/components/NotificationSystem.tsx":"24","/Users/mahesha/Downloads/hasivu-platform/web/src/components/OnboardingFlow.tsx":"25","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ProgressiveLoading.tsx":"26","/Users/mahesha/Downloads/hasivu-platform/web/src/components/RFIDManagementDashboard.tsx":"27","/Users/mahesha/Downloads/hasivu-platform/web/src/components/accessibility/AccessibilityProvider.tsx":"28","/Users/mahesha/Downloads/hasivu-platform/web/src/components/accessibility/AriaUtils.tsx":"29","/Users/mahesha/Downloads/hasivu-platform/web/src/components/accessibility/FocusManager.tsx":"30","/Users/mahesha/Downloads/hasivu-platform/web/src/components/accessibility/ScreenReaderOnly.tsx":"31","/Users/mahesha/Downloads/hasivu-platform/web/src/components/accessibility/SkipNavigation.tsx":"32","/Users/mahesha/Downloads/hasivu-platform/web/src/components/accessibility/__tests__/accessibility.test.tsx":"33","/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/AuthLayout.tsx":"34","/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/EmailVerificationForm.tsx":"35","/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/EnhancedLoginForm.tsx":"36","/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/EnhancedPasswordRecoveryForm.tsx":"37","/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/EnhancedSchoolLoginForm.tsx":"38","/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/ForgotPasswordForm.tsx":"39","/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/LoginForm.tsx":"40","/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/MfaForm.tsx":"41","/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/MultiFactorAuthForm.tsx":"42","/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/MultiStepRegistrationForm.tsx":"43","/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/ProfileManagementForm.tsx":"44","/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/ProtectedRoute.tsx":"45","/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/RegisterForm.tsx":"46","/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/SocialLoginButtons.tsx":"47","/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/index.ts":"48","/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/schemas.ts":"49","/Users/mahesha/Downloads/hasivu-platform/web/src/components/common/ComponentTest.tsx":"50","/Users/mahesha/Downloads/hasivu-platform/web/src/components/common/ErrorBoundary.tsx":"51","/Users/mahesha/Downloads/hasivu-platform/web/src/components/common/LoadingScreen.tsx":"52","/Users/mahesha/Downloads/hasivu-platform/web/src/components/common/ProgressBar.tsx":"53","/Users/mahesha/Downloads/hasivu-platform/web/src/components/common/index.ts":"54","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/ParentDashboard.tsx":"55","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/admin-dashboard.tsx":"56","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/advanced-features.tsx":"57","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/dashboard-demo.tsx":"58","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/enhanced-admin-dashboard-v2.tsx":"59","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/enhanced-admin-dashboard.tsx":"60","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/enhanced-kitchen-dashboard.tsx":"61","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/enhanced-parent-dashboard.tsx":"62","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/enhanced-student-dashboard.tsx":"63","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/index.ts":"64","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/kitchen-dashboard.tsx":"65","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/parent/ParentDashboard.tsx":"66","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/parent/components/ChildManagement.tsx":"67","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/parent/components/NotificationCenter.tsx":"68","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/parent/components/NutritionDashboard.tsx":"69","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/parent/components/OrderHistory.tsx":"70","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/parent/components/OrderTracking.tsx":"71","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/parent/components/PaymentMethods.tsx":"72","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/parent/components/SubscriptionManagement.tsx":"73","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/parent-dashboard.tsx":"74","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/student-dashboard.tsx":"75","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/types.ts":"76","/Users/mahesha/Downloads/hasivu-platform/web/src/components/demo/PaymentIntelligenceDemo.tsx":"77","/Users/mahesha/Downloads/hasivu-platform/web/src/components/demo/RFIDLiveDemo.tsx":"78","/Users/mahesha/Downloads/hasivu-platform/web/src/components/error-boundary/ErrorBoundary.tsx":"79","/Users/mahesha/Downloads/hasivu-platform/web/src/components/home/CTASection.tsx":"80","/Users/mahesha/Downloads/hasivu-platform/web/src/components/home/FeatureCard.tsx":"81","/Users/mahesha/Downloads/hasivu-platform/web/src/components/home/HeroSection.tsx":"82","/Users/mahesha/Downloads/hasivu-platform/web/src/components/home/StatsSection.tsx":"83","/Users/mahesha/Downloads/hasivu-platform/web/src/components/home/TestimonialsSection.tsx":"84","/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/InventoryManagement.tsx":"85","/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/KitchenManagementDashboard.tsx":"86","/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/OrderWorkflowBoard.tsx":"87","/Users/mahesha/Downloads/hasivu-platform/web/src/components/landing/HASIVULandingPage.tsx":"88","/Users/mahesha/Downloads/hasivu-platform/web/src/components/landing/HASIVULandingPageProd.tsx":"89","/Users/mahesha/Downloads/hasivu-platform/web/src/components/landing/ProductionLandingPage.tsx":"90","/Users/mahesha/Downloads/hasivu-platform/web/src/components/layout/Layout.tsx":"91","/Users/mahesha/Downloads/hasivu-platform/web/src/components/layout/app-layout.tsx":"92","/Users/mahesha/Downloads/hasivu-platform/web/src/components/layout/header/main-header.tsx":"93","/Users/mahesha/Downloads/hasivu-platform/web/src/components/layout/header/mobile-menu.tsx":"94","/Users/mahesha/Downloads/hasivu-platform/web/src/components/layout/header/navigation-menu.tsx":"95","/Users/mahesha/Downloads/hasivu-platform/web/src/components/layout/index.ts":"96","/Users/mahesha/Downloads/hasivu-platform/web/src/components/layout/navigation/bottom-tab-nav.tsx":"97","/Users/mahesha/Downloads/hasivu-platform/web/src/components/layout/navigation/breadcrumb-nav.tsx":"98","/Users/mahesha/Downloads/hasivu-platform/web/src/components/layout/sidebar/sidebar-nav.tsx":"99","/Users/mahesha/Downloads/hasivu-platform/web/src/components/layout/sidebar-layout.tsx":"100","/Users/mahesha/Downloads/hasivu-platform/web/src/components/loading/LoadingStates.tsx":"101","/Users/mahesha/Downloads/hasivu-platform/web/src/components/magicui/animated-list.tsx":"102","/Users/mahesha/Downloads/hasivu-platform/web/src/components/magicui/background-beams.tsx":"103","/Users/mahesha/Downloads/hasivu-platform/web/src/components/magicui/bento-grid.tsx":"104","/Users/mahesha/Downloads/hasivu-platform/web/src/components/magicui/marquee.tsx":"105","/Users/mahesha/Downloads/hasivu-platform/web/src/components/magicui/number-ticker.tsx":"106","/Users/mahesha/Downloads/hasivu-platform/web/src/components/magicui/text-generate-effect.tsx":"107","/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/CategoryTabs.tsx":"108","/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/EnhancedMealList.tsx":"109","/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/EnhancedMealOrderingDemo.tsx":"110","/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/MealCard.tsx":"111","/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/MealOrderingDrawer.tsx":"112","/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/MealOrderingInterface.tsx":"113","/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/MealSearchCommand.tsx":"114","/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/NotificationSystem.tsx":"115","/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/NutritionalTooltips.tsx":"116","/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/OrderSummary.tsx":"117","/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/QuantitySelector.tsx":"118","/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/RFIDInterface.tsx":"119","/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/RFIDVerification.tsx":"120","/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/__tests__/enhanced-meal-ordering-integration.test.tsx":"121","/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/types.ts":"122","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/BottomNavigation.tsx":"123","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/BottomSheet.tsx":"124","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/LoadingSkeleton.tsx":"125","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/MobileHeader.tsx":"126","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/MobileLayout.tsx":"127","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/MobileNavSheet.tsx":"128","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/MobileNavigation.tsx":"129","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/MobileOptimizations.tsx":"130","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/MobilePushNotifications.tsx":"131","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/NativeFeatures.tsx":"132","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/OfflineQueue.tsx":"133","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/PWAEnhanced.tsx":"134","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/PWAFeatures.tsx":"135","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/SchoolMobileComponents.tsx":"136","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/SwipeableCard.tsx":"137","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/TouchGestures.tsx":"138","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/TouchOptimized.tsx":"139","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/VirtualScrollList.tsx":"140","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/advanced-mobile-experience.tsx":"141","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/index.ts":"142","/Users/mahesha/Downloads/hasivu-platform/web/src/components/notifications/RealTimeNotifications.tsx":"143","/Users/mahesha/Downloads/hasivu-platform/web/src/components/orders/OrderTracker.tsx":"144","/Users/mahesha/Downloads/hasivu-platform/web/src/components/providers/redux-provider.tsx":"145","/Users/mahesha/Downloads/hasivu-platform/web/src/components/providers/theme-provider.tsx":"146","/Users/mahesha/Downloads/hasivu-platform/web/src/components/rfid/RFIDVerificationSystem.tsx":"147","/Users/mahesha/Downloads/hasivu-platform/web/src/components/rfid/__tests__/RFIDVerificationSystem.test.tsx":"148","/Users/mahesha/Downloads/hasivu-platform/web/src/components/staff/StaffManagementSystem.tsx":"149","/Users/mahesha/Downloads/hasivu-platform/web/src/components/staff/StaffScheduling.tsx":"150","/Users/mahesha/Downloads/hasivu-platform/web/src/components/staff/StaffTasksManagement.tsx":"151","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/__tests__/command.test.tsx":"152","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/__tests__/cross-browser.test.tsx":"153","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/__tests__/drawer.test.tsx":"154","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/__tests__/error-handling.test.tsx":"155","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/__tests__/input-otp.test.tsx":"156","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/__tests__/performance.test.tsx":"157","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/__tests__/popover.test.tsx":"158","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/__tests__/simple.test.tsx":"159","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/__tests__/tooltip.test.tsx":"160","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/accordion.tsx":"161","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/advanced-command.tsx":"162","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/advanced-tooltip.tsx":"163","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/alert-dialog.tsx":"164","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/alert.tsx":"165","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/avatar.tsx":"166","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/badge.tsx":"167","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/breadcrumb.tsx":"168","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/button.tsx":"169","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/calendar.tsx":"170","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/card.tsx":"171","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/carousel.tsx":"172","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/chart.tsx":"173","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/checkbox.tsx":"174","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/collapsible.tsx":"175","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/command.tsx":"176","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/context-menu.tsx":"177","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/dialog.tsx":"178","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/drawer.tsx":"179","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/dropdown-menu.tsx":"180","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/form.tsx":"181","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/hover-card.tsx":"182","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/index.ts":"183","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/input-otp.tsx":"184","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/input.tsx":"185","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/label.tsx":"186","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/loading-states.tsx":"187","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/meal-order-drawer.tsx":"188","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/menubar.tsx":"189","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/navigation-menu.tsx":"190","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/pagination.tsx":"191","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/paper-shaders-background.tsx":"192","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/popover.tsx":"193","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/progress.tsx":"194","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/radio-group.tsx":"195","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/resizable.tsx":"196","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/scroll-area.tsx":"197","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/select.tsx":"198","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/separator.tsx":"199","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/sheet.tsx":"200","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/sidebar.tsx":"201","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/skeleton.tsx":"202","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/slider.tsx":"203","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/smart-popover.tsx":"204","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/sonner.tsx":"205","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/switch.tsx":"206","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/table.tsx":"207","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/tabs.tsx":"208","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/textarea.tsx":"209","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/toast.tsx":"210","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/toggle-group.tsx":"211","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/toggle.tsx":"212","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/tooltip.tsx":"213","/Users/mahesha/Downloads/hasivu-platform/web/src/contexts/AuthContext.tsx":"214","/Users/mahesha/Downloads/hasivu-platform/web/src/contexts/SocketContext.tsx":"215","/Users/mahesha/Downloads/hasivu-platform/web/src/contexts/auth-context.tsx":"216","/Users/mahesha/Downloads/hasivu-platform/web/src/contexts/integration-provider.tsx":"217","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/use-dashboard.ts":"218","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/use-meal-ordering.ts":"219","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/use-payment.ts":"220","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/use-realtime.ts":"221","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/use-rfid.ts":"222","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/use-toast.ts":"223","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useAccessibility.ts":"224","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useApiIntegration.ts":"225","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useAuth.ts":"226","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useMobileAnalytics.ts":"227","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useMobileLayout-clean.ts":"228","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useMobileLayout.ts":"229","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/usePWA.ts":"230","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useRealTimeIntegration.ts":"231","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useSocket.ts":"232","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useTouchOptimization.ts":"233","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/accessibility-testing.ts":"234","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/api-client.ts":"235","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/demo-data.ts":"236","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/design-system.ts":"237","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/enhanced-api-client.ts":"238","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/performance/adaptive-rate-limiter.ts":"239","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/performance/cache-service.ts":"240","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/performance/lambda-optimizer.ts":"241","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/performance.ts":"242","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/seo.ts":"243","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/socket-client.ts":"244","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/test-polyfills.ts":"245","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/test-setup.ts":"246","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/utils-backup.ts":"247","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/utils.ts":"248","/Users/mahesha/Downloads/hasivu-platform/web/src/pages-backup/_app.tsx":"249","/Users/mahesha/Downloads/hasivu-platform/web/src/pages-backup/integration-demo.tsx":"250","/Users/mahesha/Downloads/hasivu-platform/web/src/pages-backup/mobile-demo.tsx":"251","/Users/mahesha/Downloads/hasivu-platform/web/src/pages-backup/mobile-features-demo.tsx":"252","/Users/mahesha/Downloads/hasivu-platform/web/src/pages-backup/offline.tsx":"253","/Users/mahesha/Downloads/hasivu-platform/web/src/pages-backup/test-auth-components.tsx":"254","/Users/mahesha/Downloads/hasivu-platform/web/src/pages-backup/test-components.tsx":"255","/Users/mahesha/Downloads/hasivu-platform/web/src/services/api/hasivu-api.service.ts":"256","/Users/mahesha/Downloads/hasivu-platform/web/src/services/api.ts":"257","/Users/mahesha/Downloads/hasivu-platform/web/src/store/index.ts":"258","/Users/mahesha/Downloads/hasivu-platform/web/src/store/slices/analyticsSlice.ts":"259","/Users/mahesha/Downloads/hasivu-platform/web/src/store/slices/authSlice.ts":"260","/Users/mahesha/Downloads/hasivu-platform/web/src/store/slices/menuSlice.ts":"261","/Users/mahesha/Downloads/hasivu-platform/web/src/store/slices/notificationSlice.ts":"262","/Users/mahesha/Downloads/hasivu-platform/web/src/store/slices/orderSlice.ts":"263","/Users/mahesha/Downloads/hasivu-platform/web/src/store/slices/paymentSlice.ts":"264","/Users/mahesha/Downloads/hasivu-platform/web/src/store/slices/rfidSlice.ts":"265","/Users/mahesha/Downloads/hasivu-platform/web/src/store/slices/uiSlice.ts":"266","/Users/mahesha/Downloads/hasivu-platform/web/src/styles/theme.ts":"267","/Users/mahesha/Downloads/hasivu-platform/web/src/types/auth.ts":"268","/Users/mahesha/Downloads/hasivu-platform/web/src/types/dashboard.ts":"269","/Users/mahesha/Downloads/hasivu-platform/web/src/types/navigation.ts":"270","/Users/mahesha/Downloads/hasivu-platform/web/src/utils/accessibility.ts":"271","/Users/mahesha/Downloads/hasivu-platform/web/src/utils/analytics.ts":"272","/Users/mahesha/Downloads/hasivu-platform/web/src/utils/api.ts":"273","/Users/mahesha/Downloads/hasivu-platform/web/src/utils/constants.ts":"274","/Users/mahesha/Downloads/hasivu-platform/web/src/utils/createEmotionCache.ts":"275","/Users/mahesha/Downloads/hasivu-platform/web/src/utils/dataMigration.ts":"276","/Users/mahesha/Downloads/hasivu-platform/web/src/utils/formatCurrency.ts":"277","/Users/mahesha/Downloads/hasivu-platform/web/src/utils/helpers.ts":"278","/Users/mahesha/Downloads/hasivu-platform/web/src/utils/index.ts":"279","/Users/mahesha/Downloads/hasivu-platform/web/src/utils/validators.ts":"280","/Users/mahesha/Downloads/hasivu-platform/web/src/app/blend/page.tsx":"281","/Users/mahesha/Downloads/hasivu-platform/web/src/app/sprrrint/page.tsx":"282","/Users/mahesha/Downloads/hasivu-platform/web/src/app/startwell/page.tsx":"283","/Users/mahesha/Downloads/hasivu-platform/web/src/components/landing/HybridLandingPage.tsx":"284","/Users/mahesha/Downloads/hasivu-platform/web/src/components/landing/SprrrintInspiredLandingPage.tsx":"285","/Users/mahesha/Downloads/hasivu-platform/web/src/components/landing/StartwellInspiredLandingPage.tsx":"286","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/analytics.ts":"287","/Users/mahesha/Downloads/hasivu-platform/web/components/vendor-marketplace/VendorCard.tsx":"288","/Users/mahesha/Downloads/hasivu-platform/web/components/vendor-marketplace/VendorSearchInterface.tsx":"289","/Users/mahesha/Downloads/hasivu-platform/web/src/app/admin/feature-flags/page.tsx":"290","/Users/mahesha/Downloads/hasivu-platform/web/src/app/administration/layout.tsx":"291","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/analytics/business-intelligence/route.ts":"292","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/analytics/cross-school/route.ts":"293","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/analytics/executive-dashboard/route.ts":"294","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/analytics/federated-learning/route.ts":"295","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/analytics/orchestrator/route.ts":"296","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/analytics/payments-dashboard/route.ts":"297","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/analytics/performance-benchmarking/route.ts":"298","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/analytics/predictive-insights/route.ts":"299","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/analytics/real-time-benchmarking/route.ts":"300","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/analytics/revenue-optimization/route.ts":"301","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/analytics/strategic-insights/route.ts":"302","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/auth/change-password/route.ts":"303","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/auth/check/route.ts":"304","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/auth/forgot-password/route.ts":"305","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/auth/login/route.ts":"306","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/auth/logout/route.ts":"307","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/auth/profile/route.ts":"308","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/auth/register/route.ts":"309","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/auth/reset-password/route.ts":"310","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/auth/verify-email/route.ts":"311","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/feature-flags/[key]/route.ts":"312","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/kitchen/route.ts":"313","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/nutrition/analyze/route.ts":"314","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/nutrition/compliance/route.ts":"315","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/nutrition/optimize-meal/route.ts":"316","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/nutrition/recommendations/route.ts":"317","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/nutrition/trends/route.ts":"318","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/orders/[orderId]/route.ts":"319","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/orders/route.ts":"320","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/payments/analytics/route.ts":"321","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/payments/orders/route.ts":"322","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/payments/refund/route.ts":"323","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/payments/verify/route.ts":"324","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/payments/webhook/route.ts":"325","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/rfid/bulk-import/route.ts":"326","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/rfid/cards/route.ts":"327","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/rfid/delivery-verification/route.ts":"328","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/rfid/verify/route.ts":"329","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/schools/[schoolId]/route.ts":"330","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/schools/route.ts":"331","/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/status/route.ts":"332","/Users/mahesha/Downloads/hasivu-platform/web/src/app/auth/layout.tsx":"333","/Users/mahesha/Downloads/hasivu-platform/web/src/app/auth/loading.tsx":"334","/Users/mahesha/Downloads/hasivu-platform/web/src/app/auth/login/admin/page.tsx":"335","/Users/mahesha/Downloads/hasivu-platform/web/src/app/auth/login/kitchen/page.tsx":"336","/Users/mahesha/Downloads/hasivu-platform/web/src/app/auth/login/parent/page.tsx":"337","/Users/mahesha/Downloads/hasivu-platform/web/src/app/auth/login/vendor/page.tsx":"338","/Users/mahesha/Downloads/hasivu-platform/web/src/app/auth/login-safari/page.tsx":"339","/Users/mahesha/Downloads/hasivu-platform/web/src/app/daily-menu/page.tsx":"340","/Users/mahesha/Downloads/hasivu-platform/web/src/app/dashboard/school-admin/page.tsx":"341","/Users/mahesha/Downloads/hasivu-platform/web/src/app/dashboard/student/page.tsx":"342","/Users/mahesha/Downloads/hasivu-platform/web/src/app/dashboard/vendor/page.tsx":"343","/Users/mahesha/Downloads/hasivu-platform/web/src/app/login/page.tsx":"344","/Users/mahesha/Downloads/hasivu-platform/web/src/app/register/page.tsx":"345","/Users/mahesha/Downloads/hasivu-platform/web/src/app/test-fixes/page.tsx":"346","/Users/mahesha/Downloads/hasivu-platform/web/src/components/DailyMenuDisplay.tsx":"347","/Users/mahesha/Downloads/hasivu-platform/web/src/components/DatePicker.tsx":"348","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ErrorBoundary.tsx":"349","/Users/mahesha/Downloads/hasivu-platform/web/src/components/administration/AdminNavigation.tsx":"350","/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/PasswordStrengthIndicator.tsx":"351","/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/ProductionLoginForm.tsx":"352","/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/ProductionRegisterForm.tsx":"353","/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/SafariCompatibleLoginForm.tsx":"354","/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/__tests__/LoginForm.test.tsx":"355","/Users/mahesha/Downloads/hasivu-platform/web/src/components/cart/ShoppingCartSidebar.tsx":"356","/Users/mahesha/Downloads/hasivu-platform/web/src/components/checkout/CheckoutFlow.tsx":"357","/Users/mahesha/Downloads/hasivu-platform/web/src/components/currency/CurrencySettings.tsx":"358","/Users/mahesha/Downloads/hasivu-platform/web/src/components/currency/index.ts":"359","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/advanced-visualization-engine.tsx":"360","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/ai-powered-insights-platform.tsx":"361","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/business-intelligence-dashboard.tsx":"362","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/index.tsx":"363","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/integration-api-layer.tsx":"364","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/self-service-analytics-interface.tsx":"365","/Users/mahesha/Downloads/hasivu-platform/web/src/components/error-boundary/index.ts":"366","/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/KitchenAutomationEngine.tsx":"367","/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/KitchenPerformanceMetrics.tsx":"368","/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/KitchenRealTimeMonitor.tsx":"369","/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/WorkflowColumn.tsx":"370","/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/WorkflowOrderCard.tsx":"371","/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/__tests__/OrderWorkflowBoard.test.tsx":"372","/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/config.ts":"373","/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/types.ts":"374","/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/utils.ts":"375","/Users/mahesha/Downloads/hasivu-platform/web/src/components/landing/LandingPageFeatures.tsx":"376","/Users/mahesha/Downloads/hasivu-platform/web/src/components/landing/LandingPageHero.tsx":"377","/Users/mahesha/Downloads/hasivu-platform/web/src/components/landing/OptimizedLandingPage.tsx":"378","/Users/mahesha/Downloads/hasivu-platform/web/src/components/notifications/CommunicationAnalytics.tsx":"379","/Users/mahesha/Downloads/hasivu-platform/web/src/components/notifications/EmailCommunication.tsx":"380","/Users/mahesha/Downloads/hasivu-platform/web/src/components/notifications/NotificationCenter.tsx":"381","/Users/mahesha/Downloads/hasivu-platform/web/src/components/notifications/NotificationDashboard.tsx":"382","/Users/mahesha/Downloads/hasivu-platform/web/src/components/notifications/SMSCommunication.tsx":"383","/Users/mahesha/Downloads/hasivu-platform/web/src/components/notifications/WhatsAppIntegration.tsx":"384","/Users/mahesha/Downloads/hasivu-platform/web/src/components/onboarding/EnhancedOnboardingFlow.tsx":"385","/Users/mahesha/Downloads/hasivu-platform/web/src/components/onboarding/steps/AdminSetupStep.tsx":"386","/Users/mahesha/Downloads/hasivu-platform/web/src/components/onboarding/steps/CompletionStep.tsx":"387","/Users/mahesha/Downloads/hasivu-platform/web/src/components/onboarding/steps/IntegrationTestStep.tsx":"388","/Users/mahesha/Downloads/hasivu-platform/web/src/components/onboarding/steps/RFIDSetupStep.tsx":"389","/Users/mahesha/Downloads/hasivu-platform/web/src/components/onboarding/steps/StakeholderSetupStep.tsx":"390","/Users/mahesha/Downloads/hasivu-platform/web/src/components/orders/OrderCancellationModal.tsx":"391","/Users/mahesha/Downloads/hasivu-platform/web/src/components/orders/OrderCard.tsx":"392","/Users/mahesha/Downloads/hasivu-platform/web/src/components/orders/OrderCreationForm.tsx":"393","/Users/mahesha/Downloads/hasivu-platform/web/src/components/payment/PartialPaymentManager.tsx":"394","/Users/mahesha/Downloads/hasivu-platform/web/src/components/payments/BillingDashboard.tsx":"395","/Users/mahesha/Downloads/hasivu-platform/web/src/components/payments/PaymentAnalyticsDashboard.tsx":"396","/Users/mahesha/Downloads/hasivu-platform/web/src/components/payments/PaymentDashboard.tsx":"397","/Users/mahesha/Downloads/hasivu-platform/web/src/components/payments/PaymentForm.tsx":"398","/Users/mahesha/Downloads/hasivu-platform/web/src/components/payments/PaymentSecurityDashboard.tsx":"399","/Users/mahesha/Downloads/hasivu-platform/web/src/components/payments/PaymentTestingDashboard.tsx":"400","/Users/mahesha/Downloads/hasivu-platform/web/src/components/payments/SubscriptionManagementUI.tsx":"401","/Users/mahesha/Downloads/hasivu-platform/web/src/components/payments/SubscriptionManager.tsx":"402","/Users/mahesha/Downloads/hasivu-platform/web/src/components/reporting/AdvancedReportingDashboard.tsx":"403","/Users/mahesha/Downloads/hasivu-platform/web/src/components/reporting/InsightCard.tsx":"404","/Users/mahesha/Downloads/hasivu-platform/web/src/components/rfid/DeliveryTracking.tsx":"405","/Users/mahesha/Downloads/hasivu-platform/web/src/components/rfid/DeliveryVerification.tsx":"406","/Users/mahesha/Downloads/hasivu-platform/web/src/components/rfid/ParentDashboard.tsx":"407","/Users/mahesha/Downloads/hasivu-platform/web/src/components/rfid/RFIDCardManagement.tsx":"408","/Users/mahesha/Downloads/hasivu-platform/web/src/components/rfid/RFIDScanIndicator.tsx":"409","/Users/mahesha/Downloads/hasivu-platform/web/src/components/security/SecurityDashboard.tsx":"410","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/accessible-ui.tsx":"411","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/cart-sidebar.tsx":"412","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/date-range-picker.tsx":"413","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/menu-header.tsx":"414","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/menu-search-filter.tsx":"415","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/mobile-optimized.tsx":"416","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/optimized-background.tsx":"417","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/spinner.tsx":"418","/Users/mahesha/Downloads/hasivu-platform/web/src/contexts/__tests__/AuthContext.test.tsx":"419","/Users/mahesha/Downloads/hasivu-platform/web/src/contexts/enhanced-auth-context.tsx":"420","/Users/mahesha/Downloads/hasivu-platform/web/src/contexts/production-auth-context.tsx":"421","/Users/mahesha/Downloads/hasivu-platform/web/src/contexts/secure-auth-context.tsx":"422","/Users/mahesha/Downloads/hasivu-platform/web/src/contexts/shopping-cart-context.tsx":"423","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/__tests__/useAuth.test.tsx":"424","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/api/reporting.ts":"425","/Users/mahesha/Downloads/hasivu-platform/web/src/services/nutritional-compliance.types.ts":"426","/Users/mahesha/Downloads/hasivu-platform/web/src/types/business-intelligence.ts":"427","/Users/mahesha/Downloads/hasivu-platform/web/src/types/feature-flags.ts":"428","/Users/mahesha/Downloads/hasivu-platform/web/src/types/json-types.ts":"429","/Users/mahesha/Downloads/hasivu-platform/web/src/types/menu.types.ts":"430","/Users/mahesha/Downloads/hasivu-platform/web/src/types/orders.ts":"431","/Users/mahesha/Downloads/hasivu-platform/web/src/utils/password-validation.ts":"432","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useDailyMenu.ts":"433","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useFeatureFlag.ts":"434","/Users/mahesha/Downloads/hasivu-platform/web/src/services/api/api-client.ts":"435","/Users/mahesha/Downloads/hasivu-platform/web/src/services/auth-api.service.ts":"436","/Users/mahesha/Downloads/hasivu-platform/web/src/services/feature-flag.service.ts":"437","/Users/mahesha/Downloads/hasivu-platform/web/src/types/administration.ts":"438","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/use-toast.ts":"439","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useAnalytics.ts":"440","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useVendorSearch.ts":"441","/Users/mahesha/Downloads/hasivu-platform/web/components/vendor-marketplace/VendorAnalytics.tsx":"442","/Users/mahesha/Downloads/hasivu-platform/web/components/vendor-marketplace/VendorComparison.tsx":"443"},{"size":326,"mtime":1760031500512,"results":"444","hashOfConfig":"445"},{"size":8312,"mtime":1760532697640,"results":"446","hashOfConfig":"445"},{"size":2766,"mtime":1760805451194,"results":"447","hashOfConfig":"445"},{"size":1543,"mtime":1760805668746,"results":"448","hashOfConfig":"445"},{"size":1593,"mtime":1760805459386,"results":"449","hashOfConfig":"445"},{"size":1970,"mtime":1760532697658,"results":"450","hashOfConfig":"445"},{"size":2338,"mtime":1760532697659,"results":"451","hashOfConfig":"445"},{"size":149,"mtime":1760031500516,"results":"452","hashOfConfig":"445"},{"size":2350,"mtime":1760532697659,"results":"453","hashOfConfig":"445"},{"size":196,"mtime":1760532697660,"results":"454","hashOfConfig":"445"},{"size":338,"mtime":1760031500530,"results":"455","hashOfConfig":"445"},{"size":215,"mtime":1760532697660,"results":"456","hashOfConfig":"445"},{"size":6597,"mtime":1760532697660,"results":"457","hashOfConfig":"445"},{"size":19345,"mtime":1760532697661,"results":"458","hashOfConfig":"445"},{"size":11306,"mtime":1760532697661,"results":"459","hashOfConfig":"445"},{"size":187,"mtime":1760532697662,"results":"460","hashOfConfig":"445"},{"size":22864,"mtime":1760532697663,"results":"461","hashOfConfig":"445"},{"size":1231,"mtime":1760532697663,"results":"462","hashOfConfig":"445"},{"size":199,"mtime":1760532697664,"results":"463","hashOfConfig":"445"},{"size":20581,"mtime":1760532697664,"results":"464","hashOfConfig":"445"},{"size":19574,"mtime":1760532697664,"results":"465","hashOfConfig":"445"},{"size":18941,"mtime":1760532697665,"results":"466","hashOfConfig":"445"},{"size":19771,"mtime":1760532697665,"results":"467","hashOfConfig":"445"},{"size":19630,"mtime":1760798114678,"results":"468","hashOfConfig":"445"},{"size":23261,"mtime":1760532697666,"results":"469","hashOfConfig":"445"},{"size":13031,"mtime":1760532697666,"results":"470","hashOfConfig":"445"},{"size":24511,"mtime":1760532697666,"results":"471","hashOfConfig":"445"},{"size":8031,"mtime":1760532697667,"results":"472","hashOfConfig":"445"},{"size":10721,"mtime":1760532697668,"results":"473","hashOfConfig":"445"},{"size":9075,"mtime":1760532697668,"results":"474","hashOfConfig":"445"},{"size":4598,"mtime":1760532697668,"results":"475","hashOfConfig":"445"},{"size":2904,"mtime":1760532697669,"results":"476","hashOfConfig":"445"},{"size":17768,"mtime":1760532697669,"results":"477","hashOfConfig":"445"},{"size":10470,"mtime":1760532697670,"results":"478","hashOfConfig":"445"},{"size":8221,"mtime":1760532697670,"results":"479","hashOfConfig":"445"},{"size":15983,"mtime":1760532697671,"results":"480","hashOfConfig":"445"},{"size":20535,"mtime":1760532697671,"results":"481","hashOfConfig":"445"},{"size":13737,"mtime":1760532697672,"results":"482","hashOfConfig":"445"},{"size":13194,"mtime":1760532697672,"results":"483","hashOfConfig":"445"},{"size":13421,"mtime":1760532697672,"results":"484","hashOfConfig":"445"},{"size":13497,"mtime":1760532697673,"results":"485","hashOfConfig":"445"},{"size":23344,"mtime":1760532697673,"results":"486","hashOfConfig":"445"},{"size":25521,"mtime":1760532697673,"results":"487","hashOfConfig":"445"},{"size":32715,"mtime":1760532697674,"results":"488","hashOfConfig":"445"},{"size":11221,"mtime":1757075026123,"results":"489","hashOfConfig":"490"},{"size":18314,"mtime":1760532697674,"results":"491","hashOfConfig":"445"},{"size":8408,"mtime":1760532697674,"results":"492","hashOfConfig":"445"},{"size":1806,"mtime":1760532697675,"results":"493","hashOfConfig":"445"},{"size":10056,"mtime":1760532697675,"results":"494","hashOfConfig":"445"},{"size":7516,"mtime":1760532697676,"results":"495","hashOfConfig":"445"},{"size":18291,"mtime":1760532697676,"results":"496","hashOfConfig":"445"},{"size":9461,"mtime":1760532697676,"results":"497","hashOfConfig":"445"},{"size":12123,"mtime":1760532697676,"results":"498","hashOfConfig":"445"},{"size":526,"mtime":1760532697677,"results":"499","hashOfConfig":"445"},{"size":69457,"mtime":1760532697679,"results":"500","hashOfConfig":"445"},{"size":34278,"mtime":1760532697679,"results":"501","hashOfConfig":"445"},{"size":28410,"mtime":1760532697679,"results":"502","hashOfConfig":"445"},{"size":10537,"mtime":1760532697680,"results":"503","hashOfConfig":"445"},{"size":51417,"mtime":1757179573760,"results":"504","hashOfConfig":"490"},{"size":66451,"mtime":1756995991658,"results":"505","hashOfConfig":"490"},{"size":39986,"mtime":1760532697681,"results":"506","hashOfConfig":"445"},{"size":36649,"mtime":1760532697681,"results":"507","hashOfConfig":"445"},{"size":26069,"mtime":1760532697681,"results":"508","hashOfConfig":"445"},{"size":666,"mtime":1760532697681,"results":"509","hashOfConfig":"445"},{"size":32679,"mtime":1760532697682,"results":"510","hashOfConfig":"445"},{"size":15359,"mtime":1760532697682,"results":"511","hashOfConfig":"445"},{"size":904,"mtime":1760532697682,"results":"512","hashOfConfig":"445"},{"size":857,"mtime":1760532697682,"results":"513","hashOfConfig":"445"},{"size":854,"mtime":1760532697682,"results":"514","hashOfConfig":"445"},{"size":515,"mtime":1760532697683,"results":"515","hashOfConfig":"445"},{"size":756,"mtime":1760532697683,"results":"516","hashOfConfig":"445"},{"size":904,"mtime":1760532697683,"results":"517","hashOfConfig":"445"},{"size":1128,"mtime":1760532697683,"results":"518","hashOfConfig":"445"},{"size":28922,"mtime":1760532697682,"results":"519","hashOfConfig":"445"},{"size":22816,"mtime":1760532697684,"results":"520","hashOfConfig":"445"},{"size":1073,"mtime":1760532697684,"results":"521","hashOfConfig":"445"},{"size":26070,"mtime":1760532697684,"results":"522","hashOfConfig":"445"},{"size":18813,"mtime":1760532697684,"results":"523","hashOfConfig":"445"},{"size":10392,"mtime":1757119277025,"results":"524","hashOfConfig":"490"},{"size":8244,"mtime":1760532697686,"results":"525","hashOfConfig":"445"},{"size":3608,"mtime":1760532697686,"results":"526","hashOfConfig":"445"},{"size":7207,"mtime":1760532697686,"results":"527","hashOfConfig":"445"},{"size":5522,"mtime":1760532697686,"results":"528","hashOfConfig":"445"},{"size":7815,"mtime":1760532697686,"results":"529","hashOfConfig":"445"},{"size":29502,"mtime":1760532697687,"results":"530","hashOfConfig":"445"},{"size":28111,"mtime":1760532697687,"results":"531","hashOfConfig":"445"},{"size":4395,"mtime":1760532697688,"results":"532","hashOfConfig":"445"},{"size":24150,"mtime":1760532697690,"results":"533","hashOfConfig":"445"},{"size":20952,"mtime":1760532697690,"results":"534","hashOfConfig":"445"},{"size":21591,"mtime":1760532697694,"results":"535","hashOfConfig":"445"},{"size":3772,"mtime":1760532697695,"results":"536","hashOfConfig":"445"},{"size":4807,"mtime":1760532697695,"results":"537","hashOfConfig":"445"},{"size":15035,"mtime":1760532697695,"results":"538","hashOfConfig":"445"},{"size":14135,"mtime":1760532697696,"results":"539","hashOfConfig":"445"},{"size":10256,"mtime":1760532697696,"results":"540","hashOfConfig":"445"},{"size":698,"mtime":1760532697696,"results":"541","hashOfConfig":"445"},{"size":6393,"mtime":1760532697696,"results":"542","hashOfConfig":"445"},{"size":5175,"mtime":1760532697696,"results":"543","hashOfConfig":"445"},{"size":14058,"mtime":1760532697697,"results":"544","hashOfConfig":"445"},{"size":5768,"mtime":1760532697696,"results":"545","hashOfConfig":"445"},{"size":10226,"mtime":1760532697697,"results":"546","hashOfConfig":"445"},{"size":1438,"mtime":1760532697697,"results":"547","hashOfConfig":"445"},{"size":1507,"mtime":1760532697697,"results":"548","hashOfConfig":"445"},{"size":1298,"mtime":1760532697697,"results":"549","hashOfConfig":"445"},{"size":1470,"mtime":1760532697698,"results":"550","hashOfConfig":"445"},{"size":1505,"mtime":1760532697698,"results":"551","hashOfConfig":"445"},{"size":1379,"mtime":1760532697698,"results":"552","hashOfConfig":"445"},{"size":16060,"mtime":1760532697699,"results":"553","hashOfConfig":"445"},{"size":18210,"mtime":1760532697699,"results":"554","hashOfConfig":"445"},{"size":22603,"mtime":1760532697699,"results":"555","hashOfConfig":"445"},{"size":32930,"mtime":1760532697699,"results":"556","hashOfConfig":"445"},{"size":11337,"mtime":1760532697699,"results":"557","hashOfConfig":"445"},{"size":19855,"mtime":1760532697700,"results":"558","hashOfConfig":"445"},{"size":7816,"mtime":1760532697700,"results":"559","hashOfConfig":"445"},{"size":13393,"mtime":1760532697700,"results":"560","hashOfConfig":"445"},{"size":10408,"mtime":1760532697700,"results":"561","hashOfConfig":"445"},{"size":27764,"mtime":1760532697701,"results":"562","hashOfConfig":"445"},{"size":14794,"mtime":1760532697701,"results":"563","hashOfConfig":"445"},{"size":15217,"mtime":1760532697701,"results":"564","hashOfConfig":"445"},{"size":16275,"mtime":1760532697702,"results":"565","hashOfConfig":"445"},{"size":37152,"mtime":1760532697702,"results":"566","hashOfConfig":"445"},{"size":4472,"mtime":1760532697702,"results":"567","hashOfConfig":"445"},{"size":4854,"mtime":1755153851095,"results":"568","hashOfConfig":"490"},{"size":12408,"mtime":1755153851091,"results":"569","hashOfConfig":"490"},{"size":8078,"mtime":1755153851096,"results":"570","hashOfConfig":"490"},{"size":10292,"mtime":1755153851094,"results":"571","hashOfConfig":"490"},{"size":10411,"mtime":1757118896146,"results":"572","hashOfConfig":"490"},{"size":12294,"mtime":1755153851092,"results":"573","hashOfConfig":"490"},{"size":5605,"mtime":1757118879410,"results":"574","hashOfConfig":"490"},{"size":18393,"mtime":1755153851094,"results":"575","hashOfConfig":"490"},{"size":25557,"mtime":1755153851092,"results":"576","hashOfConfig":"490"},{"size":19108,"mtime":1755153851095,"results":"577","hashOfConfig":"490"},{"size":22432,"mtime":1755153851092,"results":"578","hashOfConfig":"490"},{"size":19303,"mtime":1755153851093,"results":"579","hashOfConfig":"490"},{"size":15957,"mtime":1755153851094,"results":"580","hashOfConfig":"490"},{"size":22322,"mtime":1755153851091,"results":"581","hashOfConfig":"490"},{"size":6946,"mtime":1755153851093,"results":"582","hashOfConfig":"490"},{"size":18791,"mtime":1755153851093,"results":"583","hashOfConfig":"490"},{"size":14175,"mtime":1755153851091,"results":"584","hashOfConfig":"490"},{"size":7748,"mtime":1755153851096,"results":"585","hashOfConfig":"490"},{"size":41231,"mtime":1755446255216,"results":"586","hashOfConfig":"490"},{"size":998,"mtime":1755242762120,"results":"587","hashOfConfig":"490"},{"size":17464,"mtime":1760532697707,"results":"588","hashOfConfig":"445"},{"size":14260,"mtime":1760532697715,"results":"589","hashOfConfig":"445"},{"size":400,"mtime":1760532697717,"results":"590","hashOfConfig":"445"},{"size":332,"mtime":1760532697717,"results":"591","hashOfConfig":"445"},{"size":18272,"mtime":1760532697720,"results":"592","hashOfConfig":"445"},{"size":5719,"mtime":1760532697720,"results":"593","hashOfConfig":"445"},{"size":34164,"mtime":1757168273287,"results":"594","hashOfConfig":"490"},{"size":27237,"mtime":1760532697721,"results":"595","hashOfConfig":"445"},{"size":26209,"mtime":1760532697721,"results":"596","hashOfConfig":"445"},{"size":22374,"mtime":1760532697722,"results":"597","hashOfConfig":"445"},{"size":20284,"mtime":1760532697723,"results":"598","hashOfConfig":"445"},{"size":27112,"mtime":1760532697723,"results":"599","hashOfConfig":"445"},{"size":26916,"mtime":1755154007057,"results":"600","hashOfConfig":"490"},{"size":26202,"mtime":1760532697723,"results":"601","hashOfConfig":"445"},{"size":20745,"mtime":1760532697723,"results":"602","hashOfConfig":"445"},{"size":29594,"mtime":1760532697723,"results":"603","hashOfConfig":"445"},{"size":336,"mtime":1760532697724,"results":"604","hashOfConfig":"445"},{"size":26551,"mtime":1760532697724,"results":"605","hashOfConfig":"445"},{"size":1990,"mtime":1760532697724,"results":"606","hashOfConfig":"445"},{"size":7511,"mtime":1760532697724,"results":"607","hashOfConfig":"445"},{"size":11300,"mtime":1760532697724,"results":"608","hashOfConfig":"445"},{"size":4365,"mtime":1760532697724,"results":"609","hashOfConfig":"445"},{"size":1573,"mtime":1760532697725,"results":"610","hashOfConfig":"445"},{"size":1412,"mtime":1760532697725,"results":"611","hashOfConfig":"445"},{"size":1114,"mtime":1760532697725,"results":"612","hashOfConfig":"445"},{"size":2745,"mtime":1760532697725,"results":"613","hashOfConfig":"445"},{"size":6714,"mtime":1760532697725,"results":"614","hashOfConfig":"445"},{"size":2607,"mtime":1760532697725,"results":"615","hashOfConfig":"445"},{"size":3232,"mtime":1760532697725,"results":"616","hashOfConfig":"445"},{"size":6184,"mtime":1760532697726,"results":"617","hashOfConfig":"445"},{"size":10281,"mtime":1760532697726,"results":"618","hashOfConfig":"445"},{"size":1067,"mtime":1760532697726,"results":"619","hashOfConfig":"445"},{"size":305,"mtime":1760532697726,"results":"620","hashOfConfig":"445"},{"size":4870,"mtime":1760532697726,"results":"621","hashOfConfig":"445"},{"size":7422,"mtime":1760532697727,"results":"622","hashOfConfig":"445"},{"size":3820,"mtime":1760532697727,"results":"623","hashOfConfig":"445"},{"size":2987,"mtime":1760532697727,"results":"624","hashOfConfig":"445"},{"size":7607,"mtime":1760532697727,"results":"625","hashOfConfig":"445"},{"size":4137,"mtime":1760532697727,"results":"626","hashOfConfig":"445"},{"size":1271,"mtime":1760532697727,"results":"627","hashOfConfig":"445"},{"size":1795,"mtime":1755309436018,"results":"628","hashOfConfig":"490"},{"size":2276,"mtime":1760532697728,"results":"629","hashOfConfig":"445"},{"size":3120,"mtime":1760532697728,"results":"630","hashOfConfig":"445"},{"size":715,"mtime":1760532697728,"results":"631","hashOfConfig":"445"},{"size":13386,"mtime":1760532697729,"results":"632","hashOfConfig":"445"},{"size":15110,"mtime":1760532697729,"results":"633","hashOfConfig":"445"},{"size":8536,"mtime":1760532697729,"results":"634","hashOfConfig":"445"},{"size":5109,"mtime":1760532697730,"results":"635","hashOfConfig":"445"},{"size":2762,"mtime":1760532697730,"results":"636","hashOfConfig":"445"},{"size":2261,"mtime":1760532697730,"results":"637","hashOfConfig":"445"},{"size":1303,"mtime":1760532697730,"results":"638","hashOfConfig":"445"},{"size":780,"mtime":1760532697730,"results":"639","hashOfConfig":"445"},{"size":1461,"mtime":1760532697730,"results":"640","hashOfConfig":"445"},{"size":1714,"mtime":1760532697731,"results":"641","hashOfConfig":"445"},{"size":1649,"mtime":1760532697731,"results":"642","hashOfConfig":"445"},{"size":5614,"mtime":1760532697731,"results":"643","hashOfConfig":"445"},{"size":737,"mtime":1760532697731,"results":"644","hashOfConfig":"445"},{"size":4228,"mtime":1760532697731,"results":"645","hashOfConfig":"445"},{"size":23965,"mtime":1760532697731,"results":"646","hashOfConfig":"445"},{"size":234,"mtime":1760532697732,"results":"647","hashOfConfig":"445"},{"size":1261,"mtime":1760532697732,"results":"648","hashOfConfig":"445"},{"size":14525,"mtime":1760532697732,"results":"649","hashOfConfig":"445"},{"size":1151,"mtime":1760532697732,"results":"650","hashOfConfig":"445"},{"size":1160,"mtime":1760532697732,"results":"651","hashOfConfig":"445"},{"size":2721,"mtime":1760532697733,"results":"652","hashOfConfig":"445"},{"size":1909,"mtime":1760532697733,"results":"653","hashOfConfig":"445"},{"size":776,"mtime":1760532697733,"results":"654","hashOfConfig":"445"},{"size":4865,"mtime":1760532697733,"results":"655","hashOfConfig":"445"},{"size":1995,"mtime":1760532697733,"results":"656","hashOfConfig":"445"},{"size":1536,"mtime":1760532697733,"results":"657","hashOfConfig":"445"},{"size":1219,"mtime":1760532697734,"results":"658","hashOfConfig":"445"},{"size":11125,"mtime":1760532697734,"results":"659","hashOfConfig":"445"},{"size":16642,"mtime":1760532697734,"results":"660","hashOfConfig":"445"},{"size":12052,"mtime":1760532697735,"results":"661","hashOfConfig":"445"},{"size":11030,"mtime":1760532697735,"results":"662","hashOfConfig":"445"},{"size":3504,"mtime":1755309436019,"results":"663","hashOfConfig":"490"},{"size":5115,"mtime":1755309436019,"results":"664","hashOfConfig":"490"},{"size":2028,"mtime":1755309436019,"results":"665","hashOfConfig":"490"},{"size":2004,"mtime":1755309436019,"results":"666","hashOfConfig":"490"},{"size":1450,"mtime":1755309436019,"results":"667","hashOfConfig":"490"},{"size":3924,"mtime":1760532697737,"results":"668","hashOfConfig":"445"},{"size":4616,"mtime":1755309436019,"results":"669","hashOfConfig":"490"},{"size":16236,"mtime":1760532697737,"results":"670","hashOfConfig":"445"},{"size":5707,"mtime":1760532697737,"results":"671","hashOfConfig":"445"},{"size":1627,"mtime":1755309436020,"results":"672","hashOfConfig":"490"},{"size":769,"mtime":1755309436020,"results":"673","hashOfConfig":"490"},{"size":1223,"mtime":1760532697738,"results":"674","hashOfConfig":"445"},{"size":2098,"mtime":1755309436020,"results":"675","hashOfConfig":"490"},{"size":2102,"mtime":1755309436020,"results":"676","hashOfConfig":"490"},{"size":1789,"mtime":1760532697738,"results":"677","hashOfConfig":"445"},{"size":4584,"mtime":1755309436020,"results":"678","hashOfConfig":"490"},{"size":18151,"mtime":1760532697739,"results":"679","hashOfConfig":"445"},{"size":11827,"mtime":1760532697739,"results":"680","hashOfConfig":"445"},{"size":1478,"mtime":1755309436021,"results":"681","hashOfConfig":"490"},{"size":9609,"mtime":1760799199949,"results":"682","hashOfConfig":"445"},{"size":1864,"mtime":1755309436021,"results":"683","hashOfConfig":"490"},{"size":2243,"mtime":1755309436021,"results":"684","hashOfConfig":"490"},{"size":3549,"mtime":1755309436021,"results":"685","hashOfConfig":"490"},{"size":4623,"mtime":1755309436021,"results":"686","hashOfConfig":"490"},{"size":16000,"mtime":1760532697741,"results":"687","hashOfConfig":"445"},{"size":16210,"mtime":1760532697742,"results":"688","hashOfConfig":"445"},{"size":3395,"mtime":1760532697742,"results":"689","hashOfConfig":"445"},{"size":2418,"mtime":1755309436022,"results":"690","hashOfConfig":"490"},{"size":3832,"mtime":1755309436022,"results":"691","hashOfConfig":"490"},{"size":1539,"mtime":1755309436022,"results":"692","hashOfConfig":"490"},{"size":1474,"mtime":1760532697742,"results":"693","hashOfConfig":"445"},{"size":9918,"mtime":1760532697742,"results":"694","hashOfConfig":"445"},{"size":18592,"mtime":1755153851059,"results":"695","hashOfConfig":"490"},{"size":16518,"mtime":1760532697743,"results":"696","hashOfConfig":"445"},{"size":18664,"mtime":1760532697743,"results":"697","hashOfConfig":"445"},{"size":11489,"mtime":1760532697743,"results":"698","hashOfConfig":"445"},{"size":13820,"mtime":1760532697743,"results":"699","hashOfConfig":"445"},{"size":7690,"mtime":1760532697743,"results":"700","hashOfConfig":"445"},{"size":15503,"mtime":1760532697744,"results":"701","hashOfConfig":"445"},{"size":27173,"mtime":1760532697743,"results":"702","hashOfConfig":"445"},{"size":2103,"mtime":1760532697745,"results":"703","hashOfConfig":"445"},{"size":473,"mtime":1760532697745,"results":"704","hashOfConfig":"445"},{"size":6786,"mtime":1760532697745,"results":"705","hashOfConfig":"445"},{"size":1707,"mtime":1760532697745,"results":"706","hashOfConfig":"445"},{"size":589,"mtime":1760532697745,"results":"707","hashOfConfig":"445"},{"size":5061,"mtime":1760532697745,"results":"708","hashOfConfig":"445"},{"size":455,"mtime":1760532697745,"results":"709","hashOfConfig":"445"},{"size":465,"mtime":1760532697746,"results":"710","hashOfConfig":"445"},{"size":1144,"mtime":1760532697746,"results":"711","hashOfConfig":"445"},{"size":2144,"mtime":1755309436023,"results":"712","hashOfConfig":"490"},{"size":9369,"mtime":1760805294247,"results":"713","hashOfConfig":"445"},{"size":1745,"mtime":1760532697747,"results":"714","hashOfConfig":"445"},{"size":293,"mtime":1755309436024,"results":"715","hashOfConfig":"490"},{"size":1656,"mtime":1755309436024,"results":"716","hashOfConfig":"490"},{"size":3058,"mtime":1755309436024,"results":"717","hashOfConfig":"490"},{"size":2723,"mtime":1755309436024,"results":"718","hashOfConfig":"490"},{"size":4429,"mtime":1755309436024,"results":"719","hashOfConfig":"490"},{"size":1906,"mtime":1755309436024,"results":"720","hashOfConfig":"490"},{"size":10939,"mtime":1760532697748,"results":"721","hashOfConfig":"445"},{"size":444,"mtime":1760532697748,"results":"722","hashOfConfig":"445"},{"size":1845,"mtime":1760532697749,"results":"723","hashOfConfig":"445"},{"size":1502,"mtime":1760532697749,"results":"724","hashOfConfig":"445"},{"size":9066,"mtime":1760532697749,"results":"725","hashOfConfig":"445"},{"size":885,"mtime":1760532697658,"results":"726","hashOfConfig":"445"},{"size":873,"mtime":1760031500508,"results":"727","hashOfConfig":"445"},{"size":441,"mtime":1760532697664,"results":"728","hashOfConfig":"445"},{"size":20014,"mtime":1760532697694,"results":"729","hashOfConfig":"445"},{"size":10872,"mtime":1760532697694,"results":"730","hashOfConfig":"445"},{"size":17929,"mtime":1757183147874,"results":"731","hashOfConfig":"490"},{"size":750,"mtime":1760532697739,"results":"732","hashOfConfig":"445"},{"size":14806,"mtime":1760532697628,"results":"733","hashOfConfig":"445"},{"size":26690,"mtime":1760804193804,"results":"734","hashOfConfig":"445"},{"size":21425,"mtime":1760532697640,"results":"735","hashOfConfig":"445"},{"size":609,"mtime":1760532697640,"results":"736","hashOfConfig":"445"},{"size":2085,"mtime":1760805107670,"results":"737","hashOfConfig":"445"},{"size":2071,"mtime":1760805160220,"results":"738","hashOfConfig":"445"},{"size":2082,"mtime":1760805202503,"results":"739","hashOfConfig":"445"},{"size":2064,"mtime":1760805211188,"results":"740","hashOfConfig":"445"},{"size":2062,"mtime":1760805211198,"results":"741","hashOfConfig":"445"},{"size":2069,"mtime":1760805211191,"results":"742","hashOfConfig":"445"},{"size":2093,"mtime":1760805211190,"results":"743","hashOfConfig":"445"},{"size":2066,"mtime":1760805211195,"results":"744","hashOfConfig":"445"},{"size":2077,"mtime":1760805211186,"results":"745","hashOfConfig":"445"},{"size":2092,"mtime":1760805211197,"results":"746","hashOfConfig":"445"},{"size":2077,"mtime":1760805211193,"results":"747","hashOfConfig":"445"},{"size":1967,"mtime":1760805211174,"results":"748","hashOfConfig":"445"},{"size":1038,"mtime":1760805246290,"results":"749","hashOfConfig":"445"},{"size":1586,"mtime":1760805211171,"results":"750","hashOfConfig":"445"},{"size":2305,"mtime":1760532697648,"results":"751","hashOfConfig":"445"},{"size":2099,"mtime":1760532697648,"results":"752","hashOfConfig":"445"},{"size":3261,"mtime":1760805211169,"results":"753","hashOfConfig":"445"},{"size":1663,"mtime":1760532697648,"results":"754","hashOfConfig":"445"},{"size":1629,"mtime":1760805211172,"results":"755","hashOfConfig":"445"},{"size":1618,"mtime":1760805211167,"results":"756","hashOfConfig":"445"},{"size":3435,"mtime":1760805370651,"results":"757","hashOfConfig":"445"},{"size":562,"mtime":1760532697649,"results":"758","hashOfConfig":"445"},{"size":2069,"mtime":1760805211182,"results":"759","hashOfConfig":"445"},{"size":2044,"mtime":1760805211177,"results":"760","hashOfConfig":"445"},{"size":2065,"mtime":1760805211184,"results":"761","hashOfConfig":"445"},{"size":2079,"mtime":1760805211179,"results":"762","hashOfConfig":"445"},{"size":2020,"mtime":1760805211181,"results":"763","hashOfConfig":"445"},{"size":6028,"mtime":1760532697651,"results":"764","hashOfConfig":"445"},{"size":3807,"mtime":1760532697651,"results":"765","hashOfConfig":"445"},{"size":1991,"mtime":1760532697651,"results":"766","hashOfConfig":"445"},{"size":2111,"mtime":1760532697651,"results":"767","hashOfConfig":"445"},{"size":2035,"mtime":1760532697652,"results":"768","hashOfConfig":"445"},{"size":2090,"mtime":1760532697652,"results":"769","hashOfConfig":"445"},{"size":1914,"mtime":1760532697652,"results":"770","hashOfConfig":"445"},{"size":2093,"mtime":1760532697653,"results":"771","hashOfConfig":"445"},{"size":2055,"mtime":1760532697653,"results":"772","hashOfConfig":"445"},{"size":2169,"mtime":1760532697654,"results":"773","hashOfConfig":"445"},{"size":2026,"mtime":1760532697654,"results":"774","hashOfConfig":"445"},{"size":2766,"mtime":1760532697655,"results":"775","hashOfConfig":"445"},{"size":3964,"mtime":1760805294249,"results":"776","hashOfConfig":"445"},{"size":1083,"mtime":1760532697655,"results":"777","hashOfConfig":"445"},{"size":616,"mtime":1760532697656,"results":"778","hashOfConfig":"445"},{"size":443,"mtime":1760532697656,"results":"779","hashOfConfig":"445"},{"size":4162,"mtime":1760805630681,"results":"780","hashOfConfig":"445"},{"size":4048,"mtime":1760805639439,"results":"781","hashOfConfig":"445"},{"size":4064,"mtime":1760805639440,"results":"782","hashOfConfig":"445"},{"size":4029,"mtime":1760805639440,"results":"783","hashOfConfig":"445"},{"size":2856,"mtime":1760805539918,"results":"784","hashOfConfig":"445"},{"size":1086,"mtime":1760532697658,"results":"785","hashOfConfig":"445"},{"size":2286,"mtime":1760532697659,"results":"786","hashOfConfig":"445"},{"size":13326,"mtime":1760532697659,"results":"787","hashOfConfig":"445"},{"size":2169,"mtime":1760532697660,"results":"788","hashOfConfig":"445"},{"size":8834,"mtime":1760532697661,"results":"789","hashOfConfig":"445"},{"size":13118,"mtime":1760532697663,"results":"790","hashOfConfig":"445"},{"size":18835,"mtime":1760532697664,"results":"791","hashOfConfig":"445"},{"size":11070,"mtime":1760797140385,"results":"792","hashOfConfig":"445"},{"size":2841,"mtime":1760532697665,"results":"793","hashOfConfig":"445"},{"size":3230,"mtime":1760532697665,"results":"794","hashOfConfig":"445"},{"size":7870,"mtime":1760532697669,"results":"795","hashOfConfig":"445"},{"size":2698,"mtime":1760532697673,"results":"796","hashOfConfig":"445"},{"size":8713,"mtime":1760532697673,"results":"797","hashOfConfig":"445"},{"size":14804,"mtime":1760532697673,"results":"798","hashOfConfig":"445"},{"size":11757,"mtime":1760532697674,"results":"799","hashOfConfig":"445"},{"size":17863,"mtime":1760532697674,"results":"800","hashOfConfig":"445"},{"size":13217,"mtime":1760532697675,"results":"801","hashOfConfig":"445"},{"size":20828,"mtime":1760532697676,"results":"802","hashOfConfig":"445"},{"size":16198,"mtime":1760532697677,"results":"803","hashOfConfig":"445"},{"size":2153,"mtime":1760805294251,"results":"804","hashOfConfig":"445"},{"size":41479,"mtime":1760532697679,"results":"805","hashOfConfig":"445"},{"size":56204,"mtime":1760532697679,"results":"806","hashOfConfig":"445"},{"size":76247,"mtime":1760532697680,"results":"807","hashOfConfig":"445"},{"size":16105,"mtime":1760532697681,"results":"808","hashOfConfig":"445"},{"size":58044,"mtime":1760532697681,"results":"809","hashOfConfig":"445"},{"size":61863,"mtime":1760532697684,"results":"810","hashOfConfig":"445"},{"size":975,"mtime":1760532697685,"results":"811","hashOfConfig":"445"},{"size":28846,"mtime":1760532697687,"results":"812","hashOfConfig":"445"},{"size":26225,"mtime":1760532697687,"results":"813","hashOfConfig":"445"},{"size":22229,"mtime":1760532697687,"results":"814","hashOfConfig":"445"},{"size":2467,"mtime":1760532697688,"results":"815","hashOfConfig":"445"},{"size":8237,"mtime":1760532697688,"results":"816","hashOfConfig":"445"},{"size":19523,"mtime":1760532697688,"results":"817","hashOfConfig":"445"},{"size":875,"mtime":1760532697688,"results":"818","hashOfConfig":"445"},{"size":1137,"mtime":1760532697689,"results":"819","hashOfConfig":"445"},{"size":2981,"mtime":1760532697689,"results":"820","hashOfConfig":"445"},{"size":2933,"mtime":1760532697694,"results":"821","hashOfConfig":"445"},{"size":3820,"mtime":1760532697694,"results":"822","hashOfConfig":"445"},{"size":7245,"mtime":1760532697694,"results":"823","hashOfConfig":"445"},{"size":26740,"mtime":1760532697707,"results":"824","hashOfConfig":"445"},{"size":34632,"mtime":1760532697707,"results":"825","hashOfConfig":"445"},{"size":20181,"mtime":1760532697707,"results":"826","hashOfConfig":"445"},{"size":14409,"mtime":1760532697707,"results":"827","hashOfConfig":"445"},{"size":33670,"mtime":1760532697707,"results":"828","hashOfConfig":"445"},{"size":22184,"mtime":1760532697707,"results":"829","hashOfConfig":"445"},{"size":50147,"mtime":1760532697711,"results":"830","hashOfConfig":"445"},{"size":15104,"mtime":1760532697713,"results":"831","hashOfConfig":"445"},{"size":19836,"mtime":1760532697713,"results":"832","hashOfConfig":"445"},{"size":21240,"mtime":1760532697714,"results":"833","hashOfConfig":"445"},{"size":42687,"mtime":1760532697714,"results":"834","hashOfConfig":"445"},{"size":29558,"mtime":1760532697714,"results":"835","hashOfConfig":"445"},{"size":9043,"mtime":1760532697714,"results":"836","hashOfConfig":"445"},{"size":13395,"mtime":1760532697714,"results":"837","hashOfConfig":"445"},{"size":21784,"mtime":1760532697714,"results":"838","hashOfConfig":"445"},{"size":21698,"mtime":1760532697715,"results":"839","hashOfConfig":"445"},{"size":21419,"mtime":1760532697715,"results":"840","hashOfConfig":"445"},{"size":25672,"mtime":1760532697716,"results":"841","hashOfConfig":"445"},{"size":12621,"mtime":1760532697716,"results":"842","hashOfConfig":"445"},{"size":17331,"mtime":1760532697716,"results":"843","hashOfConfig":"445"},{"size":18027,"mtime":1760532697716,"results":"844","hashOfConfig":"445"},{"size":22583,"mtime":1760532697716,"results":"845","hashOfConfig":"445"},{"size":50802,"mtime":1760532697716,"results":"846","hashOfConfig":"445"},{"size":22636,"mtime":1760532697716,"results":"847","hashOfConfig":"445"},{"size":25600,"mtime":1760532697717,"results":"848","hashOfConfig":"445"},{"size":12364,"mtime":1760532697717,"results":"849","hashOfConfig":"445"},{"size":22016,"mtime":1760532697718,"results":"850","hashOfConfig":"445"},{"size":11384,"mtime":1760532697719,"results":"851","hashOfConfig":"445"},{"size":27946,"mtime":1760532697719,"results":"852","hashOfConfig":"445"},{"size":10888,"mtime":1760532697719,"results":"853","hashOfConfig":"445"},{"size":9067,"mtime":1760532697720,"results":"854","hashOfConfig":"445"},{"size":16508,"mtime":1760532697720,"results":"855","hashOfConfig":"445"},{"size":12527,"mtime":1760532697724,"results":"856","hashOfConfig":"445"},{"size":12389,"mtime":1760532697726,"results":"857","hashOfConfig":"445"},{"size":1761,"mtime":1760532697727,"results":"858","hashOfConfig":"445"},{"size":6360,"mtime":1760532697729,"results":"859","hashOfConfig":"445"},{"size":16401,"mtime":1760532697729,"results":"860","hashOfConfig":"445"},{"size":10693,"mtime":1760532697729,"results":"861","hashOfConfig":"445"},{"size":1413,"mtime":1760532697730,"results":"862","hashOfConfig":"445"},{"size":1160,"mtime":1760532697732,"results":"863","hashOfConfig":"445"},{"size":15970,"mtime":1760532697735,"results":"864","hashOfConfig":"445"},{"size":26328,"mtime":1760532697735,"results":"865","hashOfConfig":"445"},{"size":25809,"mtime":1760532697735,"results":"866","hashOfConfig":"445"},{"size":18657,"mtime":1760532697735,"results":"867","hashOfConfig":"445"},{"size":8995,"mtime":1760532697736,"results":"868","hashOfConfig":"445"},{"size":15340,"mtime":1760532697736,"results":"869","hashOfConfig":"445"},{"size":15112,"mtime":1760805294259,"results":"870","hashOfConfig":"445"},{"size":3143,"mtime":1760532697744,"results":"871","hashOfConfig":"445"},{"size":17692,"mtime":1760805294241,"results":"872","hashOfConfig":"445"},{"size":2994,"mtime":1760804938603,"results":"873","hashOfConfig":"445"},{"size":1506,"mtime":1760532697747,"results":"874","hashOfConfig":"445"},{"size":3260,"mtime":1760532697747,"results":"875","hashOfConfig":"445"},{"size":1879,"mtime":1760532697747,"results":"876","hashOfConfig":"445"},{"size":8474,"mtime":1760532697749,"results":"877","hashOfConfig":"445"},{"size":5154,"mtime":1760797142081,"results":"878","hashOfConfig":"445"},{"size":6177,"mtime":1760804985853,"results":"879","hashOfConfig":"445"},{"size":7092,"mtime":1760798029986,"results":"880","hashOfConfig":"445"},{"size":8478,"mtime":1760797142232,"results":"881","hashOfConfig":"445"},{"size":9099,"mtime":1760797179561,"results":"882","hashOfConfig":"445"},{"size":2825,"mtime":1760805294244,"results":"883","hashOfConfig":"445"},{"size":3924,"mtime":1760803949829,"results":"884","hashOfConfig":"445"},{"size":1393,"mtime":1760804065768,"results":"885","hashOfConfig":"445"},{"size":4913,"mtime":1760804065768,"results":"886","hashOfConfig":"445"},{"size":20986,"mtime":1760804165948,"results":"887","hashOfConfig":"445"},{"size":11664,"mtime":1760804165948,"results":"888","hashOfConfig":"445"},{"filePath":"889","messages":"890","suppressedMessages":"891","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1725fto",{"filePath":"892","messages":"893","suppressedMessages":"894","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"895","messages":"896","suppressedMessages":"897","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"898","messages":"899","suppressedMessages":"900","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"901","messages":"902","suppressedMessages":"903","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"904","messages":"905","suppressedMessages":"906","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"907","messages":"908","suppressedMessages":"909","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"910","messages":"911","suppressedMessages":"912","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"913","messages":"914","suppressedMessages":"915","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"916","messages":"917","suppressedMessages":"918","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"919","messages":"920","suppressedMessages":"921","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"922","messages":"923","suppressedMessages":"924","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"925","messages":"926","suppressedMessages":"927","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"928","messages":"929","suppressedMessages":"930","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"931","messages":"932","suppressedMessages":"933","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"934","messages":"935","suppressedMessages":"936","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"937","messages":"938","suppressedMessages":"939","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"940","messages":"941","suppressedMessages":"942","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"943","messages":"944","suppressedMessages":"945","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"946","messages":"947","suppressedMessages":"948","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"949","messages":"950","suppressedMessages":"951","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"952","messages":"953","suppressedMessages":"954","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"955","messages":"956","suppressedMessages":"957","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"958","messages":"959","suppressedMessages":"960","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"961","messages":"962","suppressedMessages":"963","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"964","messages":"965","suppressedMessages":"966","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"967","messages":"968","suppressedMessages":"969","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"970","messages":"971","suppressedMessages":"972","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"973","messages":"974","suppressedMessages":"975","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"976","messages":"977","suppressedMessages":"978","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"979","messages":"980","suppressedMessages":"981","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"982","messages":"983","suppressedMessages":"984","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"985","messages":"986","suppressedMessages":"987","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"988","messages":"989","suppressedMessages":"990","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"991","messages":"992","suppressedMessages":"993","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"994","messages":"995","suppressedMessages":"996","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"997","messages":"998","suppressedMessages":"999","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1000","messages":"1001","suppressedMessages":"1002","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1003","messages":"1004","suppressedMessages":"1005","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1006","messages":"1007","suppressedMessages":"1008","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1009","messages":"1010","suppressedMessages":"1011","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1012","messages":"1013","suppressedMessages":"1014","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1015","messages":"1016","suppressedMessages":"1017","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1018","messages":"1019","suppressedMessages":"1020","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1021","messages":"1022","suppressedMessages":"1023","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1024"},"ve9hi1",{"filePath":"1025","messages":"1026","suppressedMessages":"1027","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1028","messages":"1029","suppressedMessages":"1030","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1031","messages":"1032","suppressedMessages":"1033","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1034","messages":"1035","suppressedMessages":"1036","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1037","messages":"1038","suppressedMessages":"1039","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1040","messages":"1041","suppressedMessages":"1042","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1043","messages":"1044","suppressedMessages":"1045","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1046","messages":"1047","suppressedMessages":"1048","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1049","messages":"1050","suppressedMessages":"1051","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1052","messages":"1053","suppressedMessages":"1054","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1055","messages":"1056","suppressedMessages":"1057","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1058","messages":"1059","suppressedMessages":"1060","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1061","messages":"1062","suppressedMessages":"1063","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1064","messages":"1065","suppressedMessages":"1066","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1067"},{"filePath":"1068","messages":"1069","suppressedMessages":"1070","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1071"},{"filePath":"1072","messages":"1073","suppressedMessages":"1074","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1075","messages":"1076","suppressedMessages":"1077","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1078","messages":"1079","suppressedMessages":"1080","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1081","messages":"1082","suppressedMessages":"1083","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1084","messages":"1085","suppressedMessages":"1086","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1087","messages":"1088","suppressedMessages":"1089","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1090","messages":"1091","suppressedMessages":"1092","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1093","messages":"1094","suppressedMessages":"1095","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1096","messages":"1097","suppressedMessages":"1098","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1099","messages":"1100","suppressedMessages":"1101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1102","messages":"1103","suppressedMessages":"1104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1105","messages":"1106","suppressedMessages":"1107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1108","messages":"1109","suppressedMessages":"1110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1111","messages":"1112","suppressedMessages":"1113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1114","messages":"1115","suppressedMessages":"1116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1117","messages":"1118","suppressedMessages":"1119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1120","messages":"1121","suppressedMessages":"1122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1123","messages":"1124","suppressedMessages":"1125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1126","messages":"1127","suppressedMessages":"1128","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1129"},{"filePath":"1130","messages":"1131","suppressedMessages":"1132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1133","messages":"1134","suppressedMessages":"1135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1136","messages":"1137","suppressedMessages":"1138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1139","messages":"1140","suppressedMessages":"1141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1142","messages":"1143","suppressedMessages":"1144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1145","messages":"1146","suppressedMessages":"1147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1148","messages":"1149","suppressedMessages":"1150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1151","messages":"1152","suppressedMessages":"1153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1154","messages":"1155","suppressedMessages":"1156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1157","messages":"1158","suppressedMessages":"1159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1160","messages":"1161","suppressedMessages":"1162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1163","messages":"1164","suppressedMessages":"1165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1166","messages":"1167","suppressedMessages":"1168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1169","messages":"1170","suppressedMessages":"1171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1172","messages":"1173","suppressedMessages":"1174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1175","messages":"1176","suppressedMessages":"1177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1178","messages":"1179","suppressedMessages":"1180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1181","messages":"1182","suppressedMessages":"1183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1184","messages":"1185","suppressedMessages":"1186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1187","messages":"1188","suppressedMessages":"1189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1190","messages":"1191","suppressedMessages":"1192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1193","messages":"1194","suppressedMessages":"1195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1196","messages":"1197","suppressedMessages":"1198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1199","messages":"1200","suppressedMessages":"1201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1202","messages":"1203","suppressedMessages":"1204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1205","messages":"1206","suppressedMessages":"1207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1208","messages":"1209","suppressedMessages":"1210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1211","messages":"1212","suppressedMessages":"1213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1214","messages":"1215","suppressedMessages":"1216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1217","messages":"1218","suppressedMessages":"1219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1220","messages":"1221","suppressedMessages":"1222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1223","messages":"1224","suppressedMessages":"1225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1226","messages":"1227","suppressedMessages":"1228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1229","messages":"1230","suppressedMessages":"1231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1232","messages":"1233","suppressedMessages":"1234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1235","messages":"1236","suppressedMessages":"1237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1238","messages":"1239","suppressedMessages":"1240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1241","messages":"1242","suppressedMessages":"1243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1244","messages":"1245","suppressedMessages":"1246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1247","messages":"1248","suppressedMessages":"1249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1250","messages":"1251","suppressedMessages":"1252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1253","messages":"1254","suppressedMessages":"1255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1256","messages":"1257","suppressedMessages":"1258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1259","messages":"1260","suppressedMessages":"1261","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1262"},{"filePath":"1263","messages":"1264","suppressedMessages":"1265","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1266"},{"filePath":"1267","messages":"1268","suppressedMessages":"1269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1270","messages":"1271","suppressedMessages":"1272","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1273"},{"filePath":"1274","messages":"1275","suppressedMessages":"1276","errorCount":4,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1277"},{"filePath":"1278","messages":"1279","suppressedMessages":"1280","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1281"},{"filePath":"1282","messages":"1283","suppressedMessages":"1284","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1285"},{"filePath":"1286","messages":"1287","suppressedMessages":"1288","errorCount":15,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1289"},{"filePath":"1290","messages":"1291","suppressedMessages":"1292","errorCount":5,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1293"},{"filePath":"1294","messages":"1295","suppressedMessages":"1296","errorCount":4,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1297"},{"filePath":"1298","messages":"1299","suppressedMessages":"1300","errorCount":3,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1301"},{"filePath":"1302","messages":"1303","suppressedMessages":"1304","errorCount":12,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1305"},{"filePath":"1306","messages":"1307","suppressedMessages":"1308","errorCount":4,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1309"},{"filePath":"1310","messages":"1311","suppressedMessages":"1312","errorCount":10,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1313"},{"filePath":"1314","messages":"1315","suppressedMessages":"1316","errorCount":7,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1317"},{"filePath":"1318","messages":"1319","suppressedMessages":"1320","errorCount":8,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1321"},{"filePath":"1322","messages":"1323","suppressedMessages":"1324","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1325"},{"filePath":"1326","messages":"1327","suppressedMessages":"1328","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1329"},{"filePath":"1330","messages":"1331","suppressedMessages":"1332","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1333"},{"filePath":"1334","messages":"1335","suppressedMessages":"1336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1337","messages":"1338","suppressedMessages":"1339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1340","messages":"1341","suppressedMessages":"1342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1343","messages":"1344","suppressedMessages":"1345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1346","messages":"1347","suppressedMessages":"1348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1349","messages":"1350","suppressedMessages":"1351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1352","messages":"1353","suppressedMessages":"1354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1355","messages":"1356","suppressedMessages":"1357","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1358"},{"filePath":"1359","messages":"1360","suppressedMessages":"1361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1362","messages":"1363","suppressedMessages":"1364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1365","messages":"1366","suppressedMessages":"1367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1368","messages":"1369","suppressedMessages":"1370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1371","messages":"1372","suppressedMessages":"1373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1374","messages":"1375","suppressedMessages":"1376","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1377"},{"filePath":"1378","messages":"1379","suppressedMessages":"1380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1381","messages":"1382","suppressedMessages":"1383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1384","messages":"1385","suppressedMessages":"1386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1387","messages":"1388","suppressedMessages":"1389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1390","messages":"1391","suppressedMessages":"1392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1393","messages":"1394","suppressedMessages":"1395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1396","messages":"1397","suppressedMessages":"1398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1399","messages":"1400","suppressedMessages":"1401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1402","messages":"1403","suppressedMessages":"1404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1405","messages":"1406","suppressedMessages":"1407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1408","messages":"1409","suppressedMessages":"1410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1411","messages":"1412","suppressedMessages":"1413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1414","messages":"1415","suppressedMessages":"1416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1417","messages":"1418","suppressedMessages":"1419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1420","messages":"1421","suppressedMessages":"1422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1423","messages":"1424","suppressedMessages":"1425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1426","messages":"1427","suppressedMessages":"1428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1429","messages":"1430","suppressedMessages":"1431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1432","messages":"1433","suppressedMessages":"1434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1435","messages":"1436","suppressedMessages":"1437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1438","messages":"1439","suppressedMessages":"1440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1441","messages":"1442","suppressedMessages":"1443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1444","messages":"1445","suppressedMessages":"1446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1447","messages":"1448","suppressedMessages":"1449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1450","messages":"1451","suppressedMessages":"1452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1453","messages":"1454","suppressedMessages":"1455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1456","messages":"1457","suppressedMessages":"1458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1459","messages":"1460","suppressedMessages":"1461","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1462"},{"filePath":"1463","messages":"1464","suppressedMessages":"1465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1466","messages":"1467","suppressedMessages":"1468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1469","messages":"1470","suppressedMessages":"1471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1472","messages":"1473","suppressedMessages":"1474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1475","messages":"1476","suppressedMessages":"1477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1478","messages":"1479","suppressedMessages":"1480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1481","messages":"1482","suppressedMessages":"1483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1484","messages":"1485","suppressedMessages":"1486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1487","messages":"1488","suppressedMessages":"1489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1490","messages":"1491","suppressedMessages":"1492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1493","messages":"1494","suppressedMessages":"1495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1496","messages":"1497","suppressedMessages":"1498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1499","messages":"1500","suppressedMessages":"1501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1502","messages":"1503","suppressedMessages":"1504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1505","messages":"1506","suppressedMessages":"1507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1508","messages":"1509","suppressedMessages":"1510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1511","messages":"1512","suppressedMessages":"1513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1514","messages":"1515","suppressedMessages":"1516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1517","messages":"1518","suppressedMessages":"1519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1520","messages":"1521","suppressedMessages":"1522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1523","messages":"1524","suppressedMessages":"1525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1526","messages":"1527","suppressedMessages":"1528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1529","messages":"1530","suppressedMessages":"1531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1532","messages":"1533","suppressedMessages":"1534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1535","messages":"1536","suppressedMessages":"1537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1538","messages":"1539","suppressedMessages":"1540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1541","messages":"1542","suppressedMessages":"1543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1544","messages":"1545","suppressedMessages":"1546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1547","messages":"1548","suppressedMessages":"1549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1550","messages":"1551","suppressedMessages":"1552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1553","messages":"1554","suppressedMessages":"1555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1556","messages":"1557","suppressedMessages":"1558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1559","messages":"1560","suppressedMessages":"1561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1562","messages":"1563","suppressedMessages":"1564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1565","messages":"1566","suppressedMessages":"1567","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1568"},{"filePath":"1569","messages":"1570","suppressedMessages":"1571","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1572"},{"filePath":"1573","messages":"1574","suppressedMessages":"1575","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1576"},{"filePath":"1577","messages":"1578","suppressedMessages":"1579","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1580"},{"filePath":"1581","messages":"1582","suppressedMessages":"1583","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1584"},{"filePath":"1585","messages":"1586","suppressedMessages":"1587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1588","messages":"1589","suppressedMessages":"1590","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1591"},{"filePath":"1592","messages":"1593","suppressedMessages":"1594","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1595","messages":"1596","suppressedMessages":"1597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1598","messages":"1599","suppressedMessages":"1600","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1601"},{"filePath":"1602","messages":"1603","suppressedMessages":"1604","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1605"},{"filePath":"1606","messages":"1607","suppressedMessages":"1608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1609","messages":"1610","suppressedMessages":"1611","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1612"},{"filePath":"1613","messages":"1614","suppressedMessages":"1615","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1616"},{"filePath":"1617","messages":"1618","suppressedMessages":"1619","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1620","messages":"1621","suppressedMessages":"1622","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1623"},{"filePath":"1624","messages":"1625","suppressedMessages":"1626","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1627","messages":"1628","suppressedMessages":"1629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1630","messages":"1631","suppressedMessages":"1632","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1633"},{"filePath":"1634","messages":"1635","suppressedMessages":"1636","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1637","messages":"1638","suppressedMessages":"1639","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1640"},{"filePath":"1641","messages":"1642","suppressedMessages":"1643","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1644"},{"filePath":"1645","messages":"1646","suppressedMessages":"1647","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1648"},{"filePath":"1649","messages":"1650","suppressedMessages":"1651","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1652"},{"filePath":"1653","messages":"1654","suppressedMessages":"1655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1656","messages":"1657","suppressedMessages":"1658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1659","messages":"1660","suppressedMessages":"1661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1662","messages":"1663","suppressedMessages":"1664","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1665"},{"filePath":"1666","messages":"1667","suppressedMessages":"1668","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1669"},{"filePath":"1670","messages":"1671","suppressedMessages":"1672","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1673"},{"filePath":"1674","messages":"1675","suppressedMessages":"1676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1677","messages":"1678","suppressedMessages":"1679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1680","messages":"1681","suppressedMessages":"1682","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1683"},{"filePath":"1684","messages":"1685","suppressedMessages":"1686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1687","messages":"1688","suppressedMessages":"1689","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1690","messages":"1691","suppressedMessages":"1692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1693","messages":"1694","suppressedMessages":"1695","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1696","messages":"1697","suppressedMessages":"1698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1699","messages":"1700","suppressedMessages":"1701","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1702","messages":"1703","suppressedMessages":"1704","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1705","messages":"1706","suppressedMessages":"1707","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1708","messages":"1709","suppressedMessages":"1710","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1711","messages":"1712","suppressedMessages":"1713","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1714","messages":"1715","suppressedMessages":"1716","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1717","messages":"1718","suppressedMessages":"1719","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1720","messages":"1721","suppressedMessages":"1722","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1723","messages":"1724","suppressedMessages":"1725","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1726","messages":"1727","suppressedMessages":"1728","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1729","messages":"1730","suppressedMessages":"1731","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1732","messages":"1733","suppressedMessages":"1734","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1735"},{"filePath":"1736","messages":"1737","suppressedMessages":"1738","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1739","messages":"1740","suppressedMessages":"1741","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1742","messages":"1743","suppressedMessages":"1744","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1745"},{"filePath":"1746","messages":"1747","suppressedMessages":"1748","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1749"},{"filePath":"1750","messages":"1751","suppressedMessages":"1752","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1753"},{"filePath":"1754","messages":"1755","suppressedMessages":"1756","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1757"},{"filePath":"1758","messages":"1759","suppressedMessages":"1760","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1761"},{"filePath":"1762","messages":"1763","suppressedMessages":"1764","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1765"},{"filePath":"1766","messages":"1767","suppressedMessages":"1768","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1769","messages":"1770","suppressedMessages":"1771","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1772","messages":"1773","suppressedMessages":"1774","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1775","messages":"1776","suppressedMessages":"1777","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1778","messages":"1779","suppressedMessages":"1780","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1781","messages":"1782","suppressedMessages":"1783","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1784","messages":"1785","suppressedMessages":"1786","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1787","messages":"1788","suppressedMessages":"1789","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1790","messages":"1791","suppressedMessages":"1792","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1793","messages":"1794","suppressedMessages":"1795","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1796","messages":"1797","suppressedMessages":"1798","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1799"},{"filePath":"1800","messages":"1801","suppressedMessages":"1802","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1803","messages":"1804","suppressedMessages":"1805","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1806","messages":"1807","suppressedMessages":"1808","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1809","messages":"1810","suppressedMessages":"1811","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1812","messages":"1813","suppressedMessages":"1814","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1815","messages":"1816","suppressedMessages":"1817","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1818","messages":"1819","suppressedMessages":"1820","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1821","messages":"1822","suppressedMessages":"1823","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1824","messages":"1825","suppressedMessages":"1826","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1827","messages":"1828","suppressedMessages":"1829","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1830","messages":"1831","suppressedMessages":"1832","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1833","messages":"1834","suppressedMessages":"1835","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1836","messages":"1837","suppressedMessages":"1838","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1839","messages":"1840","suppressedMessages":"1841","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1842","messages":"1843","suppressedMessages":"1844","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1845","messages":"1846","suppressedMessages":"1847","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1848","messages":"1849","suppressedMessages":"1850","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1851","messages":"1852","suppressedMessages":"1853","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1854","messages":"1855","suppressedMessages":"1856","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1857","messages":"1858","suppressedMessages":"1859","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1860","messages":"1861","suppressedMessages":"1862","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1863","messages":"1864","suppressedMessages":"1865","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1866","messages":"1867","suppressedMessages":"1868","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1869","messages":"1870","suppressedMessages":"1871","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1872","messages":"1873","suppressedMessages":"1874","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1875","messages":"1876","suppressedMessages":"1877","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1878","messages":"1879","suppressedMessages":"1880","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1881","messages":"1882","suppressedMessages":"1883","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1884","messages":"1885","suppressedMessages":"1886","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1887","messages":"1888","suppressedMessages":"1889","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1890","messages":"1891","suppressedMessages":"1892","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1893","messages":"1894","suppressedMessages":"1895","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1896","messages":"1897","suppressedMessages":"1898","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1899","messages":"1900","suppressedMessages":"1901","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1902","messages":"1903","suppressedMessages":"1904","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1905","messages":"1906","suppressedMessages":"1907","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1908","messages":"1909","suppressedMessages":"1910","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1911","messages":"1912","suppressedMessages":"1913","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1914","messages":"1915","suppressedMessages":"1916","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1917","messages":"1918","suppressedMessages":"1919","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1920","messages":"1921","suppressedMessages":"1922","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1923","messages":"1924","suppressedMessages":"1925","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1926","messages":"1927","suppressedMessages":"1928","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1929","messages":"1930","suppressedMessages":"1931","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1932","messages":"1933","suppressedMessages":"1934","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1935","messages":"1936","suppressedMessages":"1937","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1938","messages":"1939","suppressedMessages":"1940","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1941","messages":"1942","suppressedMessages":"1943","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1944","messages":"1945","suppressedMessages":"1946","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1947","messages":"1948","suppressedMessages":"1949","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1950","messages":"1951","suppressedMessages":"1952","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1953","messages":"1954","suppressedMessages":"1955","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1956","messages":"1957","suppressedMessages":"1958","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1959","messages":"1960","suppressedMessages":"1961","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1962","messages":"1963","suppressedMessages":"1964","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1965","messages":"1966","suppressedMessages":"1967","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1968","messages":"1969","suppressedMessages":"1970","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1971","messages":"1972","suppressedMessages":"1973","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1974","messages":"1975","suppressedMessages":"1976","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1977","messages":"1978","suppressedMessages":"1979","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1980","messages":"1981","suppressedMessages":"1982","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1983","messages":"1984","suppressedMessages":"1985","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1986","messages":"1987","suppressedMessages":"1988","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1989","messages":"1990","suppressedMessages":"1991","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1992","messages":"1993","suppressedMessages":"1994","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1995","messages":"1996","suppressedMessages":"1997","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1998","messages":"1999","suppressedMessages":"2000","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2001","messages":"2002","suppressedMessages":"2003","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2004","messages":"2005","suppressedMessages":"2006","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2007","messages":"2008","suppressedMessages":"2009","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2010","messages":"2011","suppressedMessages":"2012","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2013","messages":"2014","suppressedMessages":"2015","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2016","messages":"2017","suppressedMessages":"2018","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2019","messages":"2020","suppressedMessages":"2021","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2022","messages":"2023","suppressedMessages":"2024","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2025","messages":"2026","suppressedMessages":"2027","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2028","messages":"2029","suppressedMessages":"2030","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2031","messages":"2032","suppressedMessages":"2033","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2034","messages":"2035","suppressedMessages":"2036","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2037","messages":"2038","suppressedMessages":"2039","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2040","messages":"2041","suppressedMessages":"2042","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2043","messages":"2044","suppressedMessages":"2045","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2046","messages":"2047","suppressedMessages":"2048","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2049","messages":"2050","suppressedMessages":"2051","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2052","messages":"2053","suppressedMessages":"2054","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2055","messages":"2056","suppressedMessages":"2057","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2058","messages":"2059","suppressedMessages":"2060","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2061","messages":"2062","suppressedMessages":"2063","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2064","messages":"2065","suppressedMessages":"2066","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2067","messages":"2068","suppressedMessages":"2069","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2070","messages":"2071","suppressedMessages":"2072","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2073","messages":"2074","suppressedMessages":"2075","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2076","messages":"2077","suppressedMessages":"2078","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2079","messages":"2080","suppressedMessages":"2081","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2082","messages":"2083","suppressedMessages":"2084","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2085","messages":"2086","suppressedMessages":"2087","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2088","messages":"2089","suppressedMessages":"2090","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2091","messages":"2092","suppressedMessages":"2093","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2094","messages":"2095","suppressedMessages":"2096","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2097","messages":"2098","suppressedMessages":"2099","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2100","messages":"2101","suppressedMessages":"2102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2103","messages":"2104","suppressedMessages":"2105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2106","messages":"2107","suppressedMessages":"2108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2109","messages":"2110","suppressedMessages":"2111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2112","messages":"2113","suppressedMessages":"2114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2115","messages":"2116","suppressedMessages":"2117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2118","messages":"2119","suppressedMessages":"2120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2121","messages":"2122","suppressedMessages":"2123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2124","messages":"2125","suppressedMessages":"2126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2127","messages":"2128","suppressedMessages":"2129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2130","messages":"2131","suppressedMessages":"2132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2133","messages":"2134","suppressedMessages":"2135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2136","messages":"2137","suppressedMessages":"2138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2139","messages":"2140","suppressedMessages":"2141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2142","messages":"2143","suppressedMessages":"2144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2145","messages":"2146","suppressedMessages":"2147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2148","messages":"2149","suppressedMessages":"2150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2151","messages":"2152","suppressedMessages":"2153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2154","messages":"2155","suppressedMessages":"2156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2157","messages":"2158","suppressedMessages":"2159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2160","messages":"2161","suppressedMessages":"2162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2163","messages":"2164","suppressedMessages":"2165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2166","messages":"2167","suppressedMessages":"2168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2169","messages":"2170","suppressedMessages":"2171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2172","messages":"2173","suppressedMessages":"2174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2175","messages":"2176","suppressedMessages":"2177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2178","messages":"2179","suppressedMessages":"2180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2181","messages":"2182","suppressedMessages":"2183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2184","messages":"2185","suppressedMessages":"2186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2187","messages":"2188","suppressedMessages":"2189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2190","messages":"2191","suppressedMessages":"2192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2193","messages":"2194","suppressedMessages":"2195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2196","messages":"2197","suppressedMessages":"2198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2199","messages":"2200","suppressedMessages":"2201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2202","messages":"2203","suppressedMessages":"2204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2205","messages":"2206","suppressedMessages":"2207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2208","messages":"2209","suppressedMessages":"2210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2211","messages":"2212","suppressedMessages":"2213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2214","messages":"2215","suppressedMessages":"2216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2217","messages":"2218","suppressedMessages":"2219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2220","messages":"2221","suppressedMessages":"2222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2223","messages":"2224","suppressedMessages":"2225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2226","messages":"2227","suppressedMessages":"2228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2229","messages":"2230","suppressedMessages":"2231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2232","messages":"2233","suppressedMessages":"2234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2235","messages":"2236","suppressedMessages":"2237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2238","messages":"2239","suppressedMessages":"2240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2241","messages":"2242","suppressedMessages":"2243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2244","messages":"2245","suppressedMessages":"2246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2247","messages":"2248","suppressedMessages":"2249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2250","messages":"2251","suppressedMessages":"2252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2253","messages":"2254","suppressedMessages":"2255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2256","messages":"2257","suppressedMessages":"2258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2259","messages":"2260","suppressedMessages":"2261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2262","messages":"2263","suppressedMessages":"2264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2265","messages":"2266","suppressedMessages":"2267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2268","messages":"2269","suppressedMessages":"2270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mahesha/Downloads/hasivu-platform/web/src/app/admin/schedule/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/analytics/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/auth/forgot-password/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/auth/login/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/auth/register/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/dashboard/admin/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/dashboard/kitchen/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/dashboard/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/dashboard/parent/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/inventory-management/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/kitchen/schedule/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/kitchen-management/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/layout.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/menu/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/notifications/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/order-workflow/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/orders/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/rfid-verification/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/settings/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/AuthModal.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/DashboardOverview.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/MobileResponsiveNavigation.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/NotificationSystem.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/OnboardingFlow.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ProgressiveLoading.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/RFIDManagementDashboard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/accessibility/AccessibilityProvider.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/accessibility/AriaUtils.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/accessibility/FocusManager.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/accessibility/ScreenReaderOnly.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/accessibility/SkipNavigation.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/accessibility/__tests__/accessibility.test.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/AuthLayout.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/EmailVerificationForm.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/EnhancedLoginForm.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/EnhancedPasswordRecoveryForm.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/EnhancedSchoolLoginForm.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/ForgotPasswordForm.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/LoginForm.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/MfaForm.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/MultiFactorAuthForm.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/MultiStepRegistrationForm.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/ProfileManagementForm.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/ProtectedRoute.tsx",["2271","2272"],[],"\"use client\"\n\nimport * as React from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport { Loader2, Shield, AlertTriangle, Lock } from \"lucide-react\"\n\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\"\nimport { cn } from \"@/lib/utils\"\n\nimport type { User, UserRole, Permission } from \"@/types/auth\"\nimport { ROLE_PERMISSIONS, PermissionChecker } from \"@/types/auth\"\nimport { useAuth as useAuthContext } from \"@/contexts/auth-context\"\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode\n  \n  // Authentication requirements\n  requireAuth?: boolean\n  \n  // Role-based access\n  allowedRoles?: UserRole[]\n  \n  // Permission-based access\n  requiredPermissions?: Permission[]\n  \n  // Email verification requirement\n  requireEmailVerification?: boolean\n  \n  // Redirect options\n  redirectTo?: string\n  redirectOnSuccess?: string\n  \n  // Loading and error customization\n  loadingComponent?: React.ReactNode\n  unauthorizedComponent?: React.ReactNode\n  \n  // Layout options\n  fallbackLayout?: boolean\n  \n  className?: string\n}\n\ninterface AuthContextType {\n  user: User | null\n  isLoading: boolean\n  isAuthenticated: boolean\n  checkPermission: (permission: Permission) => boolean\n  checkRole: (role: UserRole) => boolean\n}\n\n// Use the actual auth context\nconst useAuth = (): AuthContextType => {\n  const { user, isLoading, isAuthenticated } = useAuthContext()\n\n  const checkPermission = (permission: Permission): boolean => {\n    return PermissionChecker.hasPermission(user, permission)\n  }\n\n  const checkRole = (role: UserRole): boolean => {\n    return PermissionChecker.hasRole(user, role)\n  }\n\n  return {\n    user,\n    isLoading,\n    isAuthenticated,\n    checkPermission,\n    checkRole,\n  }\n}\n\nexport function ProtectedRoute({\n  children,\n  requireAuth = true,\n  allowedRoles = [],\n  requiredPermissions = [],\n  requireEmailVerification = false,\n  redirectTo = \"/auth/login\",\n  redirectOnSuccess,\n  loadingComponent,\n  unauthorizedComponent,\n  fallbackLayout = true,\n  className\n}: ProtectedRouteProps) {\n  const { user, isLoading, isAuthenticated, checkPermission, checkRole } = useAuth()\n  const router = useRouter()\n\n  // Handle redirection\n  React.useEffect(() => {\n    if (!isLoading) {\n      if (requireAuth && !isAuthenticated) {\n        const currentPath = window.location.pathname\n        const redirectPath = `${redirectTo}?redirect=${encodeURIComponent(currentPath)}`\n        router.replace(redirectPath)\n        return\n      }\n\n      if (redirectOnSuccess && isAuthenticated) {\n        router.replace(redirectOnSuccess)\n        return\n      }\n    }\n  }, [isLoading, isAuthenticated, requireAuth, redirectTo, redirectOnSuccess, router])\n\n  // Show loading state\n  if (isLoading) {\n    if (loadingComponent) {\n      return <>{loadingComponent}</>\n    }\n\n    return (\n      <LoadingScreen \n        fallbackLayout={fallbackLayout}\n        className={className}\n      />\n    )\n  }\n\n  // Check authentication\n  if (requireAuth && !isAuthenticated) {\n    return null // Redirect will handle this\n  }\n\n  // Check email verification\n  if (requireEmailVerification && user && !user.emailVerified) {\n    return (\n      <UnauthorizedScreen\n        type=\"email-verification\"\n        user={user}\n        fallbackLayout={fallbackLayout}\n        className={className}\n      />\n    )\n  }\n\n  // Check role-based access\n  if (allowedRoles.length > 0 && user) {\n    const hasAllowedRole = allowedRoles.some(role => checkRole(role))\n    if (!hasAllowedRole) {\n      if (unauthorizedComponent) {\n        return <>{unauthorizedComponent}</>\n      }\n      \n      return (\n        <UnauthorizedScreen\n          type=\"role\"\n          user={user}\n          allowedRoles={allowedRoles}\n          fallbackLayout={fallbackLayout}\n          className={className}\n        />\n      )\n    }\n  }\n\n  // Check permission-based access\n  if (requiredPermissions.length > 0 && user) {\n    const hasAllPermissions = requiredPermissions.every(permission => \n      checkPermission(permission)\n    )\n    \n    if (!hasAllPermissions) {\n      if (unauthorizedComponent) {\n        return <>{unauthorizedComponent}</>\n      }\n      \n      return (\n        <UnauthorizedScreen\n          type=\"permission\"\n          user={user}\n          requiredPermissions={requiredPermissions}\n          fallbackLayout={fallbackLayout}\n          className={className}\n        />\n      )\n    }\n  }\n\n  // All checks passed - render children\n  return <>{children}</>\n}\n\n// Loading Screen Component\ninterface LoadingScreenProps {\n  fallbackLayout?: boolean\n  className?: string\n}\n\nfunction LoadingScreen({ fallbackLayout = true, className }: LoadingScreenProps) {\n  const content = (\n    <div className=\"flex flex-col items-center justify-center space-y-4\">\n      <div className=\"w-16 h-16 bg-primary-100 rounded-full flex items-center justify-center\">\n        <Loader2 className=\"w-8 h-8 text-primary-600 animate-spin\" />\n      </div>\n      <div className=\"text-center\">\n        <h3 className=\"text-lg font-medium text-gray-900\">Loading...</h3>\n        <p className=\"text-gray-600\">Please wait while we load your content</p>\n      </div>\n    </div>\n  )\n\n  if (!fallbackLayout) {\n    return <div className={className}>{content}</div>\n  }\n\n  return (\n    <div className={cn(\"min-h-screen flex items-center justify-center bg-gray-50\", className)}>\n      <Card className=\"w-full max-w-md\">\n        <CardContent className=\"pt-6\">\n          {content}\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n\n// Unauthorized Screen Component\ninterface UnauthorizedScreenProps {\n  type: \"role\" | \"permission\" | \"email-verification\"\n  user?: User | null\n  allowedRoles?: UserRole[]\n  requiredPermissions?: Permission[]\n  fallbackLayout?: boolean\n  className?: string\n}\n\nfunction UnauthorizedScreen({\n  type,\n  user,\n  allowedRoles = [],\n  requiredPermissions = [],\n  fallbackLayout = true,\n  className\n}: UnauthorizedScreenProps) {\n  const router = useRouter()\n\n  const getContent = () => {\n    switch (type) {\n      case \"email-verification\":\n        return {\n          icon: <Shield className=\"w-8 h-8 text-warning-600\" />,\n          title: \"Email Verification Required\",\n          description: \"Please verify your email address to access this page.\",\n          action: (\n            <Button \n              onClick={() => router.push(\"/auth/verify-email\")}\n              className=\"bg-primary-600 hover:bg-primary-700\"\n            >\n              Verify Email\n            </Button>\n          )\n        }\n      \n      case \"role\":\n        return {\n          icon: <Lock className=\"w-8 h-8 text-error-600\" />,\n          title: \"Access Denied\",\n          description: `This page requires ${allowedRoles.length > 1 ? 'one of the following roles' : 'the following role'}: ${allowedRoles.join(', ')}.`,\n          action: (\n            <Button \n              variant=\"outline\"\n              onClick={() => router.push(\"/dashboard\")}\n            >\n              Go to Dashboard\n            </Button>\n          )\n        }\n      \n      case \"permission\":\n        return {\n          icon: <AlertTriangle className=\"w-8 h-8 text-error-600\" />,\n          title: \"Insufficient Permissions\",\n          description: \"You don't have the required permissions to access this page.\",\n          action: (\n            <Button \n              variant=\"outline\"\n              onClick={() => router.push(\"/dashboard\")}\n            >\n              Go to Dashboard\n            </Button>\n          )\n        }\n      \n      default:\n        return {\n          icon: <Lock className=\"w-8 h-8 text-error-600\" />,\n          title: \"Access Denied\",\n          description: \"You don't have permission to access this page.\",\n          action: (\n            <Button \n              variant=\"outline\"\n              onClick={() => router.push(\"/\")}\n            >\n              Go Home\n            </Button>\n          )\n        }\n    }\n  }\n\n  const { icon, title, description, action } = getContent()\n\n  const content = (\n    <Card className=\"w-full max-w-md\">\n      <CardHeader className=\"text-center\">\n        <div className=\"mx-auto w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mb-4\">\n          {icon}\n        </div>\n        <CardTitle className=\"text-xl\">{title}</CardTitle>\n        <CardDescription>{description}</CardDescription>\n      </CardHeader>\n      \n      {user && (\n        <CardContent className=\"text-center\">\n          <div className=\"p-3 bg-gray-50 rounded-md\">\n            <p className=\"text-sm text-gray-600\">\n              Signed in as: <span className=\"font-medium\">{user.email}</span>\n            </p>\n            <p className=\"text-sm text-gray-600\">\n              Role: <span className=\"font-medium capitalize\">{user.role}</span>\n            </p>\n          </div>\n        </CardContent>\n      )}\n      \n      <CardFooter className=\"flex flex-col space-y-2\">\n        {action}\n        <Button \n          variant=\"ghost\" \n          size=\"sm\"\n          onClick={() => router.push(\"/auth/logout\")}\n          className=\"text-gray-600\"\n        >\n          Sign out\n        </Button>\n      </CardFooter>\n    </Card>\n  )\n\n  if (!fallbackLayout) {\n    return <div className={className}>{content}</div>\n  }\n\n  return (\n    <div className={cn(\"min-h-screen flex items-center justify-center bg-gray-50 p-4\", className)}>\n      {content}\n    </div>\n  )\n}\n\n// Higher-order component for protecting pages\nexport function withAuth<P extends object>(\n  Component: React.ComponentType<P>,\n  options: Omit<ProtectedRouteProps, 'children'> = {}\n) {\n  const WrappedComponent = (props: P) => (\n    <ProtectedRoute {...options}>\n      <Component {...props} />\n    </ProtectedRoute>\n  )\n\n  WrappedComponent.displayName = `withAuth(${Component.displayName || Component.name})`\n  \n  return WrappedComponent\n}\n\n// Hook for checking permissions in components\nexport function usePermissions() {\n  const { checkPermission, checkRole, user } = useAuth()\n  \n  return {\n    checkPermission,\n    checkRole,\n    hasRole: (role: UserRole) => checkRole(role),\n    hasPermission: (permission: Permission) => checkPermission(permission),\n    hasAnyRole: (roles: UserRole[]) => roles.some(role => checkRole(role)),\n    hasAllPermissions: (permissions: Permission[]) => \n      permissions.every(permission => checkPermission(permission)),\n    user,\n  }\n}\n\n// Utility components for conditional rendering\ninterface ConditionalRenderProps {\n  children: React.ReactNode\n  fallback?: React.ReactNode\n}\n\nexport function RequireAuth({ children, fallback = null }: ConditionalRenderProps) {\n  const { isAuthenticated } = useAuth()\n  return isAuthenticated ? <>{children}</> : <>{fallback}</>\n}\n\nexport function RequireRole({ \n  children, \n  roles, \n  fallback = null \n}: ConditionalRenderProps & { roles: UserRole[] }) {\n  const { hasAnyRole } = usePermissions()\n  return hasAnyRole(roles) ? <>{children}</> : <>{fallback}</>\n}\n\nexport function RequirePermission({ \n  children, \n  permissions, \n  fallback = null \n}: ConditionalRenderProps & { permissions: Permission[] }) {\n  const { hasAllPermissions } = usePermissions()\n  return hasAllPermissions(permissions) ? <>{children}</> : <>{fallback}</>\n}","/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/RegisterForm.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/SocialLoginButtons.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/index.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/schemas.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/common/ComponentTest.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/common/ErrorBoundary.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/common/LoadingScreen.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/common/ProgressBar.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/common/index.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/ParentDashboard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/admin-dashboard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/advanced-features.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/dashboard-demo.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/enhanced-admin-dashboard-v2.tsx",["2273"],[],"\"use client\"\n\nimport React, { useState, useEffect } from 'react';\nimport { io, Socket } from \"socket.io-client\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from \"@/components/ui/accordion\";\nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle, AlertDialogTrigger } from \"@/components/ui/alert-dialog\";\nimport { Breadcrumb, BreadcrumbItem, BreadcrumbLink, BreadcrumbList, BreadcrumbPage, BreadcrumbSeparator } from \"@/components/ui/breadcrumb\";\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from \"@/components/ui/collapsible\";\nimport { Toggle } from \"@/components/ui/toggle\";\nimport { \n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer,\n  LineChart, Line, PieChart, Pie, Cell, Area, AreaChart, ComposedChart,\n  RadialBarChart, RadialBar, Treemap, ScatterChart, Scatter, ReferenceLine\n} from 'recharts';\nimport { ChartContainer, ChartTooltip, ChartTooltipContent, ChartConfig } from \"@/components/ui/chart\";\nimport { Carousel, CarouselContent, CarouselItem, CarouselNext, CarouselPrevious } from \"@/components/ui/carousel\";\nimport { \n  Sidebar, SidebarContent, SidebarFooter, SidebarGroup, SidebarGroupContent, \n  SidebarGroupLabel, SidebarHeader, SidebarMenu, SidebarMenuButton, \n  SidebarMenuItem, SidebarProvider, SidebarTrigger, SidebarInset\n} from \"@/components/ui/sidebar\";\nimport { MealOrderDrawer, type MealItem } from \"@/components/ui/meal-order-drawer\";\nimport { Sheet, SheetContent, SheetDescription, SheetHeader, SheetTitle, SheetTrigger } from \"@/components/ui/sheet\";\nimport { \n  Crown, Users, DollarSign, TrendingUp, AlertCircle, CheckCircle,\n  Calendar, Settings, BarChart3, PieChart as PieChartIcon, Activity,\n  School, Clock, Target, Award, Bell, MessageSquare, FileText,\n  Download, Filter, Search, RefreshCw, Send, Shield, AlertTriangle,\n  Utensils, Heart, Coffee, Apple, ChefHat, Package, Truck,\n  Wifi, Radio, Zap, TrendingDown, Eye, EyeOff, Plus, X,\n  Home, CreditCard, Smartphone, Scan, UserCheck, MapPin,\n  BookOpen, GraduationCap, TrendingUpDown, MoreHorizontal,\n  Star, Clock3, Users2, Loader, CheckCircle2, XCircle,\n  AlertOctagon, ThermometerSun, Droplets, Wind, Sun\n} from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\ninterface AdminData {\n  id: string;\n  name: string;\n  role: string;\n  email: string;\n  avatar?: string;\n  permissions: string[];\n}\n\ninterface EnhancedAdminDashboardV2Props {\n  adminData: AdminData;\n  className?: string;\n}\n\n// Enhanced mock data for comprehensive admin dashboard\nconst mockRFIDAnalytics = {\n  activeStudents: 1186,\n  scanSuccess: 97.3,\n  averageQueueTime: 2.8, // minutes\n  peakHours: [\n    { hour: '8:00 AM', scans: 145, queueTime: 1.2 },\n    { hour: '10:30 AM', scans: 89, queueTime: 0.8 },\n    { hour: '12:00 PM', scans: 567, queueTime: 4.2 },\n    { hour: '1:00 PM', scans: 423, queueTime: 3.1 },\n    { hour: '3:30 PM', scans: 156, queueTime: 1.5 }\n  ],\n  deviceStatus: [\n    { id: 'RFID-001', location: 'Main Canteen', status: 'active', lastScan: '2 minutes ago', batteryLevel: 87 },\n    { id: 'RFID-002', location: 'Secondary Cafeteria', status: 'active', lastScan: '5 minutes ago', batteryLevel: 92 },\n    { id: 'RFID-003', location: 'Staff Kitchen', status: 'maintenance', lastScan: '1 hour ago', batteryLevel: 45 },\n    { id: 'RFID-004', location: 'Mobile Cart 1', status: 'active', lastScan: '1 minute ago', batteryLevel: 78 }\n  ]\n};\n\nconst mockMealRecommendations = [\n  {\n    id: 'meal-001',\n    name: 'Paneer Tikka Bowl',\n    description: 'Grilled paneer with aromatic spices, quinoa, and fresh vegetables',\n    price: 85,\n    image: '/api/placeholder/300/200',\n    category: 'Main Course',\n    preparationTime: 15,\n    rating: 4.8,\n    nutrition: { calories: 420, protein: 22, carbs: 35, fats: 18, fiber: 8 },\n    allergens: ['Dairy'],\n    dietaryTags: ['vegetarian', 'gluten-free'] as const,\n    ingredients: ['Paneer', 'Quinoa', 'Bell Peppers', 'Onions', 'Yogurt', 'Spices'],\n    popularity: 94,\n    healthScore: 89\n  },\n  {\n    id: 'meal-002', \n    name: 'Mediterranean Wrap',\n    description: 'Whole wheat wrap with hummus, grilled vegetables, and feta cheese',\n    price: 75,\n    image: '/api/placeholder/300/200',\n    category: 'Wraps & Rolls',\n    preparationTime: 10,\n    rating: 4.6,\n    nutrition: { calories: 380, protein: 16, carbs: 45, fats: 14, fiber: 12 },\n    allergens: ['Gluten', 'Dairy'],\n    dietaryTags: ['vegetarian'] as const,\n    ingredients: ['Whole Wheat Tortilla', 'Hummus', 'Zucchini', 'Eggplant', 'Feta'],\n    popularity: 87,\n    healthScore: 92\n  },\n  {\n    id: 'meal-003',\n    name: 'Masala Dosa Combo',\n    description: 'Traditional South Indian dosa with sambar and coconut chutney',\n    price: 65,\n    image: '/api/placeholder/300/200',\n    category: 'South Indian',\n    preparationTime: 20,\n    rating: 4.9,\n    nutrition: { calories: 350, protein: 12, carbs: 58, fats: 8, fiber: 6 },\n    allergens: [],\n    dietaryTags: ['vegan', 'gluten-free'] as const,\n    ingredients: ['Rice', 'Urad Dal', 'Coconut', 'Tomatoes', 'Lentils'],\n    popularity: 96,\n    healthScore: 85\n  }\n];\n\nconst mockRealTimeData = {\n  liveOrders: 23,\n  kitchenLoad: 78,\n  deliveryQueue: 12,\n  avgWaitTime: 8.5,\n  customerSatisfaction: 4.7,\n  revenueToday: 28450,\n  ordersToday: 187,\n  peakPrediction: {\n    nextPeak: '12:45 PM',\n    estimatedOrders: 85,\n    recommendedStaff: 8\n  }\n};\n\nconst mockStudentAnalytics = {\n  dietaryPreferences: [\n    { preference: 'Vegetarian', count: 456, percentage: 36.5, trend: '+2.3%' },\n    { preference: 'Non-Vegetarian', count: 523, percentage: 41.9, trend: '-1.1%' },\n    { preference: 'Vegan', count: 156, percentage: 12.5, trend: '+5.8%' },\n    { preference: 'Jain', count: 113, percentage: 9.1, trend: '+0.7%' }\n  ],\n  spendingPatterns: [\n    { grade: '6th', avgDaily: 35, avgMonthly: 750, trend: 'up' },\n    { grade: '7th', avgDaily: 42, avgMonthly: 920, trend: 'up' },\n    { grade: '8th', avgDaily: 48, avgMonthly: 1050, trend: 'stable' },\n    { grade: '9th', avgDaily: 55, avgMonthly: 1200, trend: 'up' },\n    { grade: '10th', avgDaily: 58, avgMonthly: 1280, trend: 'down' },\n    { grade: '11th', avgDaily: 62, avgMonthly: 1350, trend: 'up' },\n    { grade: '12th', avgDaily: 65, avgMonthly: 1420, trend: 'stable' }\n  ],\n  healthMetrics: {\n    bmiCompliance: 82.4,\n    nutritionGoals: 89.1,\n    allergyAlerts: 12,\n    specialDiets: 67\n  }\n};\n\nconst mockWeatherData = {\n  current: {\n    temperature: 28,\n    condition: 'Partly Cloudy',\n    humidity: 65,\n    windSpeed: 12\n  },\n  impact: {\n    expectedOrderIncrease: 15,\n    recommendedMenuAdjustments: ['Cold Beverages', 'Light Meals', 'Ice Creams'],\n    outdoorServiceViability: 'Good'\n  }\n};\n\nconst mockSchoolAnalytics = {\n  overview: {\n    totalStudents: 1248,\n    activeOrders: 156,\n    totalRevenue: 45780,\n    monthlyGrowth: 12.5,\n    nutritionCompliance: 89.4,\n    customerSatisfaction: 4.7,\n    operationalEfficiency: 92.1,\n    wasteReduction: 15.3\n  },\n  \n  orderTrends: [\n    { month: 'Aug', orders: 3420, revenue: 38950, satisfaction: 4.5 },\n    { month: 'Sep', orders: 3680, revenue: 42100, satisfaction: 4.6 },\n    { month: 'Oct', orders: 3920, revenue: 44200, satisfaction: 4.7 },\n    { month: 'Nov', orders: 4150, revenue: 47800, satisfaction: 4.8 },\n    { month: 'Dec', orders: 3890, revenue: 43600, satisfaction: 4.6 },\n    { month: 'Jan', orders: 2450, revenue: 28900, satisfaction: 4.7 }\n  ],\n\n  mealDistribution: [\n    { name: 'Lunch', value: 45, count: 2890, revenue: 28900 },\n    { name: 'Breakfast', value: 25, count: 1608, revenue: 12864 },\n    { name: 'Snacks', value: 20, count: 1286, revenue: 6430 },\n    { name: 'Dinner', value: 10, count: 643, revenue: 4501 }\n  ],\n\n  gradeDistribution: [\n    { grade: '1st-2nd', students: 180, orders: 1260, avgSpending: 850 },\n    { grade: '3rd-4th', students: 200, orders: 1580, avgSpending: 950 },\n    { grade: '5th-6th', students: 220, orders: 1890, avgSpending: 1050 },\n    { grade: '7th-8th', students: 240, orders: 2180, avgSpending: 1150 },\n    { grade: '9th-10th', students: 208, orders: 2090, avgSpending: 1250 },\n    { grade: '11th-12th', students: 200, orders: 2200, avgSpending: 1350 }\n  ],\n\n  nutritionCompliance: [\n    { week: 'W1', calories: 92, protein: 88, vegetables: 85, fruits: 79 },\n    { week: 'W2', calories: 89, protein: 91, vegetables: 87, fruits: 82 },\n    { week: 'W3', calories: 94, protein: 86, vegetables: 89, fruits: 85 },\n    { week: 'W4', calories: 87, protein: 93, vegetables: 91, fruits: 88 }\n  ],\n\n  realTimeMetrics: [\n    { time: '09:00', orders: 12, revenue: 850, satisfaction: 4.8 },\n    { time: '10:00', orders: 23, revenue: 1650, satisfaction: 4.7 },\n    { time: '11:00', orders: 45, revenue: 3200, satisfaction: 4.6 },\n    { time: '12:00', orders: 89, revenue: 6400, satisfaction: 4.8 },\n    { time: '13:00', orders: 67, revenue: 4800, satisfaction: 4.9 },\n    { time: '14:00', orders: 34, revenue: 2400, satisfaction: 4.7 },\n    { time: '15:00', orders: 28, revenue: 1950, satisfaction: 4.8 }\n  ]\n};\n\nconst mockActiveOrders = [\n  {\n    id: 'ORD-001',\n    studentName: 'Emma Wilson',\n    grade: '8th',\n    section: 'A',\n    mealType: 'lunch',\n    items: ['Grilled Chicken', 'Rice Bowl', 'Salad'],\n    amount: 65,\n    status: 'preparing',\n    orderTime: '12:15 PM',\n    estimatedReady: '12:45 PM',\n    priority: 'high',\n    allergies: ['Nuts'],\n    specialRequests: 'Extra vegetables'\n  },\n  {\n    id: 'ORD-002',\n    studentName: 'James Martinez',\n    grade: '5th',\n    section: 'B',\n    mealType: 'snack',\n    items: ['Fruit Bowl', 'Juice'],\n    amount: 25,\n    status: 'ready',\n    orderTime: '11:30 AM',\n    estimatedReady: '11:45 AM',\n    priority: 'medium',\n    allergies: [],\n    specialRequests: null\n  },\n  {\n    id: 'ORD-003',\n    studentName: 'Sophia Chen',\n    grade: '10th',\n    section: 'C',\n    mealType: 'lunch',\n    items: ['Vegetarian Pasta', 'Garlic Bread', 'Smoothie'],\n    amount: 55,\n    status: 'pending',\n    orderTime: '12:20 PM',\n    estimatedReady: '12:50 PM',\n    priority: 'low',\n    allergies: ['Dairy'],\n    specialRequests: 'Vegan alternative'\n  }\n];\n\nconst COLORS = ['#3b82f6', '#10b981', '#f59e0b', '#ef4444', '#8b5cf6', '#06b6d4'];\n\nexport const EnhancedAdminDashboardV2: React.FC<EnhancedAdminDashboardV2Props> = ({\n  adminData,\n  className\n}) => {\n  const [selectedPeriod, setSelectedPeriod] = useState<'daily' | 'weekly' | 'monthly'>('monthly');\n  const [selectedOrders, setSelectedOrders] = useState<string[]>([]);\n  const [broadcastMessage, setBroadcastMessage] = useState('');\n  const [emergencyMode, setEmergencyMode] = useState(false);\n  const [selectedMeal, setSelectedMeal] = useState<MealItem | null>(null);\n  const [isMealDrawerOpen, setIsMealDrawerOpen] = useState(false);\n  const [realTimeEnabled, setRealTimeEnabled] = useState(true);\n  const [activeView, setActiveView] = useState('overview');\n  const [analyticsData, setAnalyticsData] = useState(null);\n  const [isLoadingAnalytics, setIsLoadingAnalytics] = useState(false);\n  const [analyticsError, setAnalyticsError] = useState(null);\n  const [ordersData, setOrdersData] = useState(null);\n  const [isLoadingOrders, setIsLoadingOrders] = useState(false);\n  const [ordersError, setOrdersError] = useState(null);\n  const [rfidData, setRfidData] = useState(null);\n  const [isLoadingRfid, setIsLoadingRfid] = useState(false);\n  const [rfidError, setRfidError] = useState(null);\n  const [realTimeData, setRealTimeData] = useState(mockRealTimeData);\n  \n  useEffect(() => {\n    const socket: Socket = io(\"http://localhost:3002\");\n\n    socket.on(\"connect\", () => {\n      console.log(\"Connected to WebSocket server\");\n    });\n\n    socket.on(\"disconnect\", () => {\n      console.log(\"Disconnected from WebSocket server\");\n    });\n\n    socket.on(\"realtime_stats\", (data) => {\n      console.log(\"Received real-time stats:\", data);\n      setRealTimeData(prevData => ({ ...prevData, ...data }));\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (activeView === 'analytics') {\n      const fetchAnalyticsData = async () => {\n        setIsLoadingAnalytics(true);\n        setAnalyticsError(null);\n        try {\n          // Assuming the backend runs on port 3002\n          const response = await fetch('http://localhost:3002/api/v1/analytics/dashboard');\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          const data = await response.json();\n          setAnalyticsData(data);\n        } catch (error) {\n          setAnalyticsError(error.message);\n        } finally {\n          setIsLoadingAnalytics(false);\n        }\n      };\n      fetchAnalyticsData();\n    }\n  }, [activeView]);\n\n  React.useEffect(() => {\n    if (activeView === 'orders') {\n      const fetchOrdersData = async () => {\n        setIsLoadingOrders(true);\n        setOrdersError(null);\n        try {\n          const response = await fetch('http://localhost:3002/api/v1/orders');\n          if (!response.ok) {\n            throw new Error('Failed to fetch orders data');\n          }\n          const data = await response.json();\n          setOrdersData(data);\n        } catch (error) {\n          setOrdersError(error.message);\n        } finally {\n          setIsLoadingOrders(false);\n        }\n      };\n      fetchOrdersData();\n    }\n  }, [activeView]);\n\n  React.useEffect(() => {\n    if (activeView === 'rfid') {\n      const fetchRfidData = async () => {\n        setIsLoadingRfid(true);\n        setRfidError(null);\n        try {\n          const response = await fetch('http://localhost:3002/api/v1/rfid/analytics');\n          if (!response.ok) {\n            throw new Error('Failed to fetch RFID data');\n          }\n          const data = await response.json();\n          setRfidData(data);\n        } catch (error) {\n          setRfidError(error.message);\n        } finally {\n          setIsLoadingRfid(false);\n        }\n      };\n      fetchRfidData();\n    }\n  }, [activeView]);\n\n  const handleOrderSelect = (orderId: string) => {\n    setSelectedOrders(prev => \n      prev.includes(orderId) \n        ? prev.filter(id => id !== orderId)\n        : [...prev, orderId]\n    );\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'ready': return 'bg-green-500';\n      case 'preparing': return 'bg-yellow-500';\n      case 'pending': return 'bg-blue-500';\n      default: return 'bg-gray-400';\n    }\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case 'high': return 'text-red-600';\n      case 'medium': return 'text-yellow-600';\n      case 'low': return 'text-green-600';\n      default: return 'text-gray-600';\n    }\n  };\n\n  const handleMealSelect = (meal: typeof mockMealRecommendations[0]) => {\n    const mealItem: MealItem = {\n      ...meal,\n      customizations: {\n        portion: { small: meal.price - 10, regular: meal.price, large: meal.price + 15 },\n        addOns: [\n          { id: 'extra-portion', name: 'Extra Portion', price: 25 },\n          { id: 'extra-veggies', name: 'Extra Vegetables', price: 15 },\n          { id: 'extra-protein', name: 'Extra Protein', price: 35 }\n        ],\n        modifications: ['Less Spicy', 'Extra Spicy', 'No Onions', 'Extra Sauce']\n      }\n    };\n    setSelectedMeal(mealItem);\n    setIsMealDrawerOpen(true);\n  };\n\n  const handleAddToCart = (meal: MealItem, customizations: any) => {\n    console.log('Added to cart:', meal.name, customizations);\n    // Implementation for adding to cart\n  };\n\n  const getHealthScoreColor = (score: number) => {\n    if (score >= 90) return 'text-green-600 bg-green-50';\n    if (score >= 75) return 'text-yellow-600 bg-yellow-50';\n    return 'text-red-600 bg-red-50';\n  };\n\n  const chartConfig: ChartConfig = {\n    orders: {\n      label: \"Orders\",\n      color: \"hsl(var(--chart-1))\",\n    },\n    revenue: {\n      label: \"Revenue\",\n      color: \"hsl(var(--chart-2))\",\n    },\n    satisfaction: {\n      label: \"Satisfaction\",\n      color: \"hsl(var(--chart-3))\",\n    }\n  };\n\n  return (\n    <SidebarProvider>\n      <div className={cn(\"min-h-screen flex w-full\", className)}>\n        {/* Enhanced Sidebar */}\n        <Sidebar className=\"border-r\">\n          <SidebarHeader className=\"border-b px-6 py-4\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"h-8 w-8 rounded-lg bg-primary flex items-center justify-center\">\n                <School className=\"h-5 w-5 text-primary-foreground\" />\n              </div>\n              <div className=\"flex flex-col\">\n                <span className=\"font-semibold text-sm\">HASIVU Admin</span>\n                <span className=\"text-xs text-muted-foreground\">v2.1.0</span>\n              </div>\n            </div>\n          </SidebarHeader>\n          \n          <SidebarContent className=\"px-4 py-2\">\n            {/* Quick Stats */}\n            <SidebarGroup>\n              <SidebarGroupLabel>Quick Overview</SidebarGroupLabel>\n              <SidebarGroupContent>\n                <div className=\"grid grid-cols-2 gap-2 mb-4\">\n                  <div className=\"p-3 rounded-lg bg-primary/10\">\n                    <div className=\"text-lg font-bold text-primary\">{realTimeData.liveOrders}</div>\n                    <div className=\"text-xs text-muted-foreground\">Live Orders</div>\n                  </div>\n                  <div className=\"p-3 rounded-lg bg-green-50\">\n                    <div className=\"text-lg font-bold text-green-600\">₹{realTimeData.revenueToday.toLocaleString()}</div>\n                    <div className=\"text-xs text-muted-foreground\">Today's Revenue</div>\n                  </div>\n                </div>\n              </SidebarGroupContent>\n            </SidebarGroup>\n\n            {/* Navigation Menu */}\n            <SidebarGroup>\n              <SidebarGroupLabel>Navigation</SidebarGroupLabel>\n              <SidebarGroupContent>\n                <SidebarMenu>\n                  <SidebarMenuItem>\n                    <SidebarMenuButton \n                      onClick={() => setActiveView('overview')}\n                      isActive={activeView === 'overview'}\n                    >\n                      <Home className=\"h-4 w-4\" />\n                      <span>Overview</span>\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                  <SidebarMenuItem>\n                    <SidebarMenuButton \n                      onClick={() => setActiveView('analytics')}\n                      isActive={activeView === 'analytics'}\n                    >\n                      <BarChart3 className=\"h-4 w-4\" />\n                      <span>Analytics</span>\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                  <SidebarMenuItem>\n                    <SidebarMenuButton \n                      onClick={() => setActiveView('orders')}\n                      isActive={activeView === 'orders'}\n                    >\n                      <Utensils className=\"h-4 w-4\" />\n                      <span>Orders</span>\n                      <Badge className=\"ml-auto\" variant=\"secondary\">\n                        {mockActiveOrders.length}\n                      </Badge>\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                  <SidebarMenuItem>\n                    <SidebarMenuButton \n                      onClick={() => setActiveView('rfid')}\n                      isActive={activeView === 'rfid'}\n                      data-testid=\"rfid-nav\"\n                    >\n                      <Radio className=\"h-4 w-4\" />\n                      <span>RFID System</span>\n                      <Badge className=\"ml-auto\" variant=\"outline\">\n                        {mockRFIDAnalytics.deviceStatus.filter(d => d.status === 'active').length}\n                      </Badge>\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                  <SidebarMenuItem>\n                    <SidebarMenuButton \n                      onClick={() => setActiveView('meals')}\n                      isActive={activeView === 'meals'}\n                    >\n                      <ChefHat className=\"h-4 w-4\" />\n                      <span>Meal Management</span>\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                  <SidebarMenuItem>\n                    <SidebarMenuButton \n                      onClick={() => setActiveView('students')}\n                      isActive={activeView === 'students'}\n                    >\n                      <Users2 className=\"h-4 w-4\" />\n                      <span>Student Analytics</span>\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                  <SidebarMenuItem>\n                    <SidebarMenuButton \n                      onClick={() => setActiveView('kitchen')}\n                      isActive={activeView === 'kitchen'}\n                    >\n                      <Package className=\"h-4 w-4\" />\n                      <span>Kitchen Operations</span>\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                </SidebarMenu>\n              </SidebarGroupContent>\n            </SidebarGroup>\n\n            {/* Weather Impact */}\n            <SidebarGroup>\n              <SidebarGroupLabel>Today's Weather Impact</SidebarGroupLabel>\n              <SidebarGroupContent>\n                <div className=\"p-3 rounded-lg bg-blue-50 border\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <div className=\"flex items-center space-x-2\">\n                      <Sun className=\"h-4 w-4 text-blue-600\" />\n                      <span className=\"text-sm font-medium\">{mockWeatherData.current.temperature}°C</span>\n                    </div>\n                    <span className=\"text-xs text-muted-foreground\">{mockWeatherData.current.condition}</span>\n                  </div>\n                  <div className=\"text-xs text-blue-600\">\n                    Expected +{mockWeatherData.impact.expectedOrderIncrease}% orders\n                  </div>\n                </div>\n              </SidebarGroupContent>\n            </SidebarGroup>\n          </SidebarContent>\n          \n          <SidebarFooter className=\"border-t p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"h-2 w-2 rounded-full bg-green-500\"></div>\n                <span className=\"text-xs text-muted-foreground\">System Online</span>\n              </div>\n              <div className=\"flex items-center space-x-1\">\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  className=\"h-6 w-6\"\n                  onClick={() => setRealTimeEnabled(!realTimeEnabled)}\n                >\n                  {realTimeEnabled ? \n                    <Eye className=\"h-3 w-3 text-green-600\" /> : \n                    <EyeOff className=\"h-3 w-3 text-gray-400\" />\n                  }\n                </Button>\n                <SidebarTrigger />\n              </div>\n            </div>\n          </SidebarFooter>\n        </Sidebar>\n\n        {/* Main Content */}\n        <SidebarInset className=\"flex-1\">\n          <div className=\"p-6 space-y-6\">\n            {/* Header with Real-time Status */}\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <Breadcrumb>\n                  <BreadcrumbList>\n                    <BreadcrumbItem>\n                      <BreadcrumbLink href=\"/dashboard\">Dashboard</BreadcrumbLink>\n                    </BreadcrumbItem>\n                    <BreadcrumbSeparator />\n                    <BreadcrumbItem>\n                      <BreadcrumbPage>Enhanced Admin Panel</BreadcrumbPage>\n                    </BreadcrumbItem>\n                  </BreadcrumbList>\n                </Breadcrumb>\n                <h1 className=\"text-2xl font-bold mt-2\">Welcome back, {adminData.name}</h1>\n              </div>\n              <div className=\"flex items-center space-x-3\">\n                {realTimeEnabled && (\n                  <div className=\"flex items-center space-x-2 text-sm text-muted-foreground\">\n                    <div className=\"h-2 w-2 rounded-full bg-green-500 animate-pulse\"></div>\n                    <span>Live • Updated {new Date().toLocaleTimeString()}</span>\n                  </div>\n                )}\n                <Button size=\"sm\" variant=\"outline\">\n                  <Download className=\"h-4 w-4 mr-2\" />\n                  Export Report\n                </Button>\n              </div>\n            </div>\n\n            {/* Emergency Broadcast Section */}\n            {emergencyMode && (\n              <Alert className=\"border-red-200 bg-red-50\">\n                <AlertTriangle className=\"h-4 w-4 text-red-600\" />\n                <AlertTitle className=\"text-red-800\">Emergency Mode Active</AlertTitle>\n                <AlertDescription className=\"text-red-700\">\n                  Emergency protocols are enabled. All communications will be marked as urgent.\n                </AlertDescription>\n              </Alert>\n            )}\n\n            {/* Overview View */}\n            {activeView === 'overview' && (\n              <div className=\"space-y-6\">\n                {/* Real-time Overview Cards */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                  <Card className=\"bg-gradient-to-r from-blue-500 to-blue-600 text-white\">\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <p className=\"text-blue-100 text-sm\">Live Orders</p>\n                          <p className=\"text-2xl font-bold\">{realTimeData.liveOrders}</p>\n                          <p className=\"text-xs text-blue-200 mt-1\">Avg wait: {realTimeData.avgWaitTime}min</p>\n                        </div>\n                        <div className=\"relative\">\n                          <Utensils className=\"h-8 w-8 text-blue-200\" />\n                          {realTimeEnabled && (\n                            <div className=\"absolute -top-1 -right-1 h-3 w-3 bg-green-400 rounded-full animate-pulse\"></div>\n                          )}\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  <Card className=\"bg-gradient-to-r from-green-500 to-green-600 text-white\">\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <p className=\"text-green-100 text-sm\">Today's Revenue</p>\n                          <p className=\"text-2xl font-bold\">₹{realTimeData.revenueToday.toLocaleString()}</p>\n                          <p className=\"text-xs text-green-200 mt-1\">{realTimeData.ordersToday} orders</p>\n                        </div>\n                        <DollarSign className=\"h-8 w-8 text-green-200\" />\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  <Card className=\"bg-gradient-to-r from-purple-500 to-purple-600 text-white\">\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <p className=\"text-purple-100 text-sm\">Kitchen Load</p>\n                          <p className=\"text-2xl font-bold\">{realTimeData.kitchenLoad}%</p>\n                          <p className=\"text-xs text-purple-200 mt-1\">{realTimeData.deliveryQueue} in queue</p>\n                        </div>\n                        <ChefHat className=\"h-8 w-8 text-purple-200\" />\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  <Card className=\"bg-gradient-to-r from-orange-500 to-orange-600 text-white\">\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <p className=\"text-orange-100 text-sm\">Satisfaction</p>\n                          <p className=\"text-2xl font-bold\">{realTimeData.customerSatisfaction}/5</p>\n                          <p className=\"text-xs text-orange-200 mt-1\">Customer rating</p>\n                        </div>\n                        <Award className=\"h-8 w-8 text-orange-200\" />\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n\n                {/* Real-time Chart */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center\">\n                        <Activity className=\"h-5 w-5 mr-2\" />\n                        Real-time Performance\n                      </div>\n                      {realTimeEnabled && (\n                        <Badge variant=\"secondary\" className=\"animate-pulse\">\n                          <Zap className=\"h-3 w-3 mr-1\" />Live\n                        </Badge>\n                      )}\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <ChartContainer config={chartConfig} className=\"h-[300px]\">\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <LineChart data={mockSchoolAnalytics.realTimeMetrics}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"time\" />\n                          <YAxis yAxisId=\"left\" />\n                          <YAxis yAxisId=\"right\" orientation=\"right\" />\n                          <ChartTooltip content={<ChartTooltipContent />} />\n                          <Line \n                            yAxisId=\"left\" \n                            type=\"monotone\" \n                            dataKey=\"orders\" \n                            stroke=\"var(--color-orders)\" \n                            strokeWidth={3}\n                            dot={{ fill: \"var(--color-orders)\", strokeWidth: 2 }}\n                          />\n                          <Line \n                            yAxisId=\"right\" \n                            type=\"monotone\" \n                            dataKey=\"satisfaction\" \n                            stroke=\"var(--color-satisfaction)\" \n                            strokeWidth={2}\n                            strokeDasharray=\"5 5\"\n                          />\n                        </LineChart>\n                      </ResponsiveContainer>\n                    </ChartContainer>\n                  </CardContent>\n                </Card>\n\n                {/* Peak Prediction and Insights */}\n                <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center\">\n                        <Clock3 className=\"h-5 w-5 mr-2\" />\n                        Peak Prediction\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-4\">\n                        <div className=\"text-center p-4 bg-yellow-50 rounded-lg\">\n                          <div className=\"text-2xl font-bold text-yellow-600\">\n                            {realTimeData.peakPrediction.nextPeak}\n                          </div>\n                          <div className=\"text-sm text-yellow-700\">Next Peak Expected</div>\n                        </div>\n                        <div className=\"grid grid-cols-2 gap-3 text-sm\">\n                          <div>\n                            <span className=\"text-muted-foreground\">Est. Orders:</span>\n                            <span className=\"font-medium ml-2\">{realTimeData.peakPrediction.estimatedOrders}</span>\n                          </div>\n                          <div>\n                            <span className=\"text-muted-foreground\">Staff Needed:</span>\n                            <span className=\"font-medium ml-2\">{realTimeData.peakPrediction.recommendedStaff}</span>\n                          </div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center\">\n                        <ThermometerSun className=\"h-5 w-5 mr-2\" />\n                        Weather Impact\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-3\">\n                        <div className=\"flex items-center justify-between\">\n                          <span className=\"text-sm\">Temperature</span>\n                          <span className=\"font-medium\">{mockWeatherData.current.temperature}°C</span>\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <span className=\"text-sm\">Condition</span>\n                          <span className=\"font-medium\">{mockWeatherData.current.condition}</span>\n                        </div>\n                        <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\n                          <div className=\"text-lg font-bold text-blue-600\">\n                            +{mockWeatherData.impact.expectedOrderIncrease}%\n                          </div>\n                          <div className=\"text-xs text-blue-700\">Expected increase</div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center\">\n                        <Users2 className=\"h-5 w-5 mr-2\" />\n                        Active Students\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-4\">\n                        <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n                          <div className=\"text-2xl font-bold text-green-600\">\n                            {mockRFIDAnalytics.activeStudents}\n                          </div>\n                          <div className=\"text-sm text-green-700\">Active Today</div>\n                        </div>\n                        <div className=\"space-y-2 text-sm\">\n                          <div className=\"flex justify-between\">\n                            <span className=\"text-muted-foreground\">RFID Success:</span>\n                            <span className=\"font-medium\">{mockRFIDAnalytics.scanSuccess}%</span>\n                          </div>\n                          <div className=\"flex justify-between\">\n                            <span className=\"text-muted-foreground\">Avg Queue:</span>\n                            <span className=\"font-medium\">{mockRFIDAnalytics.averageQueueTime}min</span>\n                          </div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n              </div>\n            )}\n\n            {/* Meal Management View */}\n            {activeView === 'meals' && (\n              <div className=\"space-y-6\">\n                <div className=\"flex items-center justify-between\">\n                  <h2 className=\"text-xl font-semibold\">Smart Meal Recommendations</h2>\n                  <div className=\"flex items-center space-x-2\">\n                    <Button size=\"sm\" variant=\"outline\">\n                      <Plus className=\"h-4 w-4 mr-2\" />\n                      Add Meal\n                    </Button>\n                    <Button size=\"sm\" variant=\"outline\">\n                      <Filter className=\"h-4 w-4 mr-2\" />\n                      Filter\n                    </Button>\n                  </div>\n                </div>\n\n                <Carousel className=\"w-full\">\n                  <CarouselContent>\n                    {mockMealRecommendations.map((meal) => (\n                      <CarouselItem key={meal.id} className=\"md:basis-1/2 lg:basis-1/3\">\n                        <Card className=\"h-full hover:shadow-lg transition-shadow cursor-pointer\" onClick={() => handleMealSelect(meal)}>\n                          <div className=\"aspect-video relative overflow-hidden rounded-t-lg\">\n                            <img \n                              src={meal.image} \n                              alt={meal.name}\n                              className=\"object-cover w-full h-full\"\n                            />\n                            <div className=\"absolute top-2 right-2 flex space-x-1\">\n                              <Badge className={getHealthScoreColor(meal.healthScore)}>\n                                ❤️ {meal.healthScore}\n                              </Badge>\n                              <Badge variant=\"secondary\">\n                                ⭐ {meal.rating}\n                              </Badge>\n                            </div>\n                            <div className=\"absolute bottom-2 left-2\">\n                              <Badge variant=\"outline\" className=\"bg-white/90\">\n                                <Clock className=\"h-3 w-3 mr-1\" />\n                                {meal.preparationTime}min\n                              </Badge>\n                            </div>\n                          </div>\n                          <CardContent className=\"p-4\">\n                            <div className=\"space-y-2\">\n                              <div className=\"flex items-center justify-between\">\n                                <h3 className=\"font-semibold text-lg\">{meal.name}</h3>\n                                <span className=\"text-lg font-bold text-primary\">₹{meal.price}</span>\n                              </div>\n                              <p className=\"text-sm text-muted-foreground line-clamp-2\">{meal.description}</p>\n                              <div className=\"flex flex-wrap gap-1\">\n                                {meal.dietaryTags.map((tag) => (\n                                  <Badge key={tag} variant=\"secondary\" className=\"text-xs\">\n                                    {tag === 'vegan' && '🌱'}\n                                    {tag === 'vegetarian' && '🥬'}\n                                    {tag === 'gluten-free' && '🌾'}\n                                    {tag}\n                                  </Badge>\n                                ))}\n                              </div>\n                              <div className=\"flex items-center justify-between pt-2\">\n                                <div className=\"text-sm text-muted-foreground\">\n                                  {meal.nutrition.calories} cal • {meal.nutrition.protein}g protein\n                                </div>\n                                <div className=\"flex items-center text-sm\">\n                                  <TrendingUp className=\"h-3 w-3 mr-1 text-green-600\" />\n                                  {meal.popularity}% popular\n                                </div>\n                              </div>\n                            </div>\n                          </CardContent>\n                        </Card>\n                      </CarouselItem>\n                    ))}\n                  </CarouselContent>\n                  <CarouselPrevious />\n                  <CarouselNext />\n                </Carousel>\n\n                {/* Meal Analytics */}\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle>Top Performing Meals</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-4\">\n                        {mockMealRecommendations.map((meal, index) => (\n                          <div key={meal.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\n                            <div className=\"flex items-center space-x-3\">\n                              <div className=\"w-8 h-8 rounded-full bg-primary/10 flex items-center justify-center text-primary font-bold\">\n                                {index + 1}\n                              </div>\n                              <div>\n                                <div className=\"font-medium\">{meal.name}</div>\n                                <div className=\"text-sm text-muted-foreground\">{meal.category}</div>\n                              </div>\n                            </div>\n                            <div className=\"text-right\">\n                              <div className=\"font-medium text-green-600\">{meal.popularity}%</div>\n                              <div className=\"text-xs text-muted-foreground\">Popularity</div>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  <Card>\n                    <CardHeader>\n                      <CardTitle>Nutritional Balance</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <ResponsiveContainer width=\"100%\" height={250}>\n                        <RadialBarChart cx=\"50%\" cy=\"50%\" innerRadius=\"20%\" outerRadius=\"90%\" data={[\n                          { name: 'Protein', value: 85, fill: '#3b82f6' },\n                          { name: 'Carbs', value: 75, fill: '#10b981' },\n                          { name: 'Fats', value: 65, fill: '#f59e0b' },\n                          { name: 'Fiber', value: 80, fill: '#ef4444' }\n                        ]}>\n                          <RadialBar dataKey=\"value\" cornerRadius={10} fill=\"#8884d8\" />\n                          <Tooltip />\n                        </RadialBarChart>\n                      </ResponsiveContainer>\n                    </CardContent>\n                  </Card>\n                </div>\n              </div>\n            )}\n\n            {/* Other views can be added here with similar patterns */}\n            {activeView === 'orders' && (\n              <div className=\"space-y-6\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Order Management</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    {isLoadingOrders ? (\n                      <div className=\"flex items-center justify-center py-8\">\n                        <Loader className=\"h-8 w-8 animate-spin text-primary\" />\n                        <p className=\"ml-4 text-muted-foreground\">Loading orders...</p>\n                      </div>\n                    ) : ordersError ? (\n                      <div className=\"text-center py-8 text-red-600\">\n                        <AlertCircle className=\"h-8 w-8 mx-auto mb-2\" />\n                        <p>Error loading orders: {ordersError}</p>\n                      </div>\n                    ) : ordersData ? (\n                      <div>\n                        <h3 className=\"text-lg font-semibold mb-4\">Orders Data</h3>\n                        <pre className=\"p-4 bg-gray-100 rounded-md overflow-x-auto\">\n                          {JSON.stringify(ordersData, null, 2)}\n                        </pre>\n                      </div>\n                    ) : null}\n                  </CardContent>\n                </Card>\n              </div>\n            )}\n\n            {activeView === 'rfid' && (\n              <div className=\"space-y-6\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle>RFID System Dashboard</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    {isLoadingRfid ? (\n                      <div className=\"flex items-center justify-center py-8\">\n                        <Loader className=\"h-8 w-8 animate-spin text-primary\" />\n                        <p className=\"ml-4 text-muted-foreground\">Loading RFID data...</p>\n                      </div>\n                    ) : rfidError ? (\n                      <div className=\"text-center py-8 text-red-600\">\n                        <AlertCircle className=\"h-8 w-8 mx-auto mb-2\" />\n                        <p>Error loading RFID data: {rfidError}</p>\n                      </div>\n                    ) : rfidData ? (\n                      <div>\n                        <h3 className=\"text-lg font-semibold mb-4\">RFID Analytics Data</h3>\n                        <pre className=\"p-4 bg-gray-100 rounded-md overflow-x-auto\">\n                          {JSON.stringify(rfidData, null, 2)}\n                        </pre>\n                      </div>\n                    ) : null}\n                  </CardContent>\n                </Card>\n              </div>\n            )}\n\n            {activeView === 'students' && (\n              <div className=\"space-y-6\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Student Analytics</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"text-center py-8 text-muted-foreground\">\n                      Student analytics and insights will be displayed here\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            )}\n\n            {activeView === 'analytics' && (\n              <div className=\"space-y-6\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle>School Analytics</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    {isLoadingAnalytics ? (\n                      <div className=\"flex items-center justify-center py-8\">\n                        <Loader className=\"h-8 w-8 animate-spin text-primary\" />\n                        <p className=\"ml-4 text-muted-foreground\">Loading analytics...</p>\n                      </div>\n                    ) : analyticsError ? (\n                      <div className=\"text-center py-8 text-red-600\">\n                        <AlertCircle className=\"h-8 w-8 mx-auto mb-2\" />\n                        <p>Error loading analytics: {analyticsError}</p>\n                      </div>\n                    ) : analyticsData ? (\n                      <div>\n                        <h3 className=\"text-lg font-semibold mb-4\">Order Trends</h3>\n                        <ResponsiveContainer width=\"100%\" height={300}>\n                          <BarChart data={analyticsData.orderTrends}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"month\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Bar dataKey=\"orders\" fill=\"#8884d8\" />\n                            <Bar dataKey=\"revenue\" fill=\"#82ca9d\" />\n                          </BarChart>\n                        </ResponsiveContainer>\n\n                        <h3 className=\"text-lg font-semibold mb-4 mt-8\">Meal Distribution</h3>\n                        <ResponsiveContainer width=\"100%\" height={300}>\n                          <PieChart>\n                            <Pie data={analyticsData.mealDistribution} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={100} fill=\"#8884d8\" label>\n                              {analyticsData.mealDistribution.map((entry, index) => (\n                                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                              ))}\n                            </Pie>\n                            <Tooltip />\n                          </PieChart>\n                        </ResponsiveContainer>\n\n                        <h3 className=\"text-lg font-semibold mb-4 mt-8\">Grade Distribution</h3>\n                        <ResponsiveContainer width=\"100%\" height={300}>\n                          <BarChart data={analyticsData.gradeDistribution}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"grade\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Bar dataKey=\"students\" fill=\"#8884d8\" />\n                            <Bar dataKey=\"orders\" fill=\"#82ca9d\" />\n                            <Bar dataKey=\"avgSpending\" fill=\"#ffc658\" />\n                          </BarChart>\n                        </ResponsiveContainer>\n\n                        <h3 className=\"text-lg font-semibold mb-4 mt-8\">Nutrition Compliance</h3>\n                        <ResponsiveContainer width=\"100%\" height={300}>\n                          <LineChart data={analyticsData.nutritionCompliance}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"week\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Line type=\"monotone\" dataKey=\"calories\" stroke=\"#8884d8\" />\n                            <Line type=\"monotone\" dataKey=\"protein\" stroke=\"#82ca9d\" />\n                            <Line type=\"monotone\" dataKey=\"vegetables\" stroke=\"#ffc658\" />\n                            <Line type=\"monotone\" dataKey=\"fruits\" stroke=\"#ff8042\" />\n                          </LineChart>\n                        </ResponsiveContainer>\n                      </div>\n                    ) : null}\n                  </CardContent>\n                </Card>\n              </div>\n            )}\n\n            {activeView === 'kitchen' && (\n              <div className=\"space-y-6\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Kitchen Operations</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"text-center py-8 text-muted-foreground\">\n                      Kitchen operations dashboard will be implemented here\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            )}\n          </div>\n        </SidebarInset>\n      </div>\n      \n      {/* Meal Order Drawer */}\n      {selectedMeal && (\n        <MealOrderDrawer\n          meal={selectedMeal}\n          isOpen={isMealDrawerOpen}\n          onClose={() => setIsMealDrawerOpen(false)}\n          onAddToCart={handleAddToCart}\n        />\n      )}\n    </SidebarProvider>\n  );\n}; );\n};\n};","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/enhanced-admin-dashboard.tsx",["2274"],[],"\"use client\"\n\nimport React, { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from \"@/components/ui/accordion\";\nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle, AlertDialogTrigger } from \"@/components/ui/alert-dialog\";\nimport { Breadcrumb, BreadcrumbItem, BreadcrumbLink, BreadcrumbList, BreadcrumbPage, BreadcrumbSeparator } from \"@/components/ui/breadcrumb\";\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from \"@/components/ui/collapsible\";\nimport { Toggle } from \"@/components/ui/toggle\";\nimport { \n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer,\n  LineChart, Line, PieChart, Pie, Cell, Area, AreaChart, ComposedChart,\n  RadialBarChart, RadialBar, Treemap, ScatterChart, Scatter, ReferenceLine\n} from 'recharts';\nimport { ChartContainer, ChartTooltip, ChartTooltipContent, ChartConfig } from \"@/components/ui/chart\";\nimport { Carousel, CarouselContent, CarouselItem, CarouselNext, CarouselPrevious } from \"@/components/ui/carousel\";\nimport { \n  Sidebar, SidebarContent, SidebarFooter, SidebarGroup, SidebarGroupContent, \n  SidebarGroupLabel, SidebarHeader, SidebarMenu, SidebarMenuButton, \n  SidebarMenuItem, SidebarProvider, SidebarTrigger, SidebarInset\n} from \"@/components/ui/sidebar\";\nimport { MealOrderDrawer, type MealItem } from \"@/components/ui/meal-order-drawer\";\nimport { Sheet, SheetContent, SheetDescription, SheetHeader, SheetTitle, SheetTrigger } from \"@/components/ui/sheet\";\nimport { \n  Crown, Users, DollarSign, TrendingUp, AlertCircle, CheckCircle,\n  Calendar, Settings, BarChart3, PieChart as PieChartIcon, Activity,\n  School, Clock, Target, Award, Bell, MessageSquare, FileText,\n  Download, Filter, Search, RefreshCw, Send, Shield, AlertTriangle,\n  Utensils, Heart, Coffee, Apple, ChefHat, Package, Truck,\n  Wifi, Radio, Zap, TrendingDown, Eye, EyeOff, Plus, X,\n  Home, CreditCard, Smartphone, Scan, UserCheck, MapPin,\n  BookOpen, GraduationCap, TrendingUpDown, MoreHorizontal,\n  Star, Clock3, Users2, Loader, CheckCircle2, XCircle,\n  AlertOctagon, ThermometerSun, Droplets, Wind, Sun\n} from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\ninterface AdminData {\n  id: string;\n  name: string;\n  role: string;\n  email: string;\n  avatar?: string;\n  permissions: string[];\n}\n\ninterface EnhancedAdminDashboardProps {\n  adminData: AdminData;\n  className?: string;\n}\n\n// Enhanced mock data for comprehensive admin dashboard\nconst mockRFIDAnalytics = {\n  activeStudents: 1186,\n  scanSuccess: 97.3,\n  averageQueueTime: 2.8, // minutes\n  peakHours: [\n    { hour: '8:00 AM', scans: 145, queueTime: 1.2 },\n    { hour: '10:30 AM', scans: 89, queueTime: 0.8 },\n    { hour: '12:00 PM', scans: 567, queueTime: 4.2 },\n    { hour: '1:00 PM', scans: 423, queueTime: 3.1 },\n    { hour: '3:30 PM', scans: 156, queueTime: 1.5 }\n  ],\n  deviceStatus: [\n    { id: 'RFID-001', location: 'Main Canteen', status: 'active', lastScan: '2 minutes ago', batteryLevel: 87 },\n    { id: 'RFID-002', location: 'Secondary Cafeteria', status: 'active', lastScan: '5 minutes ago', batteryLevel: 92 },\n    { id: 'RFID-003', location: 'Staff Kitchen', status: 'maintenance', lastScan: '1 hour ago', batteryLevel: 45 },\n    { id: 'RFID-004', location: 'Mobile Cart 1', status: 'active', lastScan: '1 minute ago', batteryLevel: 78 }\n  ]\n};\n\nconst mockMealRecommendations = [\n  {\n    id: 'meal-001',\n    name: 'Paneer Tikka Bowl',\n    description: 'Grilled paneer with aromatic spices, quinoa, and fresh vegetables',\n    price: 85,\n    image: '/api/placeholder/300/200',\n    category: 'Main Course',\n    preparationTime: 15,\n    rating: 4.8,\n    nutrition: { calories: 420, protein: 22, carbs: 35, fats: 18, fiber: 8 },\n    allergens: ['Dairy'],\n    dietaryTags: ['vegetarian', 'gluten-free'] as const,\n    ingredients: ['Paneer', 'Quinoa', 'Bell Peppers', 'Onions', 'Yogurt', 'Spices'],\n    popularity: 94,\n    healthScore: 89\n  },\n  {\n    id: 'meal-002', \n    name: 'Mediterranean Wrap',\n    description: 'Whole wheat wrap with hummus, grilled vegetables, and feta cheese',\n    price: 75,\n    image: '/api/placeholder/300/200',\n    category: 'Wraps & Rolls',\n    preparationTime: 10,\n    rating: 4.6,\n    nutrition: { calories: 380, protein: 16, carbs: 45, fats: 14, fiber: 12 },\n    allergens: ['Gluten', 'Dairy'],\n    dietaryTags: ['vegetarian'] as const,\n    ingredients: ['Whole Wheat Tortilla', 'Hummus', 'Zucchini', 'Eggplant', 'Feta'],\n    popularity: 87,\n    healthScore: 92\n  },\n  {\n    id: 'meal-003',\n    name: 'Masala Dosa Combo',\n    description: 'Traditional South Indian dosa with sambar and coconut chutney',\n    price: 65,\n    image: '/api/placeholder/300/200',\n    category: 'South Indian',\n    preparationTime: 20,\n    rating: 4.9,\n    nutrition: { calories: 350, protein: 12, carbs: 58, fats: 8, fiber: 6 },\n    allergens: [],\n    dietaryTags: ['vegan', 'gluten-free'] as const,\n    ingredients: ['Rice', 'Urad Dal', 'Coconut', 'Tomatoes', 'Lentils'],\n    popularity: 96,\n    healthScore: 85\n  }\n];\n\nconst mockRealTimeData = {\n  liveOrders: 23,\n  kitchenLoad: 78,\n  deliveryQueue: 12,\n  avgWaitTime: 8.5,\n  customerSatisfaction: 4.7,\n  revenueToday: 28450,\n  ordersToday: 187,\n  peakPrediction: {\n    nextPeak: '12:45 PM',\n    estimatedOrders: 85,\n    recommendedStaff: 8\n  }\n};\n\nconst mockStudentAnalytics = {\n  dietaryPreferences: [\n    { preference: 'Vegetarian', count: 456, percentage: 36.5, trend: '+2.3%' },\n    { preference: 'Non-Vegetarian', count: 523, percentage: 41.9, trend: '-1.1%' },\n    { preference: 'Vegan', count: 156, percentage: 12.5, trend: '+5.8%' },\n    { preference: 'Jain', count: 113, percentage: 9.1, trend: '+0.7%' }\n  ],\n  spendingPatterns: [\n    { grade: '6th', avgDaily: 35, avgMonthly: 750, trend: 'up' },\n    { grade: '7th', avgDaily: 42, avgMonthly: 920, trend: 'up' },\n    { grade: '8th', avgDaily: 48, avgMonthly: 1050, trend: 'stable' },\n    { grade: '9th', avgDaily: 55, avgMonthly: 1200, trend: 'up' },\n    { grade: '10th', avgDaily: 58, avgMonthly: 1280, trend: 'down' },\n    { grade: '11th', avgDaily: 62, avgMonthly: 1350, trend: 'up' },\n    { grade: '12th', avgDaily: 65, avgMonthly: 1420, trend: 'stable' }\n  ],\n  healthMetrics: {\n    bmiCompliance: 82.4,\n    nutritionGoals: 89.1,\n    allergyAlerts: 12,\n    specialDiets: 67\n  }\n};\n\nconst mockWeatherData = {\n  current: {\n    temperature: 28,\n    condition: 'Partly Cloudy',\n    humidity: 65,\n    windSpeed: 12\n  },\n  impact: {\n    expectedOrderIncrease: 15,\n    recommendedMenuAdjustments: ['Cold Beverages', 'Light Meals', 'Ice Creams'],\n    outdoorServiceViability: 'Good'\n  }\n};\n\n// Comprehensive mock data for admin dashboard\nconst mockSchoolAnalytics = {\n  overview: {\n    totalStudents: 1248,\n    activeOrders: 156,\n    totalRevenue: 45780,\n    monthlyGrowth: 12.5,\n    nutritionCompliance: 89.4,\n    customerSatisfaction: 4.7,\n    operationalEfficiency: 92.1,\n    wasteReduction: 15.3\n  },\n  \n  orderTrends: [\n    { month: 'Aug', orders: 3420, revenue: 38950, satisfaction: 4.5 },\n    { month: 'Sep', orders: 3680, revenue: 42100, satisfaction: 4.6 },\n    { month: 'Oct', orders: 3920, revenue: 44200, satisfaction: 4.7 },\n    { month: 'Nov', orders: 4150, revenue: 47800, satisfaction: 4.8 },\n    { month: 'Dec', orders: 3890, revenue: 43600, satisfaction: 4.6 },\n    { month: 'Jan', orders: 2450, revenue: 28900, satisfaction: 4.7 }\n  ],\n\n  mealDistribution: [\n    { name: 'Lunch', value: 45, count: 2890, revenue: 28900 },\n    { name: 'Breakfast', value: 25, count: 1608, revenue: 12864 },\n    { name: 'Snacks', value: 20, count: 1286, revenue: 6430 },\n    { name: 'Dinner', value: 10, count: 643, revenue: 4501 }\n  ],\n\n  gradeDistribution: [\n    { grade: '1st-2nd', students: 180, orders: 1260, avgSpending: 850 },\n    { grade: '3rd-4th', students: 200, orders: 1580, avgSpending: 950 },\n    { grade: '5th-6th', students: 220, orders: 1890, avgSpending: 1050 },\n    { grade: '7th-8th', students: 240, orders: 2180, avgSpending: 1150 },\n    { grade: '9th-10th', students: 208, orders: 2090, avgSpending: 1250 },\n    { grade: '11th-12th', students: 200, orders: 2200, avgSpending: 1350 }\n  ],\n\n  nutritionCompliance: [\n    { week: 'W1', calories: 92, protein: 88, vegetables: 85, fruits: 79 },\n    { week: 'W2', calories: 89, protein: 91, vegetables: 87, fruits: 82 },\n    { week: 'W3', calories: 94, protein: 86, vegetables: 89, fruits: 85 },\n    { week: 'W4', calories: 87, protein: 93, vegetables: 91, fruits: 88 }\n  ],\n\n  realTimeMetrics: [\n    { time: '09:00', orders: 12, revenue: 850, satisfaction: 4.8 },\n    { time: '10:00', orders: 23, revenue: 1650, satisfaction: 4.7 },\n    { time: '11:00', orders: 45, revenue: 3200, satisfaction: 4.6 },\n    { time: '12:00', orders: 89, revenue: 6400, satisfaction: 4.8 },\n    { time: '13:00', orders: 67, revenue: 4800, satisfaction: 4.9 },\n    { time: '14:00', orders: 34, revenue: 2400, satisfaction: 4.7 },\n    { time: '15:00', orders: 28, revenue: 1950, satisfaction: 4.8 }\n  ]\n};\n\nconst mockActiveOrders = [\n  {\n    id: 'ORD-001',\n    studentName: 'Emma Wilson',\n    grade: '8th',\n    section: 'A',\n    mealType: 'lunch',\n    items: ['Grilled Chicken', 'Rice Bowl', 'Salad'],\n    amount: 65,\n    status: 'preparing',\n    orderTime: '12:15 PM',\n    estimatedReady: '12:45 PM',\n    priority: 'high',\n    allergies: ['Nuts'],\n    specialRequests: 'Extra vegetables'\n  },\n  {\n    id: 'ORD-002',\n    studentName: 'James Martinez',\n    grade: '5th',\n    section: 'B',\n    mealType: 'snack',\n    items: ['Fruit Bowl', 'Juice'],\n    amount: 25,\n    status: 'ready',\n    orderTime: '11:30 AM',\n    estimatedReady: '11:45 AM',\n    priority: 'medium',\n    allergies: [],\n    specialRequests: null\n  },\n  {\n    id: 'ORD-003',\n    studentName: 'Sophia Chen',\n    grade: '10th',\n    section: 'C',\n    mealType: 'lunch',\n    items: ['Vegetarian Pasta', 'Garlic Bread', 'Smoothie'],\n    amount: 55,\n    status: 'pending',\n    orderTime: '12:20 PM',\n    estimatedReady: '12:50 PM',\n    priority: 'low',\n    allergies: ['Dairy'],\n    specialRequests: 'Vegan alternative'\n  }\n];\n\nconst mockFinancialSummary = {\n  daily: { revenue: 2850, orders: 89, avgOrderValue: 32 },\n  weekly: { revenue: 18950, orders: 642, avgOrderValue: 29.5 },\n  monthly: { revenue: 76800, orders: 2580, avgOrderValue: 29.8 },\n  paymentMethods: [\n    { method: 'Digital Wallet', percentage: 65, amount: 49920 },\n    { method: 'UPI', percentage: 25, amount: 19200 },\n    { method: 'Cash', percentage: 10, amount: 7680 }\n  ]\n};\n\nconst mockKitchenOperations = {\n  activeStaff: 12,\n  totalStaff: 15,\n  currentCapacity: 78,\n  maxCapacity: 200,\n  avgPreparationTime: 18, // minutes\n  qualityScore: 4.6,\n  efficiency: 89,\n  inventory: [\n    { item: 'Rice', stock: 85, threshold: 20, status: 'good' },\n    { item: 'Chicken', stock: 15, threshold: 25, status: 'low' },\n    { item: 'Vegetables', stock: 92, threshold: 30, status: 'good' },\n    { item: 'Milk', stock: 8, threshold: 15, status: 'critical' }\n  ]\n};\n\nconst COLORS = ['#3b82f6', '#10b981', '#f59e0b', '#ef4444', '#8b5cf6', '#06b6d4'];\n\nexport const EnhancedAdminDashboard: React.FC<EnhancedAdminDashboardProps> = ({\n  adminData,\n  className\n}) => {\n  const [selectedPeriod, setSelectedPeriod] = useState<'daily' | 'weekly' | 'monthly'>('monthly');\n  const [selectedOrders, setSelectedOrders] = useState<string[]>([]);\n  const [broadcastMessage, setBroadcastMessage] = useState('');\n  const [emergencyMode, setEmergencyMode] = useState(false);\n  const [selectedMeal, setSelectedMeal] = useState<MealItem | null>(null);\n  const [isMealDrawerOpen, setIsMealDrawerOpen] = useState(false);\n  const [realTimeEnabled, setRealTimeEnabled] = useState(true);\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n  const [activeView, setActiveView] = useState('overview');\n  \n  // Real-time data refresh\n  const [lastRefresh, setLastRefresh] = useState(new Date());\n  React.useEffect(() => {\n    if (realTimeEnabled) {\n      const interval = setInterval(() => {\n        setLastRefresh(new Date());\n      }, 30000); // Refresh every 30 seconds\n      return () => clearInterval(interval);\n    }\n  }, [realTimeEnabled]);\n\n  const handleOrderSelect = (orderId: string) => {\n    setSelectedOrders(prev => \n      prev.includes(orderId) \n        ? prev.filter(id => id !== orderId)\n        : [...prev, orderId]\n    );\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'ready': return 'bg-green-500';\n      case 'preparing': return 'bg-yellow-500';\n      case 'pending': return 'bg-blue-500';\n      default: return 'bg-gray-400';\n    }\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case 'high': return 'text-red-600';\n      case 'medium': return 'text-yellow-600';\n      case 'low': return 'text-green-600';\n      default: return 'text-gray-600';\n    }\n  };\n\n  const handleMealSelect = (meal: typeof mockMealRecommendations[0]) => {\n    const mealItem: MealItem = {\n      ...meal,\n      customizations: {\n        portion: { small: meal.price - 10, regular: meal.price, large: meal.price + 15 },\n        addOns: [\n          { id: 'extra-portion', name: 'Extra Portion', price: 25 },\n          { id: 'extra-veggies', name: 'Extra Vegetables', price: 15 },\n          { id: 'extra-protein', name: 'Extra Protein', price: 35 }\n        ],\n        modifications: ['Less Spicy', 'Extra Spicy', 'No Onions', 'Extra Sauce']\n      }\n    };\n    setSelectedMeal(mealItem);\n    setIsMealDrawerOpen(true);\n  };\n\n  const handleAddToCart = (meal: MealItem, customizations: any) => {\n    console.log('Added to cart:', meal.name, customizations);\n    // Implementation for adding to cart\n  };\n\n  const getHealthScoreColor = (score: number) => {\n    if (score >= 90) return 'text-green-600 bg-green-50';\n    if (score >= 75) return 'text-yellow-600 bg-yellow-50';\n    return 'text-red-600 bg-red-50';\n  };\n\n  const chartConfig: ChartConfig = {\n    orders: {\n      label: \"Orders\",\n      color: \"hsl(var(--chart-1))\",\n    },\n    revenue: {\n      label: \"Revenue\",\n      color: \"hsl(var(--chart-2))\",\n    },\n    satisfaction: {\n      label: \"Satisfaction\",\n      color: \"hsl(var(--chart-3))\",\n    }\n  };\n\n  return (\n    <SidebarProvider>\n      <div className={cn(\"min-h-screen flex w-full\", className)}>\n        {/* Enhanced Sidebar */}\n        <Sidebar className=\"border-r\">\n          <SidebarHeader className=\"border-b px-6 py-4\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"h-8 w-8 rounded-lg bg-primary flex items-center justify-center\">\n                <School className=\"h-5 w-5 text-primary-foreground\" />\n              </div>\n              <div className=\"flex flex-col\">\n                <span className=\"font-semibold text-sm\">HASIVU Admin</span>\n                <span className=\"text-xs text-muted-foreground\">v2.1.0</span>\n              </div>\n            </div>\n          </SidebarHeader>\n          \n          <SidebarContent className=\"px-4 py-2\">\n            {/* Quick Stats */}\n            <SidebarGroup>\n              <SidebarGroupLabel>Quick Overview</SidebarGroupLabel>\n              <SidebarGroupContent>\n                <div className=\"grid grid-cols-2 gap-2 mb-4\">\n                  <div className=\"p-3 rounded-lg bg-primary/10\">\n                    <div className=\"text-lg font-bold text-primary\">{mockRealTimeData.liveOrders}</div>\n                    <div className=\"text-xs text-muted-foreground\">Live Orders</div>\n                  </div>\n                  <div className=\"p-3 rounded-lg bg-green-50\">\n                    <div className=\"text-lg font-bold text-green-600\">₹{mockRealTimeData.revenueToday.toLocaleString()}</div>\n                    <div className=\"text-xs text-muted-foreground\">Today's Revenue</div>\n                  </div>\n                </div>\n              </SidebarGroupContent>\n            </SidebarGroup>\n\n            {/* Navigation Menu */}\n            <SidebarGroup>\n              <SidebarGroupLabel>Navigation</SidebarGroupLabel>\n              <SidebarGroupContent>\n                <SidebarMenu>\n                  <SidebarMenuItem>\n                    <SidebarMenuButton \n                      onClick={() => setActiveView('overview')}\n                      isActive={activeView === 'overview'}\n                    >\n                      <Home className=\"h-4 w-4\" />\n                      <span>Overview</span>\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                  <SidebarMenuItem>\n                    <SidebarMenuButton \n                      onClick={() => setActiveView('analytics')}\n                      isActive={activeView === 'analytics'}\n                    >\n                      <BarChart3 className=\"h-4 w-4\" />\n                      <span>Analytics</span>\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                  <SidebarMenuItem>\n                    <SidebarMenuButton \n                      onClick={() => setActiveView('orders')}\n                      isActive={activeView === 'orders'}\n                    >\n                      <Utensils className=\"h-4 w-4\" />\n                      <span>Orders</span>\n                      <Badge className=\"ml-auto\" variant=\"secondary\">\n                        {mockActiveOrders.length}\n                      </Badge>\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                  <SidebarMenuItem>\n                    <SidebarMenuButton \n                      onClick={() => setActiveView('rfid')}\n                      isActive={activeView === 'rfid'}\n                    >\n                      <Radio className=\"h-4 w-4\" />\n                      <span>RFID System</span>\n                      <Badge className=\"ml-auto\" variant=\"outline\">\n                        {mockRFIDAnalytics.deviceStatus.filter(d => d.status === 'active').length}\n                      </Badge>\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                  <SidebarMenuItem>\n                    <SidebarMenuButton \n                      onClick={() => setActiveView('meals')}\n                      isActive={activeView === 'meals'}\n                    >\n                      <ChefHat className=\"h-4 w-4\" />\n                      <span>Meal Management</span>\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                  <SidebarMenuItem>\n                    <SidebarMenuButton \n                      onClick={() => setActiveView('students')}\n                      isActive={activeView === 'students'}\n                    >\n                      <Users2 className=\"h-4 w-4\" />\n                      <span>Student Analytics</span>\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                  <SidebarMenuItem>\n                    <SidebarMenuButton \n                      onClick={() => setActiveView('kitchen')}\n                      isActive={activeView === 'kitchen'}\n                    >\n                      <Package className=\"h-4 w-4\" />\n                      <span>Kitchen Operations</span>\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                </SidebarMenu>\n              </SidebarGroupContent>\n            </SidebarGroup>\n\n            {/* Weather Impact */}\n            <SidebarGroup>\n              <SidebarGroupLabel>Today's Weather Impact</SidebarGroupLabel>\n              <SidebarGroupContent>\n                <div className=\"p-3 rounded-lg bg-blue-50 border\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <div className=\"flex items-center space-x-2\">\n                      <Sun className=\"h-4 w-4 text-blue-600\" />\n                      <span className=\"text-sm font-medium\">{mockWeatherData.current.temperature}°C</span>\n                    </div>\n                    <span className=\"text-xs text-muted-foreground\">{mockWeatherData.current.condition}</span>\n                  </div>\n                  <div className=\"text-xs text-blue-600\">\n                    Expected +{mockWeatherData.impact.expectedOrderIncrease}% orders\n                  </div>\n                </div>\n              </SidebarGroupContent>\n            </SidebarGroup>\n          </SidebarContent>\n          \n          <SidebarFooter className=\"border-t p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"h-2 w-2 rounded-full bg-green-500\"></div>\n                <span className=\"text-xs text-muted-foreground\">System Online</span>\n              </div>\n              <div className=\"flex items-center space-x-1\">\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  className=\"h-6 w-6\"\n                  onClick={() => setRealTimeEnabled(!realTimeEnabled)}\n                >\n                  {realTimeEnabled ? \n                    <Eye className=\"h-3 w-3 text-green-600\" /> : \n                    <EyeOff className=\"h-3 w-3 text-gray-400\" />\n                  }\n                </Button>\n                <SidebarTrigger />\n              </div>\n            </div>\n          </SidebarFooter>\n        </Sidebar>\n\n        {/* Main Content */}\n        <SidebarInset className=\"flex-1\">\n          <div className=\"p-6 space-y-6\">\n            {/* Header with Real-time Status */}\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <Breadcrumb>\n                  <BreadcrumbList>\n                    <BreadcrumbItem>\n                      <BreadcrumbLink href=\"/dashboard\">Dashboard</BreadcrumbLink>\n                    </BreadcrumbItem>\n                    <BreadcrumbSeparator />\n                    <BreadcrumbItem>\n                      <BreadcrumbPage>Enhanced Admin Panel</BreadcrumbPage>\n                    </BreadcrumbItem>\n                  </BreadcrumbList>\n                </Breadcrumb>\n                <h1 className=\"text-2xl font-bold mt-2\">Welcome back, {adminData.name}</h1>\n              </div>\n              <div className=\"flex items-center space-x-3\">\n                {realTimeEnabled && (\n                  <div className=\"flex items-center space-x-2 text-sm text-muted-foreground\">\n                    <div className=\"h-2 w-2 rounded-full bg-green-500 animate-pulse\"></div>\n                    <span>Live • Updated {lastRefresh.toLocaleTimeString()}</span>\n                  </div>\n                )}\n                <Button size=\"sm\" variant=\"outline\">\n                  <Download className=\"h-4 w-4 mr-2\" />\n                  Export Report\n                </Button>\n              </div>\n            </div>\n\n      {/* Admin Overview Header */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card className=\"bg-gradient-to-r from-blue-500 to-blue-600 text-white\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-blue-100 text-sm\">Total Students</p>\n                <p className=\"text-2xl font-bold\">{mockSchoolAnalytics.overview.totalStudents}</p>\n                <p className=\"text-xs text-blue-200 mt-1\">+{mockSchoolAnalytics.overview.monthlyGrowth}% this month</p>\n              </div>\n              <School className=\"h-8 w-8 text-blue-200\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-gradient-to-r from-green-500 to-green-600 text-white\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-green-100 text-sm\">Monthly Revenue</p>\n                <p className=\"text-2xl font-bold\">₹{mockSchoolAnalytics.overview.totalRevenue.toLocaleString()}</p>\n                <p className=\"text-xs text-green-200 mt-1\">+{mockSchoolAnalytics.overview.monthlyGrowth}% growth</p>\n              </div>\n              <DollarSign className=\"h-8 w-8 text-green-200\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-gradient-to-r from-purple-500 to-purple-600 text-white\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-purple-100 text-sm\">Active Orders</p>\n                <p className=\"text-2xl font-bold\">{mockSchoolAnalytics.overview.activeOrders}</p>\n                <p className=\"text-xs text-purple-200 mt-1\">Currently processing</p>\n              </div>\n              <Utensils className=\"h-8 w-8 text-purple-200\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-gradient-to-r from-orange-500 to-orange-600 text-white\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-orange-100 text-sm\">Satisfaction</p>\n                <p className=\"text-2xl font-bold\">{mockSchoolAnalytics.overview.customerSatisfaction}/5</p>\n                <p className=\"text-xs text-orange-200 mt-1\">Customer rating</p>\n              </div>\n              <Award className=\"h-8 w-8 text-orange-200\" />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n            {/* Emergency Broadcast Section */}\n            {emergencyMode && (\n              <Alert className=\"border-red-200 bg-red-50\">\n                <AlertTriangle className=\"h-4 w-4 text-red-600\" />\n                <AlertTitle className=\"text-red-800\">Emergency Mode Active</AlertTitle>\n                <AlertDescription className=\"text-red-700\">\n                  Emergency protocols are enabled. All communications will be marked as urgent.\n                </AlertDescription>\n              </Alert>\n            )}\n\n            {/* Conditional content based on active view */}\n            {activeView === 'overview' && (\n              <div className=\"space-y-6\">\n                {/* Real-time Overview Cards */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                  <Card className=\"bg-gradient-to-r from-blue-500 to-blue-600 text-white\">\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <p className=\"text-blue-100 text-sm\">Live Orders</p>\n                          <p className=\"text-2xl font-bold\">{mockRealTimeData.liveOrders}</p>\n                          <p className=\"text-xs text-blue-200 mt-1\">Avg wait: {mockRealTimeData.avgWaitTime}min</p>\n                        </div>\n                        <div className=\"relative\">\n                          <Utensils className=\"h-8 w-8 text-blue-200\" />\n                          {realTimeEnabled && (\n                            <div className=\"absolute -top-1 -right-1 h-3 w-3 bg-green-400 rounded-full animate-pulse\"></div>\n                          )}\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  <Card className=\"bg-gradient-to-r from-green-500 to-green-600 text-white\">\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <p className=\"text-green-100 text-sm\">Today's Revenue</p>\n                          <p className=\"text-2xl font-bold\">₹{mockRealTimeData.revenueToday.toLocaleString()}</p>\n                          <p className=\"text-xs text-green-200 mt-1\">{mockRealTimeData.ordersToday} orders</p>\n                        </div>\n                        <DollarSign className=\"h-8 w-8 text-green-200\" />\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  <Card className=\"bg-gradient-to-r from-purple-500 to-purple-600 text-white\">\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <p className=\"text-purple-100 text-sm\">Kitchen Load</p>\n                          <p className=\"text-2xl font-bold\">{mockRealTimeData.kitchenLoad}%</p>\n                          <p className=\"text-xs text-purple-200 mt-1\">{mockRealTimeData.deliveryQueue} in queue</p>\n                        </div>\n                        <ChefHat className=\"h-8 w-8 text-purple-200\" />\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  <Card className=\"bg-gradient-to-r from-orange-500 to-orange-600 text-white\">\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <p className=\"text-orange-100 text-sm\">Satisfaction</p>\n                          <p className=\"text-2xl font-bold\">{mockRealTimeData.customerSatisfaction}/5</p>\n                          <p className=\"text-xs text-orange-200 mt-1\">Customer rating</p>\n                        </div>\n                        <Award className=\"h-8 w-8 text-orange-200\" />\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n\n                {/* Real-time Chart */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center\">\n                        <Activity className=\"h-5 w-5 mr-2\" />\n                        Real-time Performance\n                      </div>\n                      {realTimeEnabled && (\n                        <Badge variant=\"secondary\" className=\"animate-pulse\">\n                          <Zap className=\"h-3 w-3 mr-1\" />Live\n                        </Badge>\n                      )}\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <ChartContainer config={chartConfig} className=\"h-[300px]\">\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <LineChart data={mockSchoolAnalytics.realTimeMetrics}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"time\" />\n                          <YAxis yAxisId=\"left\" />\n                          <YAxis yAxisId=\"right\" orientation=\"right\" />\n                          <ChartTooltip content={<ChartTooltipContent />} />\n                          <Line \n                            yAxisId=\"left\" \n                            type=\"monotone\" \n                            dataKey=\"orders\" \n                            stroke=\"var(--color-orders)\" \n                            strokeWidth={3}\n                            dot={{ fill: \"var(--color-orders)\", strokeWidth: 2 }}\n                          />\n                          <Line \n                            yAxisId=\"right\" \n                            type=\"monotone\" \n                            dataKey=\"satisfaction\" \n                            stroke=\"var(--color-satisfaction)\" \n                            strokeWidth={2}\n                            strokeDasharray=\"5 5\"\n                          />\n                        </LineChart>\n                      </ResponsiveContainer>\n                    </ChartContainer>\n                  </CardContent>\n                </Card>\n              </div>\n            )}\n\n            {/* Analytics View */}\n            {activeView === 'analytics' && (\n              <Tabs defaultValue=\"analytics\" className=\"space-y-6\">\n                <TabsList className=\"grid w-full grid-cols-4\">\n                  <TabsTrigger value=\"analytics\">School Analytics</TabsTrigger>\n                  <TabsTrigger value=\"nutrition\">Nutrition Reports</TabsTrigger>\n                  <TabsTrigger value=\"financial\">Financial Summary</TabsTrigger>\n                  <TabsTrigger value=\"broadcast\">Emergency Broadcast</TabsTrigger>\n                </TabsList>\n\n                {/* Analytics Tab */}\n                <TabsContent value=\"analytics\" className=\"space-y-6\">\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"text-lg font-semibold\">School-wide Analytics</h3>\n            <div className=\"flex items-center space-x-2\">\n              <Select value={selectedPeriod} onValueChange={(value) => setSelectedPeriod(value as any)}>\n                <SelectTrigger className=\"w-32\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"daily\">Daily</SelectItem>\n                  <SelectItem value=\"weekly\">Weekly</SelectItem>\n                  <SelectItem value=\"monthly\">Monthly</SelectItem>\n                </SelectContent>\n              </Select>\n              <Button size=\"sm\" variant=\"outline\">\n                <RefreshCw className=\"h-4 w-4 mr-1\" />\n                Refresh\n              </Button>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Order Trends */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <BarChart3 className=\"h-5 w-5 mr-2\" />\n                  Order & Revenue Trends\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                  <ComposedChart data={mockSchoolAnalytics.orderTrends}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"month\" />\n                    <YAxis yAxisId=\"left\" />\n                    <YAxis yAxisId=\"right\" orientation=\"right\" />\n                    <Tooltip />\n                    <Bar yAxisId=\"left\" dataKey=\"orders\" fill=\"#3b82f6\" name=\"Orders\" />\n                    <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"revenue\" stroke=\"#10b981\" strokeWidth={2} name=\"Revenue (₹)\" />\n                  </ComposedChart>\n                </ResponsiveContainer>\n              </CardContent>\n            </Card>\n\n            {/* Meal Distribution */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <PieChartIcon className=\"h-5 w-5 mr-2\" />\n                  Meal Type Distribution\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                  <PieChart>\n                    <Pie\n                      data={mockSchoolAnalytics.mealDistribution}\n                      cx=\"50%\"\n                      cy=\"50%\"\n                      outerRadius={100}\n                      fill=\"#8884d8\"\n                      dataKey=\"value\"\n                      label={({ name, value }) => `${name} ${value}%`}\n                    >\n                      {mockSchoolAnalytics.mealDistribution.map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                      ))}\n                    </Pie>\n                    <Tooltip formatter={(value, name, props) => [\n                      `${value}% (${props.payload.count} orders)`,\n                      name\n                    ]} />\n                  </PieChart>\n                </ResponsiveContainer>\n              </CardContent>\n            </Card>\n\n            {/* Grade-wise Analysis */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <Users className=\"h-5 w-5 mr-2\" />\n                  Grade-wise Performance\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                  <BarChart data={mockSchoolAnalytics.gradeDistribution}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"grade\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Bar dataKey=\"students\" fill=\"#3b82f6\" name=\"Students\" />\n                    <Bar dataKey=\"orders\" fill=\"#10b981\" name=\"Orders\" />\n                  </BarChart>\n                </ResponsiveContainer>\n              </CardContent>\n            </Card>\n\n            {/* Key Metrics */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <Activity className=\"h-5 w-5 mr-2\" />\n                  Key Performance Indicators\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm font-medium\">Nutrition Compliance</span>\n                    <span className=\"text-sm\">{mockSchoolAnalytics.overview.nutritionCompliance}%</span>\n                  </div>\n                  <Progress value={mockSchoolAnalytics.overview.nutritionCompliance} className=\"h-2\" />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm font-medium\">Operational Efficiency</span>\n                    <span className=\"text-sm\">{mockSchoolAnalytics.overview.operationalEfficiency}%</span>\n                  </div>\n                  <Progress value={mockSchoolAnalytics.overview.operationalEfficiency} className=\"h-2\" />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm font-medium\">Customer Satisfaction</span>\n                    <span className=\"text-sm\">{(mockSchoolAnalytics.overview.customerSatisfaction / 5 * 100).toFixed(1)}%</span>\n                  </div>\n                  <Progress value={mockSchoolAnalytics.overview.customerSatisfaction / 5 * 100} className=\"h-2\" />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm font-medium\">Waste Reduction</span>\n                    <span className=\"text-sm\">{mockSchoolAnalytics.overview.wasteReduction}%</span>\n                  </div>\n                  <Progress value={mockSchoolAnalytics.overview.wasteReduction} className=\"h-2\" />\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n                {/* Nutrition Reports Tab */}\n                <TabsContent value=\"nutrition\" className=\"space-y-6\">\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"text-lg font-semibold\">Active Order Management</h3>\n            <div className=\"flex items-center space-x-2\">\n              <Button size=\"sm\" variant=\"outline\">\n                <Filter className=\"h-4 w-4 mr-1\" />\n                Filter\n              </Button>\n              <Button size=\"sm\" variant=\"outline\" disabled={selectedOrders.length === 0}>\n                Bulk Actions ({selectedOrders.length})\n              </Button>\n            </div>\n          </div>\n\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <Utensils className=\"h-5 w-5 mr-2\" />\n                  Current Orders Queue\n                </div>\n                <Badge variant=\"secondary\">{mockActiveOrders.length} active orders</Badge>\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead className=\"w-12\">\n                      <Checkbox \n                        checked={selectedOrders.length === mockActiveOrders.length}\n                        onCheckedChange={(checked) => {\n                          if (checked) {\n                            setSelectedOrders(mockActiveOrders.map(order => order.id));\n                          } else {\n                            setSelectedOrders([]);\n                          }\n                        }}\n                      />\n                    </TableHead>\n                    <TableHead>Order ID</TableHead>\n                    <TableHead>Student</TableHead>\n                    <TableHead>Grade</TableHead>\n                    <TableHead>Meal Type</TableHead>\n                    <TableHead>Items</TableHead>\n                    <TableHead>Amount</TableHead>\n                    <TableHead>Status</TableHead>\n                    <TableHead>Priority</TableHead>\n                    <TableHead>Special Notes</TableHead>\n                    <TableHead>Actions</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {mockActiveOrders.map((order) => (\n                    <TableRow key={order.id}>\n                      <TableCell>\n                        <Checkbox \n                          checked={selectedOrders.includes(order.id)}\n                          onCheckedChange={() => handleOrderSelect(order.id)}\n                        />\n                      </TableCell>\n                      <TableCell className=\"font-medium\">{order.id}</TableCell>\n                      <TableCell>{order.studentName}</TableCell>\n                      <TableCell>{order.grade}{order.section}</TableCell>\n                      <TableCell>\n                        <Badge variant=\"outline\" className=\"capitalize\">\n                          {order.mealType}\n                        </Badge>\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"max-w-32 truncate\">\n                          {order.items.join(', ')}\n                        </div>\n                      </TableCell>\n                      <TableCell>₹{order.amount}</TableCell>\n                      <TableCell>\n                        <Badge \n                          variant={order.status === 'ready' ? 'default' : 'secondary'}\n                          className=\"capitalize\"\n                        >\n                          {order.status}\n                        </Badge>\n                      </TableCell>\n                      <TableCell>\n                        <span className={cn(\"capitalize font-medium\", getPriorityColor(order.priority))}>\n                          {order.priority}\n                        </span>\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"max-w-32\">\n                          {order.allergies.length > 0 && (\n                            <Badge variant=\"destructive\" className=\"text-xs mb-1 mr-1\">\n                              Allergies: {order.allergies.join(', ')}\n                            </Badge>\n                          )}\n                          {order.specialRequests && (\n                            <p className=\"text-xs text-gray-600 truncate\">\n                              {order.specialRequests}\n                            </p>\n                          )}\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"flex space-x-1\">\n                          <Button size=\"sm\" variant=\"outline\">\n                            View\n                          </Button>\n                          <AlertDialog>\n                            <AlertDialogTrigger asChild>\n                              <Button size=\"sm\" variant=\"default\">\n                                Update\n                              </Button>\n                            </AlertDialogTrigger>\n                            <AlertDialogContent>\n                              <AlertDialogHeader>\n                                <AlertDialogTitle>Update Order Status</AlertDialogTitle>\n                                <AlertDialogDescription>\n                                  Are you sure you want to update the status of order {order.id} for {order.studentName}?\n                                </AlertDialogDescription>\n                              </AlertDialogHeader>\n                              <AlertDialogFooter>\n                                <AlertDialogCancel>Cancel</AlertDialogCancel>\n                                <AlertDialogAction>Update Status</AlertDialogAction>\n                              </AlertDialogFooter>\n                            </AlertDialogContent>\n                          </AlertDialog>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n                {/* Financial Summary Tab */}\n                <TabsContent value=\"financial\" className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <Heart className=\"h-5 w-5 mr-2\" />\n                  Weekly Nutrition Compliance\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                  <AreaChart data={mockSchoolAnalytics.nutritionCompliance}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"week\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Area type=\"monotone\" dataKey=\"calories\" stackId=\"1\" stroke=\"#3b82f6\" fill=\"#3b82f6\" fillOpacity={0.6} />\n                    <Area type=\"monotone\" dataKey=\"protein\" stackId=\"1\" stroke=\"#10b981\" fill=\"#10b981\" fillOpacity={0.6} />\n                    <Area type=\"monotone\" dataKey=\"vegetables\" stackId=\"1\" stroke=\"#f59e0b\" fill=\"#f59e0b\" fillOpacity={0.6} />\n                    <Area type=\"monotone\" dataKey=\"fruits\" stackId=\"1\" stroke=\"#ef4444\" fill=\"#ef4444\" fillOpacity={0.6} />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <Target className=\"h-5 w-5 mr-2\" />\n                  Nutrition Compliance Summary\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\n                    <Apple className=\"h-6 w-6 mx-auto mb-1 text-blue-600\" />\n                    <p className=\"text-2xl font-bold\">89.4%</p>\n                    <p className=\"text-sm text-gray-600\">Overall Compliance</p>\n                  </div>\n                  <div className=\"text-center p-3 bg-green-50 rounded-lg\">\n                    <Heart className=\"h-6 w-6 mx-auto mb-1 text-green-600\" />\n                    <p className=\"text-2xl font-bold\">94.2%</p>\n                    <p className=\"text-sm text-gray-600\">Calorie Targets</p>\n                  </div>\n                </div>\n\n                <div className=\"space-y-3\">\n                  <Alert>\n                    <CheckCircle className=\"h-4 w-4\" />\n                    <AlertTitle>Protein Intake</AlertTitle>\n                    <AlertDescription>\n                      92% of students are meeting daily protein requirements.\n                    </AlertDescription>\n                  </Alert>\n                  <Alert>\n                    <AlertCircle className=\"h-4 w-4\" />\n                    <AlertTitle>Vegetable Consumption</AlertTitle>\n                    <AlertDescription>\n                      Need to improve vegetable intake - currently at 78% compliance.\n                    </AlertDescription>\n                  </Alert>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Detailed Nutrition Reports</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <Accordion type=\"multiple\" className=\"w-full\">\n                <AccordionItem value=\"reports\">\n                  <AccordionTrigger>\n                    <div className=\"flex items-center\">\n                      <Download className=\"h-4 w-4 mr-2\" />\n                      Download Reports\n                    </div>\n                  </AccordionTrigger>\n                  <AccordionContent>\n                    <div className=\"flex space-x-4 mt-2\">\n                      <Button variant=\"outline\">\n                        <Download className=\"h-4 w-4 mr-2\" />\n                        Weekly Report\n                      </Button>\n                      <Button variant=\"outline\">\n                        <Download className=\"h-4 w-4 mr-2\" />\n                        Monthly Summary\n                      </Button>\n                      <Button variant=\"outline\">\n                        <Download className=\"h-4 w-4 mr-2\" />\n                        Grade-wise Analysis\n                      </Button>\n                    </div>\n                  </AccordionContent>\n                </AccordionItem>\n                \n                <AccordionItem value=\"settings\">\n                  <AccordionTrigger>\n                    <div className=\"flex items-center\">\n                      <Settings className=\"h-4 w-4 mr-2\" />\n                      Nutrition Targets & Settings\n                    </div>\n                  </AccordionTrigger>\n                  <AccordionContent>\n                    <div className=\"space-y-4 mt-2\">\n                      <div className=\"grid grid-cols-2 gap-4\">\n                        <div className=\"space-y-2\">\n                          <label className=\"text-sm font-medium\">Daily Calorie Target</label>\n                          <div className=\"flex items-center space-x-2\">\n                            <span className=\"text-2xl font-bold\">2200</span>\n                            <span className=\"text-sm text-gray-600\">kcal</span>\n                            <Toggle size=\"sm\" variant=\"outline\">Edit</Toggle>\n                          </div>\n                        </div>\n                        <div className=\"space-y-2\">\n                          <label className=\"text-sm font-medium\">Protein Requirement</label>\n                          <div className=\"flex items-center space-x-2\">\n                            <span className=\"text-2xl font-bold\">45</span>\n                            <span className=\"text-sm text-gray-600\">grams</span>\n                            <Toggle size=\"sm\" variant=\"outline\">Edit</Toggle>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </AccordionContent>\n                </AccordionItem>\n              </Accordion>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n                {/* Emergency Broadcast Tab */}\n                <TabsContent value=\"broadcast\" className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <ChefHat className=\"h-5 w-5 mr-2\" />\n                  Kitchen Status Overview\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\n                    <Users className=\"h-6 w-6 mx-auto mb-1 text-blue-600\" />\n                    <p className=\"text-2xl font-bold\">{mockKitchenOperations.activeStaff}/{mockKitchenOperations.totalStaff}</p>\n                    <p className=\"text-sm text-gray-600\">Active Staff</p>\n                  </div>\n                  <div className=\"text-center p-3 bg-green-50 rounded-lg\">\n                    <Clock className=\"h-6 w-6 mx-auto mb-1 text-green-600\" />\n                    <p className=\"text-2xl font-bold\">{mockKitchenOperations.avgPreparationTime}m</p>\n                    <p className=\"text-sm text-gray-600\">Avg Prep Time</p>\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm font-medium\">Current Capacity</span>\n                    <span className=\"text-sm\">{mockKitchenOperations.currentCapacity}/{mockKitchenOperations.maxCapacity}</span>\n                  </div>\n                  <Progress value={(mockKitchenOperations.currentCapacity / mockKitchenOperations.maxCapacity) * 100} className=\"h-2\" />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm font-medium\">Quality Score</span>\n                    <span className=\"text-sm\">{mockKitchenOperations.qualityScore}/5</span>\n                  </div>\n                  <Progress value={(mockKitchenOperations.qualityScore / 5) * 100} className=\"h-2\" />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm font-medium\">Efficiency</span>\n                    <span className=\"text-sm\">{mockKitchenOperations.efficiency}%</span>\n                  </div>\n                  <Progress value={mockKitchenOperations.efficiency} className=\"h-2\" />\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <Package className=\"h-5 w-5 mr-2\" />\n                  Inventory Alerts\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {mockKitchenOperations.inventory.map((item) => (\n                    <Alert \n                      key={item.item}\n                      className={\n                        item.status === 'critical' \n                          ? 'border-red-200 bg-red-50' \n                          : item.status === 'low' \n                          ? 'border-yellow-200 bg-yellow-50'\n                          : 'border-green-200 bg-green-50'\n                      }\n                    >\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <AlertTitle className={\n                            item.status === 'critical' \n                              ? 'text-red-800' \n                              : item.status === 'low' \n                              ? 'text-yellow-800'\n                              : 'text-green-800'\n                          }>\n                            {item.item}\n                          </AlertTitle>\n                          <AlertDescription className={\n                            item.status === 'critical' \n                              ? 'text-red-700' \n                              : item.status === 'low' \n                              ? 'text-yellow-700'\n                              : 'text-green-700'\n                          }>\n                            Stock: {item.stock}% (Threshold: {item.threshold}%)\n                          </AlertDescription>\n                        </div>\n                        <Badge \n                          variant={\n                            item.status === 'critical' \n                              ? 'destructive' \n                              : item.status === 'low' \n                              ? 'secondary'\n                              : 'default'\n                          }\n                        >\n                          {item.status}\n                        </Badge>\n                      </div>\n                    </Alert>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n                </TabsContent>\n              </Tabs>\n            )}\n\n            {/* Order Management View - New Structure */}\n            {activeView === 'orders' && (\n              <div className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <DollarSign className=\"h-5 w-5 mr-2\" />\n                  Daily Summary\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-3\">\n                <div className=\"text-center\">\n                  <p className=\"text-3xl font-bold text-green-600\">₹{mockFinancialSummary.daily.revenue}</p>\n                  <p className=\"text-gray-600\">Revenue</p>\n                </div>\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div>Orders: {mockFinancialSummary.daily.orders}</div>\n                  <div>Avg: ₹{mockFinancialSummary.daily.avgOrderValue}</div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <TrendingUp className=\"h-5 w-5 mr-2\" />\n                  Weekly Summary\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-3\">\n                <div className=\"text-center\">\n                  <p className=\"text-3xl font-bold text-blue-600\">₹{mockFinancialSummary.weekly.revenue}</p>\n                  <p className=\"text-gray-600\">Revenue</p>\n                </div>\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div>Orders: {mockFinancialSummary.weekly.orders}</div>\n                  <div>Avg: ₹{mockFinancialSummary.weekly.avgOrderValue}</div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <BarChart3 className=\"h-5 w-5 mr-2\" />\n                  Monthly Summary\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-3\">\n                <div className=\"text-center\">\n                  <p className=\"text-3xl font-bold text-purple-600\">₹{mockFinancialSummary.monthly.revenue}</p>\n                  <p className=\"text-gray-600\">Revenue</p>\n                </div>\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div>Orders: {mockFinancialSummary.monthly.orders}</div>\n                  <div>Avg: ₹{mockFinancialSummary.monthly.avgOrderValue}</div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Payment Methods Distribution</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {mockFinancialSummary.paymentMethods.map((method) => (\n                  <div key={method.method} className=\"space-y-2\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"font-medium\">{method.method}</span>\n                      <span>₹{method.amount} ({method.percentage}%)</span>\n                    </div>\n                    <Progress value={method.percentage} className=\"h-2\" />\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n              </div>\n            )}\n\n            {/* Kitchen Operations View */}\n            {activeView === 'kitchen' && (\n              <div className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center\">\n                <Bell className=\"h-5 w-5 mr-2\" />\n                Emergency Broadcast System\n              </CardTitle>\n              <CardDescription>\n                Send urgent communications to all users of the HASIVU platform\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <Collapsible>\n                <CollapsibleTrigger asChild>\n                  <Button variant=\"outline\" className=\"w-full justify-between\">\n                    <div className=\"flex items-center space-x-2\">\n                      <Switch \n                        checked={emergencyMode}\n                        onCheckedChange={setEmergencyMode}\n                      />\n                      <span className=\"font-medium\">Emergency Mode</span>\n                      {emergencyMode && (\n                        <Badge variant=\"destructive\">ACTIVE</Badge>\n                      )}\n                    </div>\n                  </Button>\n                </CollapsibleTrigger>\n                <CollapsibleContent className=\"space-y-4 mt-4\">\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium\">Message</label>\n                    <textarea \n                      className=\"w-full p-3 border rounded-lg resize-none\"\n                      rows={4}\n                      placeholder=\"Enter your broadcast message...\"\n                      value={broadcastMessage}\n                      onChange={(e) => setBroadcastMessage(e.target.value)}\n                    />\n                  </div>\n\n                  <div className=\"flex space-x-2\">\n                    <AlertDialog>\n                      <AlertDialogTrigger asChild>\n                        <Button \n                          className=\"flex-1\"\n                          variant={emergencyMode ? \"destructive\" : \"default\"}\n                          disabled={!broadcastMessage.trim()}\n                        >\n                          <Send className=\"h-4 w-4 mr-2\" />\n                          Send to All Users\n                        </Button>\n                      </AlertDialogTrigger>\n                      <AlertDialogContent>\n                        <AlertDialogHeader>\n                          <AlertDialogTitle>Confirm Broadcast</AlertDialogTitle>\n                          <AlertDialogDescription>\n                            This will send an {emergencyMode ? 'emergency' : 'urgent'} message to all active users. This action cannot be undone.\n                          </AlertDialogDescription>\n                        </AlertDialogHeader>\n                        <AlertDialogFooter>\n                          <AlertDialogCancel>Cancel</AlertDialogCancel>\n                          <AlertDialogAction>Send Broadcast</AlertDialogAction>\n                        </AlertDialogFooter>\n                      </AlertDialogContent>\n                    </AlertDialog>\n                    <Button variant=\"outline\">\n                      <Settings className=\"h-4 w-4 mr-2\" />\n                      Target Groups\n                    </Button>\n                  </div>\n                </CollapsibleContent>\n              </Collapsible>\n\n              <Alert>\n                <Shield className=\"h-4 w-4\" />\n                <AlertTitle>Broadcast Guidelines</AlertTitle>\n                <AlertDescription>\n                  Emergency broadcasts are logged and sent immediately to all active users. \n                  Use responsibly and only for urgent school-wide communications.\n                </AlertDescription>\n              </Alert>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Recent Broadcasts</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-3\">\n                <div className=\"p-3 border rounded-lg\">\n                  <div className=\"flex justify-between items-start\">\n                    <div>\n                      <p className=\"font-medium\">Weather Alert</p>\n                      <p className=\"text-sm text-gray-600\">Due to heavy rain, meal service timings have been adjusted...</p>\n                    </div>\n                    <Badge variant=\"secondary\">2h ago</Badge>\n                  </div>\n                </div>\n                <div className=\"p-3 border rounded-lg\">\n                  <div className=\"flex justify-between items-start\">\n                    <div>\n                      <p className=\"font-medium\">Menu Update</p>\n                      <p className=\"text-sm text-gray-600\">Special Republic Day menu available today with traditional items...</p>\n                    </div>\n                    <Badge variant=\"secondary\">1d ago</Badge>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n              </div>\n            )}\n          </div>\n        </SidebarInset>\n      </div>\n      \n      {/* Meal Order Drawer */}\n      {selectedMeal && (\n        <MealOrderDrawer\n          meal={selectedMeal}\n          isOpen={isMealDrawerOpen}\n          onClose={() => setIsMealDrawerOpen(false)}\n          onAddToCart={handleAddToCart}\n        />\n      )}\n    </SidebarProvider>\n  );\n};\n\nexport { EnhancedAdminDashboard };","/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/enhanced-kitchen-dashboard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/enhanced-parent-dashboard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/enhanced-student-dashboard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/index.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/kitchen-dashboard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/parent/ParentDashboard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/parent/components/ChildManagement.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/parent/components/NotificationCenter.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/parent/components/NutritionDashboard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/parent/components/OrderHistory.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/parent/components/OrderTracking.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/parent/components/PaymentMethods.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/parent/components/SubscriptionManagement.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/parent-dashboard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/student-dashboard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/types.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/demo/PaymentIntelligenceDemo.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/demo/RFIDLiveDemo.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/error-boundary/ErrorBoundary.tsx",["2275","2276","2277","2278","2279"],[],"'use client';\n\n/**\n * HASIVU Platform - Production Error Boundary\n * Comprehensive error boundary with logging, recovery, and user feedback\n * Implements production-ready error handling with graceful degradation\n */\n\nimport React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { AlertTriangle, RefreshCw, Home, Bug, ChevronDown, ChevronUp } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\ninterface Props {\n  children?: ReactNode;\n  fallback?: ReactNode;\n  onError?: (error: Error, errorInfo: ErrorInfo) => void;\n  showErrorDetails?: boolean;\n  isolate?: boolean;\n  level?: 'page' | 'section' | 'component';\n  retryable?: boolean;\n  errorBoundaryId?: string;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n  errorInfo: ErrorInfo | null;\n  eventId: string | null;\n  showDetails: boolean;\n  retryCount: number;\n  isRetrying: boolean;\n}\n\n// Error reporting utility\nclass ErrorReporter {\n  static report(\n    error: Error,\n    errorInfo: ErrorInfo,\n    boundaryId?: string,\n    retryCount: number = 0\n  ): string {\n    const eventId = Date.now().toString(36) + Math.random().toString(36).substr(2);\n    \n    const errorReport = {\n      eventId,\n      timestamp: new Date().toISOString(),\n      error: {\n        name: error.name,\n        message: error.message,\n        stack: error.stack,\n      },\n      componentStack: errorInfo.componentStack,\n      boundaryId,\n      retryCount,\n      userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : 'unknown',\n      url: typeof window !== 'undefined' ? window.location.href : 'unknown',\n      userId: 'anonymous', // TODO: Get from auth context\n    };\n\n    // Log to console in development\n    if (process.env.NODE_ENV === 'development') {\n      console.group(`🚨 Error Boundary: ${error.name}`);\n      console.error('Error:', error);\n      console.error('Component Stack:', errorInfo.componentStack);\n      console.error('Full Report:', errorReport);\n      console.groupEnd();\n    }\n\n    // TODO: In production, send to error reporting service\n    // await fetch('/api/errors', { \n    //   method: 'POST',\n    //   body: JSON.stringify(errorReport),\n    //   headers: { 'Content-Type': 'application/json' }\n    // });\n\n    return eventId;\n  }\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  private retryTimeoutId: NodeJS.Timeout | null = null;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      eventId: null,\n      showDetails: false,\n      retryCount: 0,\n      isRetrying: false,\n    };\n  }\n\n  static getDerivedStateFromError(error: Error): Partial<State> {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    const eventId = ErrorReporter.report(\n      error,\n      errorInfo,\n      this.props.errorBoundaryId,\n      this.state.retryCount\n    );\n\n    this.setState({\n      error,\n      errorInfo,\n      eventId,\n    });\n\n    // Call custom error handler if provided\n    this.props.onError?.(error, errorInfo);\n  }\n\n  handleRetry = () => {\n    if (this.state.retryCount >= 3) return;\n\n    this.setState({ isRetrying: true });\n    \n    this.retryTimeoutId = setTimeout(() => {\n      this.setState(prevState => ({\n        hasError: false,\n        error: null,\n        errorInfo: null,\n        eventId: null,\n        showDetails: false,\n        retryCount: prevState.retryCount + 1,\n        isRetrying: false,\n      }));\n    }, 1000);\n  };\n\n  handleGoHome = () => {\n    if (typeof window !== 'undefined') {\n      window.location.href = '/';\n    }\n  };\n\n  toggleDetails = () => {\n    this.setState(prevState => ({\n      showDetails: !prevState.showDetails,\n    }));\n  };\n\n  componentWillUnmount() {\n    if (this.retryTimeoutId) {\n      clearTimeout(this.retryTimeoutId);\n    }\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // Custom fallback UI\n      if (this.props.fallback) {\n        return this.props.fallback;\n      }\n\n      const { error, eventId, showDetails, retryCount, isRetrying } = this.state;\n      const { level = 'component', retryable = true, showErrorDetails = true } = this.props;\n      \n      const canRetry = retryable && retryCount < 3;\n      const isPageLevel = level === 'page';\n\n      return (\n        <div\n          className={cn(\n            'flex items-center justify-center p-4',\n            isPageLevel && 'min-h-screen bg-gray-50',\n            this.props.isolate && 'border border-red-200 rounded-lg bg-red-50'\n          )}\n          role=\"alert\"\n          aria-live=\"assertive\"\n        >\n          <Card className={cn(\n            'w-full max-w-lg mx-auto',\n            isPageLevel ? 'border-red-200 bg-white shadow-lg' : 'border-red-200 bg-red-50'\n          )}>\n            <CardHeader className=\"text-center\">\n              <div className=\"mx-auto w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mb-4\">\n                <AlertTriangle className=\"w-8 h-8 text-red-600\" />\n              </div>\n              <CardTitle className=\"text-xl text-red-900\">\n                {isPageLevel ? 'Something went wrong' : 'Component Error'}\n              </CardTitle>\n              <CardDescription className=\"text-red-700\">\n                {isPageLevel\n                  ? 'We encountered an unexpected error. Our team has been notified.'\n                  : 'This section encountered an error and cannot be displayed.'}\n                {eventId && (\n                  <span className=\"block mt-2 text-xs font-mono text-red-600\">\n                    Error ID: {eventId}\n                  </span>\n                )}\n              </CardDescription>\n            </CardHeader>\n\n            <CardContent className=\"space-y-4\">\n              {/* Action buttons */}\n              <div className=\"flex flex-col sm:flex-row gap-3 justify-center\">\n                {canRetry && (\n                  <Button\n                    onClick={this.handleRetry}\n                    disabled={isRetrying}\n                    className=\"flex items-center justify-center space-x-2\"\n                    variant={isPageLevel ? 'default' : 'outline'}\n                  >\n                    <RefreshCw className={cn('w-4 h-4', isRetrying && 'animate-spin')} />\n                    <span>{isRetrying ? 'Retrying...' : 'Try Again'}</span>\n                  </Button>\n                )}\n                \n                {isPageLevel && (\n                  <Button \n                    onClick={this.handleGoHome} \n                    variant=\"outline\"\n                    className=\"flex items-center justify-center space-x-2\"\n                  >\n                    <Home className=\"w-4 h-4\" />\n                    <span>Go Home</span>\n                  </Button>\n                )}\n              </div>\n\n              {/* Retry count indicator */}\n              {retryCount > 0 && (\n                <div className=\"text-center\">\n                  <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\n                    Attempt {retryCount} of 3\n                  </span>\n                </div>\n              )}\n\n              {/* Error details (development/debug mode) */}\n              {showErrorDetails && error && process.env.NODE_ENV === 'development' && (\n                <div className=\"border-t pt-4\">\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={this.toggleDetails}\n                    className=\"w-full flex items-center justify-center space-x-2 text-red-700 hover:text-red-800\"\n                  >\n                    <Bug className=\"w-4 h-4\" />\n                    <span>Error Details</span>\n                    {showDetails ? <ChevronUp className=\"w-4 h-4\" /> : <ChevronDown className=\"w-4 h-4\" />}\n                  </Button>\n\n                  {showDetails && (\n                    <div className=\"mt-3 p-3 bg-red-100 rounded-md\">\n                      <div className=\"text-sm space-y-2\">\n                        <div>\n                          <strong className=\"text-red-900\">Error:</strong>\n                          <pre className=\"mt-1 text-red-700 text-xs whitespace-pre-wrap font-mono\">\n                            {error.message}\n                          </pre>\n                        </div>\n                        {error.stack && (\n                          <div>\n                            <strong className=\"text-red-900\">Stack Trace:</strong>\n                            <pre className=\"mt-1 text-red-700 text-xs whitespace-pre-wrap font-mono max-h-32 overflow-auto\">\n                              {error.stack}\n                            </pre>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n\n              {/* Production help text */}\n              {process.env.NODE_ENV === 'production' && (\n                <div className=\"text-center text-sm text-gray-600\">\n                  If this problem persists, please contact support with the error ID above.\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\n// Higher-order component for easy wrapping\nexport function withErrorBoundary<P extends object>(\n  Component: React.ComponentType<P>,\n  errorBoundaryProps?: Omit<Props, 'children'>\n) {\n  const WrappedComponent = (props: P) => (\n    <ErrorBoundary {...errorBoundaryProps}>\n      <Component {...props} />\n    </ErrorBoundary>\n  );\n\n  WrappedComponent.displayName = `withErrorBoundary(${Component.displayName || Component.name})`;\n  return WrappedComponent;\n}\n\n// Specialized error boundaries for different use cases\nexport const PageErrorBoundary = (props: Omit<Props, 'level'>) => (\n  <ErrorBoundary level=\"page\" {...props} />\n);\n\nexport const SectionErrorBoundary = (props: Omit<Props, 'level' | 'isolate'>) => (\n  <ErrorBoundary level=\"section\" isolate {...props} />\n);\n\nexport const ComponentErrorBoundary = (props: Omit<Props, 'level' | 'retryable'>) => (\n  <ErrorBoundary level=\"component\" retryable={false} {...props} />\n);\n\nexport default ErrorBoundary;","/Users/mahesha/Downloads/hasivu-platform/web/src/components/home/CTASection.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/home/FeatureCard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/home/HeroSection.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/home/StatsSection.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/home/TestimonialsSection.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/InventoryManagement.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/KitchenManagementDashboard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/OrderWorkflowBoard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/landing/HASIVULandingPage.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/landing/HASIVULandingPageProd.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/landing/ProductionLandingPage.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/layout/Layout.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/layout/app-layout.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/layout/header/main-header.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/layout/header/mobile-menu.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/layout/header/navigation-menu.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/layout/index.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/layout/navigation/bottom-tab-nav.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/layout/navigation/breadcrumb-nav.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/layout/sidebar/sidebar-nav.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/layout/sidebar-layout.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/loading/LoadingStates.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/magicui/animated-list.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/magicui/background-beams.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/magicui/bento-grid.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/magicui/marquee.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/magicui/number-ticker.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/magicui/text-generate-effect.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/CategoryTabs.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/EnhancedMealList.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/EnhancedMealOrderingDemo.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/MealCard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/MealOrderingDrawer.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/MealOrderingInterface.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/MealSearchCommand.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/NotificationSystem.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/NutritionalTooltips.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/OrderSummary.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/QuantitySelector.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/RFIDInterface.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/RFIDVerification.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/__tests__/enhanced-meal-ordering-integration.test.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/meal-ordering/types.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/BottomNavigation.tsx",["2280"],[],"\"use client\"\n\nimport React from 'react'\nimport { useRouter, usePathname } from 'next/navigation'\nimport { cn } from '@/lib/utils'\nimport {\n  Home,\n  UtensilsCrossed,\n  Wallet,\n  QrCode,\n  User,\n  ShoppingCart,\n  Bell,\n  Clock\n} from 'lucide-react'\n\ninterface NavigationItem {\n  label: string\n  icon: React.ElementType\n  href: string\n  badge?: number\n  activePattern?: string[]\n}\n\ninterface BottomNavigationProps {\n  userRole?: 'student' | 'parent' | 'admin'\n  className?: string\n}\n\nconst navigationItems = {\n  student: [\n    {\n      label: 'Home',\n      icon: Home,\n      href: '/student',\n      activePattern: ['/student', '/student/dashboard']\n    },\n    {\n      label: 'Order',\n      icon: UtensilsCrossed,\n      href: '/student/order',\n      activePattern: ['/student/order', '/student/menu']\n    },\n    {\n      label: 'Cart',\n      icon: ShoppingCart,\n      href: '/student/cart',\n      badge: 0 // Will be populated from state\n    },\n    {\n      label: 'Wallet',\n      icon: Wallet,\n      href: '/student/wallet'\n    },\n    {\n      label: 'Scan',\n      icon: QrCode,\n      href: '/student/scan'\n    }\n  ] as NavigationItem[],\n  parent: [\n    {\n      label: 'Home',\n      icon: Home,\n      href: '/parent',\n      activePattern: ['/parent', '/parent/dashboard']\n    },\n    {\n      label: 'Orders',\n      icon: UtensilsCrossed,\n      href: '/parent/orders'\n    },\n    {\n      label: 'Wallet',\n      icon: Wallet,\n      href: '/parent/wallet'\n    },\n    {\n      label: 'History',\n      icon: Clock,\n      href: '/parent/history'\n    },\n    {\n      label: 'Profile',\n      icon: User,\n      href: '/parent/profile'\n    }\n  ] as NavigationItem[],\n  admin: [\n    {\n      label: 'Dashboard',\n      icon: Home,\n      href: '/admin',\n      activePattern: ['/admin', '/admin/dashboard']\n    },\n    {\n      label: 'Orders',\n      icon: UtensilsCrossed,\n      href: '/admin/orders',\n      badge: 0 // Will be populated from state\n    },\n    {\n      label: 'Menu',\n      icon: UtensilsCrossed,\n      href: '/admin/menu'\n    },\n    {\n      label: 'Reports',\n      icon: Clock,\n      href: '/admin/reports'\n    },\n    {\n      label: 'Settings',\n      icon: User,\n      href: '/admin/settings'\n    }\n  ] as NavigationItem[]\n}\n\nexport const BottomNavigation: React.FC<BottomNavigationProps> = ({\n  userRole = 'student',\n  className\n}) => {\n  const router = useRouter()\n  const pathname = usePathname()\n  \n  const items = navigationItems[userRole]\n  \n  const isActive = (item: NavigationItem) => {\n    if (!pathname) return false;\n    if (item.activePattern) {\n      return item.activePattern.some(pattern => pathname.startsWith(pattern))\n    }\n    return pathname === item.href\n  }\n  \n  const handleNavigation = (href: string) => {\n    // Add haptic feedback for mobile devices\n    if ('vibrate' in navigator) {\n      navigator.vibrate(50)\n    }\n    router.push(href)\n  }\n  \n  return (\n    <div className={cn(\n      \"fixed bottom-0 left-0 right-0 z-50 bg-background/95 backdrop-blur-sm border-t border-border\",\n      \"safe-area-pb md:hidden\", // Hide on desktop\n      className\n    )}>\n      <nav className=\"flex items-center justify-around px-2 py-2\">\n        {items.map((item) => {\n          const Icon = item.icon\n          const active = isActive(item)\n          \n          return (\n            <button\n              key={item.href}\n              onClick={() => handleNavigation(item.href)}\n              className={cn(\n                \"relative flex flex-col items-center justify-center min-h-[48px] px-3 py-1.5 rounded-lg transition-all duration-200\",\n                \"focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2\",\n                \"active:scale-95 active:bg-primary/10\", // Touch feedback\n                active\n                  ? \"bg-primary/10 text-primary\"\n                  : \"text-muted-foreground hover:text-foreground hover:bg-muted/50\"\n              )}\n              aria-label={item.label}\n            >\n              <div className=\"relative\">\n                <Icon className={cn(\n                  \"h-5 w-5 transition-transform duration-200\",\n                  active && \"scale-110\"\n                )} />\n                {item.badge && item.badge > 0 && (\n                  <span className=\"absolute -top-2 -right-2 flex h-4 w-4 items-center justify-center rounded-full bg-destructive text-[10px] font-medium text-destructive-foreground\">\n                    {item.badge > 9 ? '9+' : item.badge}\n                  </span>\n                )}\n              </div>\n              <span className={cn(\n                \"text-[10px] font-medium mt-0.5 transition-colors duration-200\",\n                active ? \"text-primary\" : \"text-muted-foreground\"\n              )}>\n                {item.label}\n              </span>\n            </button>\n          )\n        })}\n      </nav>\n    </div>\n  )\n}\n\nexport default BottomNavigation","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/BottomSheet.tsx",["2281","2282"],[],"\"use client\"\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { createPortal } from 'react-dom'\nimport { cn } from '@/lib/utils'\nimport { X } from 'lucide-react'\nimport { Button } from '@/components/ui/button'\n\ninterface BottomSheetProps {\n  isOpen: boolean\n  onClose: () => void\n  children: React.ReactNode\n  title?: string\n  snapPoints?: number[] // Array of heights in vh (e.g., [30, 60, 90])\n  initialSnapPoint?: number\n  className?: string\n  backdrop?: boolean\n  swipeToClose?: boolean\n  showHandle?: boolean\n  maxHeight?: string\n}\n\nexport const BottomSheet: React.FC<BottomSheetProps> = ({\n  isOpen,\n  onClose,\n  children,\n  title,\n  snapPoints = [90],\n  initialSnapPoint = 0,\n  className,\n  backdrop = true,\n  swipeToClose = true,\n  showHandle = true,\n  maxHeight = \"90vh\"\n}) => {\n  const [currentSnapPoint, setCurrentSnapPoint] = useState(initialSnapPoint)\n  const [isDragging, setIsDragging] = useState(false)\n  const [dragOffset, setDragOffset] = useState(0)\n  const sheetRef = useRef<HTMLDivElement>(null)\n  const touchStartY = useRef<number>(0)\n  const initialHeight = useRef<number>(0)\n\n  // Handle snap point changes\n  const snapToPoint = useCallback((pointIndex: number) => {\n    if (pointIndex < 0 || pointIndex >= snapPoints.length) return\n    \n    setCurrentSnapPoint(pointIndex)\n    setDragOffset(0)\n    \n    if ('vibrate' in navigator) {\n      navigator.vibrate(10)\n    }\n  }, [snapPoints])\n\n  // Handle touch gestures\n  const handleTouchStart = useCallback((e: React.TouchEvent) => {\n    if (!swipeToClose) return\n    \n    touchStartY.current = e.touches[0].clientY\n    initialHeight.current = sheetRef.current?.clientHeight || 0\n    setIsDragging(true)\n  }, [swipeToClose])\n\n  const handleTouchMove = useCallback((e: React.TouchEvent) => {\n    if (!isDragging || !swipeToClose) return\n    \n    const currentY = e.touches[0].clientY\n    const deltaY = currentY - touchStartY.current\n    \n    // Only allow dragging down\n    if (deltaY > 0) {\n      setDragOffset(deltaY)\n    }\n  }, [isDragging, swipeToClose])\n\n  const handleTouchEnd = useCallback(() => {\n    if (!isDragging || !swipeToClose) return\n    \n    const threshold = 100\n    const velocityThreshold = 10\n    \n    if (dragOffset > threshold) {\n      // Close if dragged far enough\n      onClose()\n    } else if (snapPoints.length > 1) {\n      // Snap to nearest point\n      const currentHeight = snapPoints[currentSnapPoint]\n      const dragPercentage = (dragOffset / window.innerHeight) * 100\n      \n      if (dragPercentage > velocityThreshold) {\n        // Move to next snap point or close\n        if (currentSnapPoint > 0) {\n          snapToPoint(currentSnapPoint - 1)\n        } else {\n          onClose()\n        }\n      } else {\n        // Stay at current snap point\n        setDragOffset(0)\n      }\n    } else {\n      // Reset position\n      setDragOffset(0)\n    }\n    \n    setIsDragging(false)\n  }, [isDragging, dragOffset, snapPoints, currentSnapPoint, onClose, snapToPoint, swipeToClose])\n\n  // Handle escape key\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape' && isOpen) {\n        onClose()\n      }\n    }\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape)\n      document.body.style.overflow = 'hidden'\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape)\n      document.body.style.overflow = 'unset'\n    }\n  }, [isOpen, onClose])\n\n  // Reset state when closed\n  useEffect(() => {\n    if (!isOpen) {\n      setCurrentSnapPoint(initialSnapPoint)\n      setDragOffset(0)\n      setIsDragging(false)\n    }\n  }, [isOpen, initialSnapPoint])\n\n  if (!isOpen) return null\n\n  const currentHeight = snapPoints[currentSnapPoint]\n  const translateY = isDragging ? Math.max(0, dragOffset) : 0\n\n  const sheetContent = (\n    <>\n      {/* Backdrop */}\n      {backdrop && (\n        <div \n          className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-40 animate-fade-in\"\n          onClick={onClose}\n        />\n      )}\n\n      {/* Bottom Sheet */}\n      <div\n        ref={sheetRef}\n        className={cn(\n          \"fixed bottom-0 left-0 right-0 z-50\",\n          \"bg-white rounded-t-xl shadow-2xl\",\n          \"transition-transform duration-300 ease-out\",\n          isDragging && \"transition-none\",\n          className\n        )}\n        style={{\n          height: `${currentHeight}vh`,\n          maxHeight,\n          transform: `translateY(${translateY}px)`,\n        }}\n        onTouchStart={handleTouchStart}\n        onTouchMove={handleTouchMove}\n        onTouchEnd={handleTouchEnd}\n        onTouchCancel={handleTouchEnd}\n      >\n        {/* Handle */}\n        {showHandle && (\n          <div className=\"flex justify-center pt-3 pb-2\">\n            <div className=\"w-10 h-1 bg-gray-300 rounded-full\" />\n          </div>\n        )}\n\n        {/* Header */}\n        {title && (\n          <div className=\"flex items-center justify-between px-4 py-3 border-b\">\n            <h2 className=\"text-lg font-semibold text-gray-900\">{title}</h2>\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={onClose}\n              className=\"h-8 w-8\"\n            >\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        )}\n\n        {/* Content */}\n        <div className=\"flex-1 overflow-auto overscroll-behavior-contain\">\n          <div className=\"pb-safe-bottom\">\n            {children}\n          </div>\n        </div>\n\n        {/* Snap point indicators */}\n        {snapPoints.length > 1 && (\n          <div className=\"absolute right-4 top-1/2 transform -translate-y-1/2 space-y-2\">\n            {snapPoints.map((_, index) => (\n              <button\n                key={index}\n                onClick={() => snapToPoint(index)}\n                className={cn(\n                  \"w-2 h-2 rounded-full transition-colors\",\n                  index === currentSnapPoint ? \"bg-primary\" : \"bg-gray-300\"\n                )}\n                aria-label={`Snap to ${snapPoints[index]}% height`}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </>\n  )\n\n  return createPortal(sheetContent, document.body)\n}\n\n// Hook for managing bottom sheet state\nexport const useBottomSheet = (initialState = false) => {\n  const [isOpen, setIsOpen] = useState(initialState)\n\n  const open = useCallback(() => setIsOpen(true), [])\n  const close = useCallback(() => setIsOpen(false), [])\n  const toggle = useCallback(() => setIsOpen(prev => !prev), [])\n\n  return {\n    isOpen,\n    open,\n    close,\n    toggle,\n    setIsOpen\n  }\n}\n\n// Pre-built bottom sheets for common use cases\n\n// Meal details bottom sheet\ninterface MealDetailsSheetProps {\n  isOpen: boolean\n  onClose: () => void\n  meal: {\n    id: string\n    name: string\n    description: string\n    price: number\n    image: string\n    allergens: string[]\n    nutrition: {\n      calories: number\n      protein: number\n      carbs: number\n      fat: number\n    }\n  } | null\n  onAddToCart?: (meal: any) => void\n}\n\nexport const MealDetailsSheet: React.FC<MealDetailsSheetProps> = ({\n  isOpen,\n  onClose,\n  meal,\n  onAddToCart\n}) => {\n  if (!meal) return null\n\n  return (\n    <BottomSheet\n      isOpen={isOpen}\n      onClose={onClose}\n      snapPoints={[60, 85]}\n      title={meal.name}\n      className=\"max-w-md mx-auto\"\n    >\n      <div className=\"p-4 space-y-4\">\n        {/* Meal Image */}\n        <div className=\"relative h-48 rounded-lg overflow-hidden\">\n          <img\n            src={meal.image}\n            alt={meal.name}\n            className=\"w-full h-full object-cover\"\n          />\n          <div className=\"absolute top-3 right-3 bg-white/90 backdrop-blur-sm rounded-full px-3 py-1\">\n            <span className=\"text-lg font-bold text-green-600\">₹{meal.price}</span>\n          </div>\n        </div>\n\n        {/* Description */}\n        <div>\n          <h3 className=\"font-semibold text-gray-900 mb-2\">Description</h3>\n          <p className=\"text-gray-600 text-sm leading-relaxed\">{meal.description}</p>\n        </div>\n\n        {/* Nutrition */}\n        <div>\n          <h3 className=\"font-semibold text-gray-900 mb-3\">Nutrition per serving</h3>\n          <div className=\"grid grid-cols-2 gap-3\">\n            <div className=\"bg-gray-50 rounded-lg p-3 text-center\">\n              <div className=\"text-lg font-bold text-gray-900\">{meal.nutrition.calories}</div>\n              <div className=\"text-xs text-gray-500\">Calories</div>\n            </div>\n            <div className=\"bg-gray-50 rounded-lg p-3 text-center\">\n              <div className=\"text-lg font-bold text-gray-900\">{meal.nutrition.protein}g</div>\n              <div className=\"text-xs text-gray-500\">Protein</div>\n            </div>\n            <div className=\"bg-gray-50 rounded-lg p-3 text-center\">\n              <div className=\"text-lg font-bold text-gray-900\">{meal.nutrition.carbs}g</div>\n              <div className=\"text-xs text-gray-500\">Carbs</div>\n            </div>\n            <div className=\"bg-gray-50 rounded-lg p-3 text-center\">\n              <div className=\"text-lg font-bold text-gray-900\">{meal.nutrition.fat}g</div>\n              <div className=\"text-xs text-gray-500\">Fat</div>\n            </div>\n          </div>\n        </div>\n\n        {/* Allergens */}\n        {meal.allergens.length > 0 && (\n          <div>\n            <h3 className=\"font-semibold text-gray-900 mb-2\">Allergens</h3>\n            <div className=\"flex flex-wrap gap-2\">\n              {meal.allergens.map((allergen) => (\n                <span\n                  key={allergen}\n                  className=\"px-2 py-1 bg-red-100 text-red-800 text-xs rounded-full\"\n                >\n                  {allergen}\n                </span>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Add to Cart Button */}\n        {onAddToCart && (\n          <div className=\"pt-4\">\n            <Button\n              onClick={() => onAddToCart(meal)}\n              className=\"w-full h-12 text-lg\"\n              haptic\n            >\n              Add to Cart - ₹{meal.price}\n            </Button>\n          </div>\n        )}\n      </div>\n    </BottomSheet>\n  )\n}\n\n// RFID Scanner Bottom Sheet\ninterface RFIDScannerSheetProps {\n  isOpen: boolean\n  onClose: () => void\n  onScanComplete?: (rfidCode: string) => void\n}\n\nexport const RFIDScannerSheet: React.FC<RFIDScannerSheetProps> = ({\n  isOpen,\n  onClose,\n  onScanComplete\n}) => {\n  const [scanning, setScanning] = useState(false)\n  const [rfidCode, setRfidCode] = useState('')\n\n  const startScan = useCallback(() => {\n    setScanning(true)\n    // Simulate RFID scan\n    setTimeout(() => {\n      const mockRFID = `RFID${Date.now().toString().slice(-6)}`\n      setRfidCode(mockRFID)\n      setScanning(false)\n      onScanComplete?.(mockRFID)\n    }, 2000)\n  }, [onScanComplete])\n\n  return (\n    <BottomSheet\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"RFID Scanner\"\n      snapPoints={[50]}\n    >\n      <div className=\"p-6 text-center space-y-6\">\n        {/* Scanner Animation */}\n        <div className=\"relative mx-auto w-32 h-32 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center\">\n          <div className={cn(\n            \"w-16 h-16 border-4 border-white rounded-full\",\n            scanning && \"animate-ping\"\n          )} />\n          {scanning && (\n            <div className=\"absolute inset-0 border-4 border-white/30 rounded-full animate-pulse\" />\n          )}\n        </div>\n\n        {/* Status */}\n        <div className=\"space-y-2\">\n          <h3 className=\"text-xl font-bold text-gray-900\">\n            {scanning ? 'Scanning...' : rfidCode ? 'Scan Complete!' : 'Ready to Scan'}\n          </h3>\n          {rfidCode && (\n            <div className=\"bg-green-50 border border-green-200 rounded-lg p-3\">\n              <p className=\"text-green-800 font-mono\">{rfidCode}</p>\n            </div>\n          )}\n        </div>\n\n        {/* Action Button */}\n        <Button\n          onClick={startScan}\n          disabled={scanning}\n          className=\"w-full h-12\"\n          loading={scanning}\n          loadingText=\"Scanning...\"\n          haptic\n        >\n          {rfidCode ? 'Scan Again' : 'Start Scan'}\n        </Button>\n\n        {/* Instructions */}\n        <p className=\"text-sm text-gray-500\">\n          Hold your RFID card near the device to scan\n        </p>\n      </div>\n    </BottomSheet>\n  )\n}","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/LoadingSkeleton.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/MobileHeader.tsx",["2283","2284"],[],"/**\n * MobileHeader - Mobile-optimized header component\n * Features: Responsive layout, notification badge, quick actions\n */\n\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { \n  Menu, \n  Bell, \n  Search, \n  Wallet, \n  Wifi, \n  WifiOff,\n  Battery,\n  Signal\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Avatar, AvatarImage, AvatarFallback } from '@/components/ui/avatar';\nimport { \n  Sheet, \n  SheetContent, \n  SheetTrigger, \n  SheetHeader,\n  SheetTitle \n} from '@/components/ui/sheet';\nimport { cn } from '@/lib/utils';\nimport { formatCurrency } from '@/utils/formatCurrency';\n\ninterface StudentInfo {\n  id: string;\n  name: string;\n  grade: string;\n  section: string;\n  walletBalance: number;\n  profileImage?: string;\n  school: {\n    name: string;\n    logo?: string;\n  };\n}\n\ninterface MobileHeaderProps {\n  student: StudentInfo;\n  title?: string;\n  showSearch?: boolean;\n  showWallet?: boolean;\n  notificationCount?: number;\n  isOnline?: boolean;\n  onSearchClick?: () => void;\n  onNotificationClick?: () => void;\n  onMenuClick?: () => void;\n  className?: string;\n}\n\nexport const MobileHeader: React.FC<MobileHeaderProps> = ({\n  student,\n  title = 'HASIVU',\n  showSearch = true,\n  showWallet = true,\n  notificationCount = 0,\n  isOnline = true,\n  onSearchClick,\n  onNotificationClick,\n  onMenuClick,\n  className\n}) => {\n  const getStudentInitials = (name: string) => {\n    return name\n      .split(' ')\n      .map(part => part.charAt(0))\n      .join('')\n      .toUpperCase()\n      .slice(0, 2);\n  };\n\n  const getBatteryLevel = () => {\n    // Check if Battery API is available\n    if ('getBattery' in navigator) {\n      // This would be implemented with proper battery API\n      return 85; // Mock battery level\n    }\n    return null;\n  };\n\n  const getSignalStrength = () => {\n    // Mock network quality - in real app, this would use Network Information API\n    if ('connection' in navigator) {\n      const connection = (navigator as any).connection;\n      return connection?.effectiveType || '4g';\n    }\n    return '4g';\n  };\n\n  return (\n    <header className={cn(\n      'sticky top-0 z-50',\n      'bg-white border-b border-gray-200',\n      'safe-area-inset-top',\n      className\n    )}>\n      {/* Status bar info for PWA */}\n      <div className=\"bg-primary/5 px-4 py-1 text-xs text-gray-600 flex justify-between items-center md:hidden\">\n        <div className=\"flex items-center space-x-2\">\n          <span>{new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</span>\n          <div className=\"flex items-center space-x-1\">\n            {isOnline ? (\n              <>\n                <Wifi className=\"h-3 w-3\" />\n                <span className=\"text-xs\">{getSignalStrength()}</span>\n              </>\n            ) : (\n              <>\n                <WifiOff className=\"h-3 w-3 text-red-500\" />\n                <span className=\"text-red-500\">Offline</span>\n              </>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          {getBatteryLevel() && (\n            <div className=\"flex items-center space-x-1\">\n              <Battery className=\"h-3 w-3\" />\n              <span>{getBatteryLevel()}%</span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Main header */}\n      <div className=\"px-4 py-3\">\n        <div className=\"flex items-center justify-between\">\n          {/* Left side - Menu & Title */}\n          <div className=\"flex items-center space-x-3\">\n            <Sheet>\n              <SheetTrigger asChild>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"h-10 w-10 p-0 md:hidden\"\n                  onClick={onMenuClick}\n                >\n                  <Menu className=\"h-5 w-5\" />\n                  <span className=\"sr-only\">Open menu</span>\n                </Button>\n              </SheetTrigger>\n              <SheetContent side=\"left\" className=\"w-80\">\n                <SheetHeader>\n                  <SheetTitle className=\"text-left\">\n                    <div className=\"flex items-center space-x-3\">\n                      <Avatar className=\"h-12 w-12\">\n                        <AvatarImage src={student.profileImage} alt={student.name} />\n                        <AvatarFallback className=\"bg-primary text-white\">\n                          {getStudentInitials(student.name)}\n                        </AvatarFallback>\n                      </Avatar>\n                      <div>\n                        <p className=\"font-semibold text-gray-900\">{student.name}</p>\n                        <p className=\"text-sm text-gray-500\">\n                          Grade {student.grade}-{student.section}\n                        </p>\n                      </div>\n                    </div>\n                  </SheetTitle>\n                </SheetHeader>\n                \n                {/* Menu content */}\n                <div className=\"mt-6 space-y-4\">\n                  {showWallet && (\n                    <div className=\"p-4 bg-green-50 rounded-lg\">\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Wallet className=\"h-5 w-5 text-green-600\" />\n                          <span className=\"font-medium text-gray-700\">Wallet Balance</span>\n                        </div>\n                        <span className=\"font-bold text-green-600 text-lg\">\n                          {formatCurrency(student.walletBalance)}\n                        </span>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Quick Actions */}\n                  <div className=\"space-y-2\">\n                    <Button variant=\"ghost\" className=\"w-full justify-start\" size=\"lg\">\n                      <Wallet className=\"h-5 w-5 mr-3\" />\n                      Top up Wallet\n                    </Button>\n                    <Button variant=\"ghost\" className=\"w-full justify-start\" size=\"lg\">\n                      <Bell className=\"h-5 w-5 mr-3\" />\n                      Notifications\n                      {notificationCount > 0 && (\n                        <Badge variant=\"destructive\" className=\"ml-auto\">\n                          {notificationCount}\n                        </Badge>\n                      )}\n                    </Button>\n                    <Button variant=\"ghost\" className=\"w-full justify-start\" size=\"lg\">\n                      <Search className=\"h-5 w-5 mr-3\" />\n                      Order History\n                    </Button>\n                  </div>\n\n                  {/* School info */}\n                  <div className=\"pt-4 border-t border-gray-200\">\n                    <div className=\"flex items-center space-x-2\">\n                      {student.school.logo && (\n                        <img \n                          src={student.school.logo} \n                          alt={student.school.name}\n                          className=\"h-6 w-6 rounded\"\n                        />\n                      )}\n                      <span className=\"text-sm text-gray-600\">{student.school.name}</span>\n                    </div>\n                  </div>\n                </div>\n              </SheetContent>\n            </Sheet>\n\n            <div>\n              <h1 className=\"text-lg font-semibold text-gray-900 truncate\">\n                {title}\n              </h1>\n              <p className=\"text-xs text-gray-500 hidden sm:block\">\n                {student.school.name}\n              </p>\n            </div>\n          </div>\n\n          {/* Right side - Actions */}\n          <div className=\"flex items-center space-x-2\">\n            {showSearch && (\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"h-10 w-10 p-0\"\n                onClick={onSearchClick}\n              >\n                <Search className=\"h-5 w-5\" />\n                <span className=\"sr-only\">Search</span>\n              </Button>\n            )}\n\n            {showWallet && (\n              <motion.div\n                whileTap={{ scale: 0.95 }}\n                className=\"hidden sm:flex items-center space-x-2 bg-green-50 px-3 py-2 rounded-lg\"\n              >\n                <Wallet className=\"h-4 w-4 text-green-600\" />\n                <span className=\"text-sm font-semibold text-green-700\">\n                  {formatCurrency(student.walletBalance)}\n                </span>\n              </motion.div>\n            )}\n\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"h-10 w-10 p-0 relative\"\n              onClick={onNotificationClick}\n            >\n              <Bell className=\"h-5 w-5\" />\n              {notificationCount > 0 && (\n                <motion.div\n                  initial={{ scale: 0 }}\n                  animate={{ scale: 1 }}\n                  className=\"absolute -top-1 -right-1\"\n                >\n                  <Badge variant=\"destructive\" className=\"h-5 w-5 p-0 text-xs flex items-center justify-center\">\n                    {notificationCount > 9 ? '9+' : notificationCount}\n                  </Badge>\n                </motion.div>\n              )}\n              <span className=\"sr-only\">Notifications</span>\n            </Button>\n\n            <Avatar className=\"h-8 w-8 sm:h-10 sm:w-10\">\n              <AvatarImage src={student.profileImage} alt={student.name} />\n              <AvatarFallback className=\"bg-primary text-white text-sm\">\n                {getStudentInitials(student.name)}\n              </AvatarFallback>\n            </Avatar>\n          </div>\n        </div>\n      </div>\n\n      {/* Offline indicator */}\n      {!isOnline && (\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"bg-yellow-500 text-white text-center py-2 px-4 text-sm\"\n        >\n          <div className=\"flex items-center justify-center space-x-2\">\n            <WifiOff className=\"h-4 w-4\" />\n            <span>You're offline. Some features may be limited.</span>\n          </div>\n        </motion.div>\n      )}\n    </header>\n  );\n};\n\nexport default MobileHeader;","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/MobileLayout.tsx",["2285","2286","2287","2288","2289","2290","2291"],[],"'use client';\n\nimport React, { useEffect, useState } from 'react'\nimport { useRouter } from 'next/navigation'\nimport { cn } from '@/lib/utils'\nimport { useMobileLayout } from '@/hooks/useMobileLayout'\nimport BottomNavigation from './BottomNavigation'\nimport MobileNavSheet from './MobileNavSheet'\nimport { Button } from '@/components/ui/button'\nimport { Card } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport {\n  Bell,\n  Search,\n  WifiOff,\n  Zap,\n  X\n} from 'lucide-react'\n\ninterface MobileLayoutProps {\n  children: React.ReactNode\n  userRole?: 'student' | 'parent' | 'admin'\n  user?: {\n    name: string\n    email: string\n    avatar?: string\n    id: string\n  }\n  showBottomNav?: boolean\n  showHeader?: boolean\n  className?: string\n  onLogout?: () => void\n}\n\ninterface OfflineBannerProps {\n  isOnline: boolean\n  onRetry: () => void\n}\n\nconst OfflineBanner: React.FC<OfflineBannerProps> = ({ isOnline, onRetry }) => {\n  const [showBanner, setShowBanner] = useState(false)\n\n  useEffect(() => {\n    setShowBanner(!isOnline)\n  }, [isOnline])\n\n  if (!showBanner) return null\n\n  return (\n    <div className=\"fixed top-0 left-0 right-0 z-50 bg-orange-500 text-white p-2 safe-area-pt animate-slide-down\">\n      <div className=\"flex items-center justify-between container mx-auto\">\n        <div className=\"flex items-center space-x-2\">\n          <WifiOff className=\"h-4 w-4\" />\n          <span className=\"text-sm font-medium\">You're offline</span>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Button\n            size=\"sm\"\n            variant=\"ghost\"\n            onClick={onRetry}\n            className=\"h-6 px-2 text-white hover:bg-white/20\"\n          >\n            Retry\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"ghost\"\n            onClick={() => setShowBanner(false)}\n            className=\"h-6 w-6 p-0 text-white hover:bg-white/20\"\n          >\n            <X className=\"h-3 w-3\" />\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\ninterface PWAInstallPromptProps {\n  onInstall: () => void\n  onDismiss: () => void\n}\n\nconst PWAInstallPrompt: React.FC<PWAInstallPromptProps> = ({ onInstall, onDismiss }) => {\n  return (\n    <Card className=\"fixed bottom-20 left-4 right-4 z-40 md:hidden border-primary/20 bg-primary/5 animate-slide-in-bottom\">\n      <div className=\"p-4\">\n        <div className=\"flex items-start space-x-3\">\n          <div className=\"p-2 bg-primary/10 rounded-lg\">\n            <Zap className=\"h-5 w-5 text-primary\" />\n          </div>\n          <div className=\"flex-1\">\n            <h4 className=\"font-semibold text-sm text-gray-900\">Install HASIVU App</h4>\n            <p className=\"text-xs text-gray-600 mt-1\">\n              Get faster access and offline features by installing the app.\n            </p>\n            <div className=\"flex space-x-2 mt-3\">\n              <Button size=\"sm\" onClick={onInstall} className=\"h-8 px-3 text-xs\">\n                Install\n              </Button>\n              <Button size=\"sm\" variant=\"ghost\" onClick={onDismiss} className=\"h-8 px-3 text-xs\">\n                Not now\n              </Button>\n            </div>\n          </div>\n          <Button\n            size=\"sm\"\n            variant=\"ghost\"\n            onClick={onDismiss}\n            className=\"h-6 w-6 p-0\"\n          >\n            <X className=\"h-3 w-3\" />\n          </Button>\n        </div>\n      </div>\n    </Card>\n  )\n}\n\nexport const MobileLayout: React.FC<MobileLayoutProps> = ({\n  children,\n  userRole = 'student',\n  user,\n  showBottomNav = true,\n  showHeader = true,\n  className,\n  onLogout\n}) => {\n  const router = useRouter()\n  const { isMobile, isTablet, isDesktop, safeArea } = useMobileLayout()\n  const [isOnline, setIsOnline] = useState(true)\n  const [showInstallPrompt, setShowInstallPrompt] = useState(false)\n  const [deferredPrompt, setDeferredPrompt] = useState<any>(null)\n  const [notificationCount, setNotificationCount] = useState(3)\n\n  // Handle PWA install prompt\n  useEffect(() => {\n    const handleBeforeInstallPrompt = (e: Event) => {\n      e.preventDefault()\n      setDeferredPrompt(e)\n      \n      // Show install prompt after a delay if on mobile\n      if (isMobile) {\n        setTimeout(() => {\n          setShowInstallPrompt(true)\n        }, 3000)\n      }\n    }\n\n    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt)\n\n    return () => {\n      window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt)\n    }\n  }, [isMobile])\n\n  // Handle online/offline status\n  useEffect(() => {\n    const handleOnline = () => setIsOnline(true)\n    const handleOffline = () => setIsOnline(false)\n\n    setIsOnline(navigator.onLine)\n    window.addEventListener('online', handleOnline)\n    window.addEventListener('offline', handleOffline)\n\n    return () => {\n      window.removeEventListener('online', handleOnline)\n      window.removeEventListener('offline', handleOffline)\n    }\n  }, [])\n\n  // Handle PWA installation\n  const handleInstallApp = async () => {\n    if (deferredPrompt) {\n      deferredPrompt.prompt()\n      const { outcome } = await deferredPrompt.userChoice\n      \n      if (outcome === 'accepted') {\n        console.log('PWA installed')\n      }\n      \n      setDeferredPrompt(null)\n    }\n    setShowInstallPrompt(false)\n  }\n\n  const handleRetryConnection = () => {\n    // Simple connectivity check\n    fetch('/api/v1/health', { method: 'HEAD' })\n      .then(() => {\n        setIsOnline(true)\n      })\n      .catch(() => {\n        console.log('Still offline')\n      })\n  }\n\n  const handleSearch = () => {\n    router.push('/search')\n  }\n\n  const handleNotifications = () => {\n    router.push(`/${userRole}/notifications`)\n  }\n\n  return (\n    <div className={cn(\n      \"min-h-screen bg-gray-50\",\n      \"safe-area-p\", // Use safe area padding\n      isMobile && \"pb-16\", // Account for bottom navigation\n      className\n    )}>\n      {/* Offline Banner */}\n      <OfflineBanner isOnline={isOnline} onRetry={handleRetryConnection} />\n\n      {/* Mobile Header */}\n      {showHeader && isMobile && (\n        <header className={cn(\n          \"sticky top-0 z-30 bg-white/95 backdrop-blur-sm border-b\",\n          !isOnline && \"top-12\" // Account for offline banner\n        )}>\n          <div className=\"flex items-center justify-between px-4 py-3\">\n            {/* Left side - Menu */}\n            <div className=\"flex items-center space-x-3\">\n              <MobileNavSheet\n                userRole={userRole}\n                user={user}\n                onLogout={onLogout}\n              />\n              <div>\n                <h1 className=\"text-lg font-bold text-gray-900\">HASIVU</h1>\n                <p className=\"text-xs text-muted-foreground capitalize\">{userRole} Portal</p>\n              </div>\n            </div>\n\n            {/* Right side - Actions */}\n            <div className=\"flex items-center space-x-2\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={handleSearch}\n                className=\"h-10 w-10 p-0\"\n                aria-label=\"Search\"\n              >\n                <Search className=\"h-5 w-5\" />\n              </Button>\n              \n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={handleNotifications}\n                className=\"h-10 w-10 p-0 relative\"\n                aria-label=\"Notifications\"\n              >\n                <Bell className=\"h-5 w-5\" />\n                {notificationCount > 0 && (\n                  <Badge \n                    variant=\"destructive\" \n                    className=\"absolute -top-1 -right-1 h-5 w-5 p-0 text-xs flex items-center justify-center\"\n                  >\n                    {notificationCount > 9 ? '9+' : notificationCount}\n                  </Badge>\n                )}\n              </Button>\n            </div>\n          </div>\n        </header>\n      )}\n\n      {/* Tablet/Desktop Header */}\n      {showHeader && !isMobile && (\n        <header className=\"sticky top-0 z-30 bg-white/95 backdrop-blur-sm border-b\">\n          <div className=\"container mx-auto px-6 py-4 flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <h1 className=\"text-xl font-bold text-gray-900\">HASIVU</h1>\n              <Badge variant=\"outline\" className=\"capitalize\">\n                {userRole} Portal\n              </Badge>\n            </div>\n            \n            <div className=\"flex items-center space-x-4\">\n              <Button variant=\"outline\" onClick={handleSearch}>\n                <Search className=\"h-4 w-4 mr-2\" />\n                Search\n              </Button>\n              \n              <Button variant=\"outline\" onClick={handleNotifications}>\n                <Bell className=\"h-4 w-4 mr-2\" />\n                Notifications\n                {notificationCount > 0 && (\n                  <Badge variant=\"destructive\" className=\"ml-2\">\n                    {notificationCount}\n                  </Badge>\n                )}\n              </Button>\n            </div>\n          </div>\n        </header>\n      )}\n\n      {/* Main Content */}\n      <main className={cn(\n        \"flex-1\",\n        isMobile && showHeader && \"pt-0\", // Header handles its own spacing\n        !isMobile && \"container mx-auto px-6 py-6\"\n      )}>\n        {children}\n      </main>\n\n      {/* Bottom Navigation - Mobile Only */}\n      {showBottomNav && isMobile && (\n        <BottomNavigation userRole={userRole} />\n      )}\n\n      {/* PWA Install Prompt */}\n      {showInstallPrompt && (\n        <PWAInstallPrompt\n          onInstall={handleInstallApp}\n          onDismiss={() => setShowInstallPrompt(false)}\n        />\n      )}\n    </div>\n  )\n}\n\n// HOC for automatic mobile layout wrapping\nexport const withMobileLayout = <P extends object>(\n  Component: React.ComponentType<P>,\n  layoutProps?: Partial<MobileLayoutProps>\n) => {\n  const WrappedComponent: React.FC<P & { mobileLayoutProps?: Partial<MobileLayoutProps> }> = (props) => {\n    const { mobileLayoutProps, ...componentProps } = props\n    \n    return (\n      <MobileLayout {...layoutProps} {...mobileLayoutProps}>\n        <Component {...(componentProps as P)} />\n      </MobileLayout>\n    )\n  }\n  \n  WrappedComponent.displayName = `withMobileLayout(${Component.displayName || Component.name})`\n  \n  return WrappedComponent\n}\n\nexport default MobileLayout","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/MobileNavSheet.tsx",["2292","2293","2294"],[],"\"use client\"\n\nimport React, { useState } from 'react'\nimport { useRouter, usePathname } from 'next/navigation'\nimport {\n  Sheet,\n  SheetContent,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n  SheetClose\n} from '@/components/ui/sheet'\nimport { Button } from '@/components/ui/button'\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'\nimport { Separator } from '@/components/ui/separator'\nimport { cn } from '@/lib/utils'\nimport {\n  Menu,\n  Home,\n  UtensilsCrossed,\n  Wallet,\n  QrCode,\n  User,\n  ShoppingCart,\n  Bell,\n  Clock,\n  Settings,\n  LogOut,\n  ChevronRight,\n  Star,\n  HelpCircle,\n  Shield,\n  BarChart3\n} from 'lucide-react'\n\ninterface NavigationSection {\n  title?: string\n  items: NavigationItem[]\n}\n\ninterface NavigationItem {\n  label: string\n  icon: React.ElementType\n  href?: string\n  action?: () => void\n  badge?: number\n  description?: string\n  chevron?: boolean\n}\n\ninterface MobileNavSheetProps {\n  userRole?: 'student' | 'parent' | 'admin'\n  user?: {\n    name: string\n    email: string\n    avatar?: string\n    id: string\n  }\n  onLogout?: () => void\n  className?: string\n}\n\nconst navigationSections = {\n  student: [\n    {\n      items: [\n        {\n          label: 'Dashboard',\n          icon: Home,\n          href: '/student',\n          description: 'View your meal summary'\n        },\n        {\n          label: 'Order Food',\n          icon: UtensilsCrossed,\n          href: '/student/order',\n          description: 'Browse and order meals'\n        },\n        {\n          label: 'My Cart',\n          icon: ShoppingCart,\n          href: '/student/cart',\n          badge: 0\n        },\n        {\n          label: 'Wallet',\n          icon: Wallet,\n          href: '/student/wallet',\n          description: 'Check balance and top up'\n        },\n        {\n          label: 'Scan RFID',\n          icon: QrCode,\n          href: '/student/scan',\n          description: 'Scan for meal pickup'\n        }\n      ]\n    },\n    {\n      title: 'Account',\n      items: [\n        {\n          label: 'Order History',\n          icon: Clock,\n          href: '/student/history',\n          chevron: true\n        },\n        {\n          label: 'Notifications',\n          icon: Bell,\n          href: '/student/notifications',\n          badge: 3,\n          chevron: true\n        },\n        {\n          label: 'Profile Settings',\n          icon: User,\n          href: '/student/profile',\n          chevron: true\n        }\n      ]\n    },\n    {\n      title: 'Support',\n      items: [\n        {\n          label: 'Help & FAQ',\n          icon: HelpCircle,\n          href: '/help',\n          chevron: true\n        },\n        {\n          label: 'Rate App',\n          icon: Star,\n          action: () => {\n            // Handle app rating\n            console.log('Rate app')\n          },\n          chevron: true\n        }\n      ]\n    }\n  ] as NavigationSection[],\n  parent: [\n    {\n      items: [\n        {\n          label: 'Dashboard',\n          icon: Home,\n          href: '/parent',\n          description: 'View children\\'s meal activity'\n        },\n        {\n          label: 'Children\\'s Orders',\n          icon: UtensilsCrossed,\n          href: '/parent/orders',\n          description: 'Manage meal orders'\n        },\n        {\n          label: 'Family Wallet',\n          icon: Wallet,\n          href: '/parent/wallet',\n          description: 'Manage family balance'\n        },\n        {\n          label: 'Order History',\n          icon: Clock,\n          href: '/parent/history',\n          description: 'View past orders'\n        }\n      ]\n    },\n    {\n      title: 'Account',\n      items: [\n        {\n          label: 'Notifications',\n          icon: Bell,\n          href: '/parent/notifications',\n          badge: 5,\n          chevron: true\n        },\n        {\n          label: 'Profile Settings',\n          icon: User,\n          href: '/parent/profile',\n          chevron: true\n        },\n        {\n          label: 'Children Management',\n          icon: User,\n          href: '/parent/children',\n          chevron: true\n        }\n      ]\n    },\n    {\n      title: 'Support',\n      items: [\n        {\n          label: 'Help & FAQ',\n          icon: HelpCircle,\n          href: '/help',\n          chevron: true\n        },\n        {\n          label: 'Privacy Policy',\n          icon: Shield,\n          href: '/privacy',\n          chevron: true\n        }\n      ]\n    }\n  ] as NavigationSection[],\n  admin: [\n    {\n      items: [\n        {\n          label: 'Dashboard',\n          icon: Home,\n          href: '/admin',\n          description: 'School overview and analytics'\n        },\n        {\n          label: 'Order Management',\n          icon: UtensilsCrossed,\n          href: '/admin/orders',\n          badge: 12,\n          description: 'Manage all orders'\n        },\n        {\n          label: 'Menu Management',\n          icon: UtensilsCrossed,\n          href: '/admin/menu',\n          description: 'Update daily menus'\n        },\n        {\n          label: 'Reports & Analytics',\n          icon: BarChart3,\n          href: '/admin/reports',\n          description: 'View detailed reports'\n        }\n      ]\n    },\n    {\n      title: 'Management',\n      items: [\n        {\n          label: 'User Management',\n          icon: User,\n          href: '/admin/users',\n          chevron: true\n        },\n        {\n          label: 'Wallet Management',\n          icon: Wallet,\n          href: '/admin/wallets',\n          chevron: true\n        },\n        {\n          label: 'System Settings',\n          icon: Settings,\n          href: '/admin/settings',\n          chevron: true\n        }\n      ]\n    },\n    {\n      title: 'Support',\n      items: [\n        {\n          label: 'Support Tickets',\n          icon: HelpCircle,\n          href: '/admin/support',\n          badge: 2,\n          chevron: true\n        },\n        {\n          label: 'System Health',\n          icon: Shield,\n          href: '/admin/health',\n          chevron: true\n        }\n      ]\n    }\n  ] as NavigationSection[]\n}\n\nexport const MobileNavSheet: React.FC<MobileNavSheetProps> = ({\n  userRole = 'student',\n  user,\n  onLogout,\n  className\n}) => {\n  const [open, setOpen] = useState(false)\n  const router = useRouter()\n  const pathname = usePathname()\n  \n  const sections = navigationSections[userRole]\n  \n  const handleNavigation = (href: string) => {\n    // Add haptic feedback\n    if ('vibrate' in navigator) {\n      navigator.vibrate(30)\n    }\n    router.push(href)\n    setOpen(false)\n  }\n  \n  const handleAction = (action: () => void) => {\n    action()\n    setOpen(false)\n  }\n  \n  const isActive = (href?: string) => {\n    if (!href) return false\n    return pathname === href || pathname.startsWith(href + '/')\n  }\n  \n  return (\n    <Sheet open={open} onOpenChange={setOpen}>\n      <SheetTrigger asChild>\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          className={cn(\n            \"p-2 h-auto w-auto md:hidden\",\n            \"focus:ring-2 focus:ring-primary focus:ring-offset-2\",\n            className\n          )}\n          aria-label=\"Open navigation menu\"\n        >\n          <Menu className=\"h-5 w-5\" />\n        </Button>\n      </SheetTrigger>\n      \n      <SheetContent side=\"left\" className=\"w-[300px] p-0 overflow-y-auto\">\n        <div className=\"flex flex-col h-full\">\n          {/* Header with user info */}\n          <SheetHeader className=\"p-6 pb-4 bg-primary/5\">\n            <div className=\"flex items-center space-x-3\">\n              <Avatar className=\"h-12 w-12\">\n                <AvatarImage src={user?.avatar} alt={user?.name} />\n                <AvatarFallback className=\"bg-primary text-primary-foreground\">\n                  {user?.name?.charAt(0) || 'U'}\n                </AvatarFallback>\n              </Avatar>\n              <div className=\"flex-1 text-left\">\n                <SheetTitle className=\"text-base font-semibold\">\n                  {user?.name || 'User'}\n                </SheetTitle>\n                <p className=\"text-sm text-muted-foreground\">\n                  {user?.email || 'user@example.com'}\n                </p>\n                <p className=\"text-xs text-muted-foreground capitalize\">\n                  {userRole}\n                </p>\n              </div>\n            </div>\n          </SheetHeader>\n          \n          {/* Navigation sections */}\n          <div className=\"flex-1 px-6 py-4\">\n            {sections.map((section, sectionIndex) => (\n              <div key={sectionIndex} className=\"mb-6 last:mb-0\">\n                {section.title && (\n                  <h3 className=\"text-sm font-medium text-muted-foreground mb-3 px-2\">\n                    {section.title}\n                  </h3>\n                )}\n                \n                <nav className=\"space-y-1\">\n                  {section.items.map((item, itemIndex) => {\n                    const Icon = item.icon\n                    const active = isActive(item.href)\n                    \n                    return (\n                      <button\n                        key={itemIndex}\n                        onClick={() => item.href ? handleNavigation(item.href) : item.action && handleAction(item.action)}\n                        className={cn(\n                          \"w-full flex items-center justify-between p-3 rounded-lg text-left transition-all duration-200\",\n                          \"focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2\",\n                          \"active:scale-[0.98] active:bg-primary/20\",\n                          active\n                            ? \"bg-primary/10 text-primary border border-primary/20\"\n                            : \"hover:bg-muted/50 text-foreground\"\n                        )}\n                      >\n                        <div className=\"flex items-center space-x-3 flex-1\">\n                          <div className=\"relative\">\n                            <Icon className={cn(\n                              \"h-5 w-5 transition-colors duration-200\",\n                              active ? \"text-primary\" : \"text-muted-foreground\"\n                            )} />\n                            {item.badge && item.badge > 0 && (\n                              <span className=\"absolute -top-1 -right-1 flex h-4 w-4 items-center justify-center rounded-full bg-destructive text-[10px] font-medium text-destructive-foreground\">\n                                {item.badge > 9 ? '9+' : item.badge}\n                              </span>\n                            )}\n                          </div>\n                          \n                          <div className=\"flex-1\">\n                            <div className={cn(\n                              \"font-medium text-sm transition-colors duration-200\",\n                              active ? \"text-primary\" : \"text-foreground\"\n                            )}>\n                              {item.label}\n                            </div>\n                            {item.description && (\n                              <div className=\"text-xs text-muted-foreground mt-0.5\">\n                                {item.description}\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                        \n                        {item.chevron && (\n                          <ChevronRight className={cn(\n                            \"h-4 w-4 transition-colors duration-200\",\n                            active ? \"text-primary\" : \"text-muted-foreground\"\n                          )} />\n                        )}\n                      </button>\n                    )\n                  })}\n                </nav>\n              </div>\n            ))}\n          </div>\n          \n          {/* Footer with logout */}\n          <div className=\"p-6 pt-0 border-t\">\n            <Button\n              variant=\"ghost\"\n              onClick={() => {\n                onLogout?.()\n                setOpen(false)\n              }}\n              className=\"w-full justify-start p-3 text-destructive hover:text-destructive hover:bg-destructive/10\"\n            >\n              <LogOut className=\"h-5 w-5 mr-3\" />\n              <span className=\"font-medium\">Sign Out</span>\n            </Button>\n          </div>\n        </div>\n      </SheetContent>\n    </Sheet>\n  )\n}\n\nexport default MobileNavSheet","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/MobileNavigation.tsx",["2295","2296","2297"],[],"'use client';\n\n/**\n * MobileNavigation - Bottom Tab Navigation\n * Mobile-optimized navigation with touch-friendly targets and haptic feedback\n */\n\nimport React from 'react';\nimport { useRouter } from 'next/navigation';\nimport { motion } from 'framer-motion';\nimport { \n  Home, \n  UtensilsCrossed, \n  ShoppingCart, \n  Smartphone, \n  Wallet, \n  User,\n  Bell,\n  History\n} from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { Badge } from '@/components/ui/badge';\n\ninterface NavigationItem {\n  id: string;\n  label: string;\n  icon: React.ComponentType<{ className?: string }>;\n  href: string;\n  badge?: number;\n  disabled?: boolean;\n}\n\ninterface MobileNavigationProps {\n  activeTab: string;\n  onTabChange: (tab: string) => void;\n  cartItemCount?: number;\n  notificationCount?: number;\n  className?: string;\n}\n\nexport const MobileNavigation: React.FC<MobileNavigationProps> = ({\n  activeTab,\n  onTabChange,\n  cartItemCount = 0,\n  notificationCount = 0,\n  className\n}) => {\n  const router = useRouter();\n\n  const navigationItems: NavigationItem[] = [\n    {\n      id: 'home',\n      label: 'Home',\n      icon: Home,\n      href: '/',\n    },\n    {\n      id: 'menu',\n      label: 'Menu',\n      icon: UtensilsCrossed,\n      href: '/menu',\n    },\n    {\n      id: 'cart',\n      label: 'Cart',\n      icon: ShoppingCart,\n      href: '/cart',\n      badge: cartItemCount > 0 ? cartItemCount : undefined,\n    },\n    {\n      id: 'scan',\n      label: 'Scan',\n      icon: Smartphone,\n      href: '/scan',\n    },\n    {\n      id: 'profile',\n      label: 'Profile',\n      icon: User,\n      href: '/profile',\n      badge: notificationCount > 0 ? notificationCount : undefined,\n    }\n  ];\n\n  const handleTabPress = (item: NavigationItem) => {\n    if (item.disabled) return;\n\n    // Haptic feedback for supported devices\n    if ('vibrate' in navigator && navigator.vibrate) {\n      navigator.vibrate(10); // Short haptic feedback\n    }\n\n    onTabChange(item.id);\n    \n    // Navigate if href is different from current route\n    if (router.asPath !== item.href) {\n      router.push(item.href);\n    }\n  };\n\n  return (\n    <nav \n      className={cn(\n        'fixed bottom-0 left-0 right-0 z-50',\n        'bg-white border-t border-gray-200',\n        'safe-area-inset-bottom',\n        'md:hidden', // Hide on desktop\n        className\n      )}\n    >\n      {/* Navigation Background with blur effect */}\n      <div className=\"absolute inset-0 bg-white/90 backdrop-blur-md\" />\n      \n      <div className=\"relative px-2 py-1\">\n        <div className=\"flex items-center justify-around\">\n          {navigationItems.map((item) => {\n            const Icon = item.icon;\n            const isActive = activeTab === item.id;\n            \n            return (\n              <button\n                key={item.id}\n                onClick={() => handleTabPress(item)}\n                disabled={item.disabled}\n                className={cn(\n                  'flex flex-col items-center justify-center',\n                  'min-h-[48px] min-w-[48px] p-2',\n                  'rounded-lg transition-all duration-200',\n                  'focus:outline-none focus:ring-2 focus:ring-primary focus:ring-opacity-50',\n                  'disabled:opacity-50 disabled:cursor-not-allowed',\n                  'active:scale-95', // Touch feedback\n                  isActive \n                    ? 'text-primary bg-primary/10' \n                    : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'\n                )}\n                aria-label={item.label}\n                role=\"tab\"\n                aria-selected={isActive}\n              >\n                <div className=\"relative\">\n                  <Icon \n                    className={cn(\n                      'h-5 w-5 transition-all duration-200',\n                      isActive ? 'scale-110' : ''\n                    )} \n                  />\n                  \n                  {/* Badge */}\n                  {item.badge && (\n                    <motion.div\n                      initial={{ scale: 0 }}\n                      animate={{ scale: 1 }}\n                      className=\"absolute -top-1 -right-1\"\n                    >\n                      <Badge \n                        variant=\"destructive\" \n                        className={cn(\n                          'h-4 w-4 p-0 text-xs flex items-center justify-center',\n                          'min-w-[16px] rounded-full',\n                          item.badge > 99 ? 'px-1' : ''\n                        )}\n                      >\n                        {item.badge > 99 ? '99+' : item.badge}\n                      </Badge>\n                    </motion.div>\n                  )}\n                </div>\n                \n                {/* Label */}\n                <span className={cn(\n                  'text-xs font-medium mt-1 transition-all duration-200',\n                  isActive ? 'text-primary font-semibold' : 'text-gray-600'\n                )}>\n                  {item.label}\n                </span>\n\n                {/* Active indicator */}\n                {isActive && (\n                  <motion.div\n                    layoutId=\"activeTab\"\n                    className=\"absolute -top-0.5 left-1/2 transform -translate-x-1/2\"\n                    initial={false}\n                    transition={{ type: \"spring\", stiffness: 500, damping: 30 }}\n                  >\n                    <div className=\"w-8 h-1 bg-primary rounded-full\" />\n                  </motion.div>\n                )}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default MobileNavigation;","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/MobileOptimizations.tsx",["2298","2299","2300","2301","2302","2303","2304","2305","2306","2307","2308","2309","2310","2311","2312","2313"],[],"\"use client\"\n\nimport React, { useState, useEffect, useCallback, useMemo, useRef, ReactNode } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Card } from '@/components/ui/card'\nimport { Skeleton } from '@/components/ui/skeleton'\nimport { cn } from '@/lib/utils'\nimport { \n  Loader2, \n  Wifi, \n  WifiOff, \n  Battery, \n  Smartphone,\n  Monitor,\n  Sun,\n  Moon,\n  Volume2,\n  VolumeX,\n  Vibrate,\n  Accessibility,\n  Eye,\n  Contrast\n} from 'lucide-react'\n\n// Performance monitoring hooks\nexport const usePerformanceMonitor = () => {\n  const [metrics, setMetrics] = useState({\n    renderTime: 0,\n    memoryUsage: 0,\n    fps: 60,\n    batteryLevel: null as number | null,\n    networkSpeed: 'unknown' as string\n  })\n\n  useEffect(() => {\n    const measurePerformance = () => {\n      // Measure render time\n      const startTime = performance.now()\n      \n      requestIdleCallback(() => {\n        const renderTime = performance.now() - startTime\n        \n        setMetrics(prev => ({\n          ...prev,\n          renderTime\n        }))\n      })\n\n      // Memory usage (if available)\n      // @ts-ignore\n      if (performance.memory) {\n        // @ts-ignore\n        const memoryUsage = performance.memory.usedJSHeapSize / performance.memory.jsHeapSizeLimit\n        setMetrics(prev => ({\n          ...prev,\n          memoryUsage: memoryUsage * 100\n        }))\n      }\n\n      // Network connection info\n      // @ts-ignore\n      const connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection\n      if (connection) {\n        setMetrics(prev => ({\n          ...prev,\n          networkSpeed: connection.effectiveType || 'unknown'\n        }))\n      }\n\n      // Battery level\n      // @ts-ignore\n      if ('getBattery' in navigator) {\n        // @ts-ignore\n        navigator.getBattery().then(battery => {\n          setMetrics(prev => ({\n            ...prev,\n            batteryLevel: battery.level * 100\n          }))\n        })\n      }\n    }\n\n    measurePerformance()\n    const interval = setInterval(measurePerformance, 5000) // Every 5 seconds\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return metrics\n}\n\n// Battery optimization hook\nexport const useBatteryOptimization = () => {\n  const [isLowPowerMode, setIsLowPowerMode] = useState(false)\n  const [batteryInfo, setBatteryInfo] = useState({\n    level: null as number | null,\n    charging: false,\n    chargingTime: null as number | null,\n    dischargingTime: null as number | null\n  })\n\n  useEffect(() => {\n    const getBatteryInfo = async () => {\n      try {\n        // @ts-ignore\n        if ('getBattery' in navigator) {\n          // @ts-ignore\n          const battery = await navigator.getBattery()\n          \n          const updateBatteryInfo = () => {\n            setBatteryInfo({\n              level: battery.level * 100,\n              charging: battery.charging,\n              chargingTime: battery.chargingTime,\n              dischargingTime: battery.dischargingTime\n            })\n\n            // Enable low power mode if battery is below 20%\n            setIsLowPowerMode(battery.level < 0.2 && !battery.charging)\n          }\n\n          updateBatteryInfo()\n          \n          battery.addEventListener('levelchange', updateBatteryInfo)\n          battery.addEventListener('chargingchange', updateBatteryInfo)\n          \n          return () => {\n            battery.removeEventListener('levelchange', updateBatteryInfo)\n            battery.removeEventListener('chargingchange', updateBatteryInfo)\n          }\n        }\n      } catch (error) {\n        console.warn('Battery API not supported:', error)\n      }\n    }\n\n    getBatteryInfo()\n  }, [])\n\n  const enableLowPowerMode = useCallback(() => {\n    setIsLowPowerMode(true)\n  }, [])\n\n  const disableLowPowerMode = useCallback(() => {\n    setIsLowPowerMode(false)\n  }, [])\n\n  return {\n    isLowPowerMode,\n    batteryInfo,\n    enableLowPowerMode,\n    disableLowPowerMode\n  }\n}\n\n// Data usage optimization hook\nexport const useDataOptimization = () => {\n  const [isDataSaver, setIsDataSaver] = useState(false)\n  const [dataUsage, setDataUsage] = useState(0)\n  const [connectionType, setConnectionType] = useState('unknown')\n\n  useEffect(() => {\n    // @ts-ignore\n    const connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection\n    \n    if (connection) {\n      const updateConnectionInfo = () => {\n        setConnectionType(connection.effectiveType || 'unknown')\n        \n        // Enable data saver on slow connections\n        const slowConnections = ['slow-2g', '2g']\n        setIsDataSaver(slowConnections.includes(connection.effectiveType))\n      }\n\n      updateConnectionInfo()\n      connection.addEventListener('change', updateConnectionInfo)\n      \n      return () => {\n        connection.removeEventListener('change', updateConnectionInfo)\n      }\n    }\n  }, [])\n\n  const enableDataSaver = useCallback(() => {\n    setIsDataSaver(true)\n  }, [])\n\n  const disableDataSaver = useCallback(() => {\n    setIsDataSaver(false)\n  }, [])\n\n  return {\n    isDataSaver,\n    dataUsage,\n    connectionType,\n    enableDataSaver,\n    disableDataSaver\n  }\n}\n\n// Accessibility features hook\nexport const useAccessibility = () => {\n  const [settings, setSettings] = useState({\n    highContrast: false,\n    largeText: false,\n    reducedMotion: false,\n    screenReader: false,\n    voiceOver: false\n  })\n\n  useEffect(() => {\n    // Check for user preferences\n    const checkPreferences = () => {\n      setSettings(prev => ({\n        ...prev,\n        reducedMotion: window.matchMedia('(prefers-reduced-motion: reduce)').matches,\n        highContrast: window.matchMedia('(prefers-contrast: high)').matches\n      }))\n    }\n\n    checkPreferences()\n\n    // Listen for changes\n    const reducedMotionQuery = window.matchMedia('(prefers-reduced-motion: reduce)')\n    const highContrastQuery = window.matchMedia('(prefers-contrast: high)')\n\n    reducedMotionQuery.addEventListener('change', checkPreferences)\n    highContrastQuery.addEventListener('change', checkPreferences)\n\n    return () => {\n      reducedMotionQuery.removeEventListener('change', checkPreferences)\n      highContrastQuery.removeEventListener('change', checkPreferences)\n    }\n  }, [])\n\n  const toggleSetting = useCallback((setting: keyof typeof settings) => {\n    setSettings(prev => ({\n      ...prev,\n      [setting]: !prev[setting]\n    }))\n  }, [])\n\n  return {\n    settings,\n    toggleSetting\n  }\n}\n\n// Optimized Image Component\ninterface OptimizedImageProps {\n  src: string\n  alt: string\n  width?: number\n  height?: number\n  className?: string\n  loading?: 'lazy' | 'eager'\n  priority?: boolean\n  quality?: number\n  placeholder?: 'blur' | 'empty'\n}\n\nexport const OptimizedImage: React.FC<OptimizedImageProps> = ({\n  src,\n  alt,\n  width,\n  height,\n  className,\n  loading = 'lazy',\n  priority = false,\n  quality = 75,\n  placeholder = 'empty'\n}) => {\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [error, setError] = useState(false)\n  const { isDataSaver } = useDataOptimization()\n  const imgRef = useRef<HTMLImageElement>(null)\n\n  // Generate optimized src based on device and connection\n  const optimizedSrc = useMemo(() => {\n    const params = new URLSearchParams()\n    \n    if (width) params.append('w', width.toString())\n    if (height) params.append('h', height.toString())\n    \n    // Reduce quality for data saver mode\n    const adjustedQuality = isDataSaver ? Math.min(quality, 50) : quality\n    params.append('q', adjustedQuality.toString())\n    \n    // Use WebP format if supported\n    if (typeof window !== 'undefined') {\n      const canvas = document.createElement('canvas')\n      const webpSupported = canvas.toDataURL('image/webp').indexOf('data:image/webp') === 0\n      if (webpSupported) {\n        params.append('f', 'webp')\n      }\n    }\n\n    return `${src}?${params.toString()}`\n  }, [src, width, height, quality, isDataSaver])\n\n  const handleLoad = useCallback(() => {\n    setIsLoaded(true)\n  }, [])\n\n  const handleError = useCallback(() => {\n    setError(true)\n  }, [])\n\n  // Intersection Observer for lazy loading\n  useEffect(() => {\n    if (loading === 'eager' || priority) return\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting && imgRef.current) {\n            imgRef.current.src = optimizedSrc\n            observer.unobserve(entry.target)\n          }\n        })\n      },\n      { rootMargin: '50px' }\n    )\n\n    if (imgRef.current) {\n      observer.observe(imgRef.current)\n    }\n\n    return () => {\n      if (imgRef.current) {\n        observer.unobserve(imgRef.current)\n      }\n    }\n  }, [loading, priority, optimizedSrc])\n\n  if (error) {\n    return (\n      <div className={cn(\"bg-gray-200 flex items-center justify-center\", className)}>\n        <span className=\"text-gray-500 text-sm\">Failed to load image</span>\n      </div>\n    )\n  }\n\n  return (\n    <div className={cn(\"relative overflow-hidden\", className)}>\n      {placeholder === 'blur' && !isLoaded && (\n        <div className=\"absolute inset-0 bg-gray-200 animate-pulse\" />\n      )}\n      \n      <img\n        ref={imgRef}\n        src={loading === 'eager' || priority ? optimizedSrc : undefined}\n        alt={alt}\n        width={width}\n        height={height}\n        loading={loading}\n        onLoad={handleLoad}\n        onError={handleError}\n        className={cn(\n          \"transition-opacity duration-300\",\n          isLoaded ? \"opacity-100\" : \"opacity-0\",\n          className\n        )}\n      />\n    </div>\n  )\n}\n\n// Performance Monitor Component\ninterface PerformanceMonitorProps {\n  className?: string\n}\n\nexport const PerformanceMonitor: React.FC<PerformanceMonitorProps> = ({ className }) => {\n  const metrics = usePerformanceMonitor()\n  const { batteryInfo } = useBatteryOptimization()\n  const { connectionType } = useDataOptimization()\n\n  return (\n    <Card className={cn(\"p-4\", className)}>\n      <h3 className=\"font-semibold mb-3 flex items-center\">\n        <Monitor className=\"h-4 w-4 mr-2\" />\n        Performance Monitor\n      </h3>\n      \n      <div className=\"grid grid-cols-2 gap-3 text-sm\">\n        <div className=\"flex justify-between\">\n          <span className=\"text-gray-600\">Render Time:</span>\n          <span className=\"font-mono\">{metrics.renderTime.toFixed(1)}ms</span>\n        </div>\n        \n        <div className=\"flex justify-between\">\n          <span className=\"text-gray-600\">Memory:</span>\n          <span className=\"font-mono\">{metrics.memoryUsage.toFixed(1)}%</span>\n        </div>\n        \n        <div className=\"flex justify-between\">\n          <span className=\"text-gray-600\">Network:</span>\n          <span className=\"font-mono uppercase\">{connectionType}</span>\n        </div>\n        \n        {batteryInfo.level && (\n          <div className=\"flex justify-between\">\n            <span className=\"text-gray-600\">Battery:</span>\n            <span className=\"font-mono\">{batteryInfo.level.toFixed(0)}%</span>\n          </div>\n        )}\n      </div>\n    </Card>\n  )\n}\n\n// Battery Optimization Component\ninterface BatteryOptimizationProps {\n  className?: string\n}\n\nexport const BatteryOptimization: React.FC<BatteryOptimizationProps> = ({ className }) => {\n  const { isLowPowerMode, batteryInfo, enableLowPowerMode, disableLowPowerMode } = useBatteryOptimization()\n\n  return (\n    <Card className={cn(\"p-4\", className)}>\n      <h3 className=\"font-semibold mb-3 flex items-center\">\n        <Battery className=\"h-4 w-4 mr-2\" />\n        Battery Optimization\n      </h3>\n      \n      <div className=\"space-y-3\">\n        {batteryInfo.level && (\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm text-gray-600\">Battery Level:</span>\n            <div className=\"flex items-center space-x-2\">\n              <div className={cn(\n                \"w-16 h-2 bg-gray-200 rounded-full overflow-hidden\",\n                batteryInfo.level < 20 && \"bg-red-100\"\n              )}>\n                <div \n                  className={cn(\n                    \"h-full transition-all duration-300\",\n                    batteryInfo.level < 20 ? \"bg-red-500\" : \"bg-green-500\"\n                  )}\n                  style={{ width: `${batteryInfo.level}%` }}\n                />\n              </div>\n              <span className=\"text-sm font-mono\">{batteryInfo.level.toFixed(0)}%</span>\n            </div>\n          </div>\n        )}\n        \n        <div className=\"flex items-center justify-between\">\n          <span className=\"text-sm text-gray-600\">Low Power Mode:</span>\n          <Button\n            variant={isLowPowerMode ? \"destructive\" : \"outline\"}\n            size=\"sm\"\n            onClick={isLowPowerMode ? disableLowPowerMode : enableLowPowerMode}\n          >\n            {isLowPowerMode ? \"Disable\" : \"Enable\"}\n          </Button>\n        </div>\n        \n        {isLowPowerMode && (\n          <div className=\"text-xs text-amber-600 bg-amber-50 p-2 rounded\">\n            Low power mode active: Reduced animations, slower background sync\n          </div>\n        )}\n      </div>\n    </Card>\n  )\n}\n\n// Data Saver Component\ninterface DataSaverProps {\n  className?: string\n}\n\nexport const DataSaver: React.FC<DataSaverProps> = ({ className }) => {\n  const { isDataSaver, connectionType, enableDataSaver, disableDataSaver } = useDataOptimization()\n\n  return (\n    <Card className={cn(\"p-4\", className)}>\n      <h3 className=\"font-semibold mb-3 flex items-center\">\n        <Wifi className=\"h-4 w-4 mr-2\" />\n        Data Optimization\n      </h3>\n      \n      <div className=\"space-y-3\">\n        <div className=\"flex items-center justify-between\">\n          <span className=\"text-sm text-gray-600\">Connection:</span>\n          <div className=\"flex items-center space-x-2\">\n            {connectionType === 'slow-2g' || connectionType === '2g' ? (\n              <WifiOff className=\"h-4 w-4 text-red-500\" />\n            ) : (\n              <Wifi className=\"h-4 w-4 text-green-500\" />\n            )}\n            <span className=\"text-sm font-mono uppercase\">{connectionType}</span>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center justify-between\">\n          <span className=\"text-sm text-gray-600\">Data Saver:</span>\n          <Button\n            variant={isDataSaver ? \"default\" : \"outline\"}\n            size=\"sm\"\n            onClick={isDataSaver ? disableDataSaver : enableDataSaver}\n          >\n            {isDataSaver ? \"Enabled\" : \"Enable\"}\n          </Button>\n        </div>\n        \n        {isDataSaver && (\n          <div className=\"text-xs text-blue-600 bg-blue-50 p-2 rounded\">\n            Data saver active: Compressed images, limited background sync\n          </div>\n        )}\n      </div>\n    </Card>\n  )\n}\n\n// Accessibility Settings Component\ninterface AccessibilitySettingsProps {\n  className?: string\n}\n\nexport const AccessibilitySettings: React.FC<AccessibilitySettingsProps> = ({ className }) => {\n  const { settings, toggleSetting } = useAccessibility()\n\n  const accessibilityOptions = [\n    {\n      key: 'highContrast' as const,\n      label: 'High Contrast',\n      icon: <Contrast className=\"h-4 w-4\" />,\n      description: 'Increase contrast for better visibility'\n    },\n    {\n      key: 'largeText' as const,\n      label: 'Large Text',\n      icon: <Eye className=\"h-4 w-4\" />,\n      description: 'Increase text size for better readability'\n    },\n    {\n      key: 'reducedMotion' as const,\n      label: 'Reduced Motion',\n      icon: <Smartphone className=\"h-4 w-4\" />,\n      description: 'Minimize animations and transitions'\n    },\n    {\n      key: 'voiceOver' as const,\n      label: 'Voice Over',\n      icon: <Volume2 className=\"h-4 w-4\" />,\n      description: 'Enable voice descriptions'\n    }\n  ]\n\n  return (\n    <Card className={cn(\"p-4\", className)}>\n      <h3 className=\"font-semibold mb-3 flex items-center\">\n        <Accessibility className=\"h-4 w-4 mr-2\" />\n        Accessibility\n      </h3>\n      \n      <div className=\"space-y-3\">\n        {accessibilityOptions.map((option) => (\n          <div key={option.key} className=\"flex items-center justify-between\">\n            <div className=\"flex items-start space-x-3\">\n              {option.icon}\n              <div>\n                <div className=\"text-sm font-medium\">{option.label}</div>\n                <div className=\"text-xs text-gray-600\">{option.description}</div>\n              </div>\n            </div>\n            \n            <Button\n              variant={settings[option.key] ? \"default\" : \"outline\"}\n              size=\"sm\"\n              onClick={() => toggleSetting(option.key)}\n            >\n              {settings[option.key] ? \"On\" : \"Off\"}\n            </Button>\n          </div>\n        ))}\n      </div>\n    </Card>\n  )\n}\n\n// Optimized Loading Skeleton\ninterface OptimizedSkeletonProps {\n  className?: string\n  lines?: number\n  showAvatar?: boolean\n  animate?: boolean\n}\n\nexport const OptimizedSkeleton: React.FC<OptimizedSkeletonProps> = ({\n  className,\n  lines = 3,\n  showAvatar = false,\n  animate = true\n}) => {\n  const { settings } = useAccessibility()\n  \n  // Disable animation if reduced motion is preferred\n  const shouldAnimate = animate && !settings.reducedMotion\n\n  return (\n    <div className={cn(\"space-y-3\", className)}>\n      <div className=\"flex items-start space-x-3\">\n        {showAvatar && (\n          <Skeleton \n            className={cn(\n              \"h-10 w-10 rounded-full\",\n              shouldAnimate && \"animate-pulse\"\n            )} \n          />\n        )}\n        <div className=\"flex-1 space-y-2\">\n          {Array.from({ length: lines }).map((_, i) => (\n            <Skeleton \n              key={i}\n              className={cn(\n                \"h-4\",\n                i === lines - 1 ? \"w-3/4\" : \"w-full\",\n                shouldAnimate && \"animate-pulse\"\n              )} \n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\n// Mobile Performance Dashboard\ninterface MobilePerformanceDashboardProps {\n  className?: string\n}\n\nexport const MobilePerformanceDashboard: React.FC<MobilePerformanceDashboardProps> = ({ className }) => {\n  return (\n    <div className={cn(\"space-y-4\", className)}>\n      <PerformanceMonitor />\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <BatteryOptimization />\n        <DataSaver />\n      </div>\n      \n      <AccessibilitySettings />\n    </div>\n  )\n}","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/MobilePushNotifications.tsx",["2314","2315","2316","2317","2318","2319","2320","2321","2322","2323","2324","2325","2326","2327","2328","2329","2330"],[],"\"use client\"\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Card } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Switch } from '@/components/ui/switch'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\nimport { cn } from '@/lib/utils'\nimport { \n  Bell, \n  BellOff,\n  AlertCircle,\n  CheckCircle,\n  Settings,\n  Clock,\n  MessageSquare,\n  ShoppingCart,\n  Wallet,\n  MapPin,\n  Loader2,\n  Volume2,\n  VolumeX,\n  Vibrate,\n  Smartphone,\n  X,\n  Check\n} from 'lucide-react'\n\n// Types for notifications\ninterface NotificationSettings {\n  enabled: boolean\n  orders: boolean\n  delivery: boolean\n  wallet: boolean\n  reminders: boolean\n  promotions: boolean\n  emergency: boolean\n  sound: boolean\n  vibration: boolean\n  quietHours: {\n    enabled: boolean\n    start: string\n    end: string\n  }\n}\n\ninterface PushNotification {\n  id: string\n  title: string\n  body: string\n  icon?: string\n  badge?: string\n  tag: string\n  timestamp: number\n  data?: any\n  actions?: Array<{\n    action: string\n    title: string\n    icon?: string\n  }>\n  silent: boolean\n  requireInteraction: boolean\n  vibrate?: number[]\n}\n\ninterface NotificationHistory {\n  id: string\n  notification: PushNotification\n  status: 'delivered' | 'clicked' | 'dismissed'\n  timestamp: number\n}\n\n// Default notification settings\nconst defaultSettings: NotificationSettings = {\n  enabled: false,\n  orders: true,\n  delivery: true,\n  wallet: true,\n  reminders: true,\n  promotions: false,\n  emergency: true,\n  sound: true,\n  vibration: true,\n  quietHours: {\n    enabled: false,\n    start: '22:00',\n    end: '07:00'\n  }\n}\n\n// Push notification hook\nexport const usePushNotifications = () => {\n  const [permission, setPermission] = useState<NotificationPermission>('default')\n  const [subscription, setSubscription] = useState<PushSubscription | null>(null)\n  const [settings, setSettings] = useState<NotificationSettings>(defaultSettings)\n  const [isSupported, setIsSupported] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [history, setHistory] = useState<NotificationHistory[]>([])\n\n  // Check browser support\n  useEffect(() => {\n    const checkSupport = () => {\n      const supported = \n        'Notification' in window && \n        'serviceWorker' in navigator && \n        'PushManager' in window\n\n      setIsSupported(supported)\n      \n      if (supported) {\n        setPermission(Notification.permission)\n        loadSettings()\n        loadHistory()\n      }\n    }\n\n    checkSupport()\n  }, [])\n\n  // Load settings from localStorage\n  const loadSettings = useCallback(() => {\n    try {\n      const stored = localStorage.getItem('hasivu-notification-settings')\n      if (stored) {\n        setSettings({ ...defaultSettings, ...JSON.parse(stored) })\n      }\n    } catch (error) {\n      console.error('Failed to load notification settings:', error)\n    }\n  }, [])\n\n  // Save settings to localStorage\n  const saveSettings = useCallback((newSettings: NotificationSettings) => {\n    try {\n      localStorage.setItem('hasivu-notification-settings', JSON.stringify(newSettings))\n      setSettings(newSettings)\n    } catch (error) {\n      console.error('Failed to save notification settings:', error)\n    }\n  }, [])\n\n  // Load notification history\n  const loadHistory = useCallback(() => {\n    try {\n      const stored = localStorage.getItem('hasivu-notification-history')\n      if (stored) {\n        const parsed = JSON.parse(stored)\n        setHistory(parsed.slice(-50)) // Keep last 50 notifications\n      }\n    } catch (error) {\n      console.error('Failed to load notification history:', error)\n    }\n  }, [])\n\n  // Save notification to history\n  const saveToHistory = useCallback((notification: PushNotification, status: 'delivered' | 'clicked' | 'dismissed') => {\n    const historyItem: NotificationHistory = {\n      id: `${notification.id}-${Date.now()}`,\n      notification,\n      status,\n      timestamp: Date.now()\n    }\n\n    setHistory(prev => {\n      const updated = [historyItem, ...prev].slice(0, 50)\n      try {\n        localStorage.setItem('hasivu-notification-history', JSON.stringify(updated))\n      } catch (error) {\n        console.error('Failed to save notification history:', error)\n      }\n      return updated\n    })\n  }, [])\n\n  // Request permission\n  const requestPermission = useCallback(async () => {\n    if (!isSupported) return false\n\n    setIsLoading(true)\n    \n    try {\n      const result = await Notification.requestPermission()\n      setPermission(result)\n      \n      if (result === 'granted') {\n        // Update settings\n        saveSettings({ ...settings, enabled: true })\n      }\n      \n      return result === 'granted'\n    } catch (error) {\n      console.error('Permission request failed:', error)\n      return false\n    } finally {\n      setIsLoading(false)\n    }\n  }, [isSupported, settings, saveSettings])\n\n  // Subscribe to push notifications\n  const subscribe = useCallback(async () => {\n    if (!isSupported || permission !== 'granted') return null\n\n    setIsLoading(true)\n\n    try {\n      const registration = await navigator.serviceWorker.ready\n      \n      // Check if already subscribed\n      const existingSubscription = await registration.pushManager.getSubscription()\n      if (existingSubscription) {\n        setSubscription(existingSubscription)\n        return existingSubscription\n      }\n\n      // Create new subscription\n      const newSubscription = await registration.pushManager.subscribe({\n        userVisibleOnly: true,\n        applicationServerKey: process.env.NEXT_PUBLIC_VAPID_PUBLIC_KEY\n      })\n\n      setSubscription(newSubscription)\n\n      // Send subscription to server\n      await fetch('/api/v1/notifications/subscribe', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          subscription: newSubscription.toJSON(),\n          settings\n        })\n      })\n\n      return newSubscription\n    } catch (error) {\n      console.error('Push subscription failed:', error)\n      return null\n    } finally {\n      setIsLoading(false)\n    }\n  }, [isSupported, permission, settings])\n\n  // Unsubscribe from push notifications\n  const unsubscribe = useCallback(async () => {\n    if (!subscription) return false\n\n    setIsLoading(true)\n\n    try {\n      await subscription.unsubscribe()\n      setSubscription(null)\n\n      // Notify server\n      await fetch('/api/v1/notifications/unsubscribe', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          endpoint: subscription.endpoint\n        })\n      })\n\n      // Update settings\n      saveSettings({ ...settings, enabled: false })\n\n      return true\n    } catch (error) {\n      console.error('Push unsubscription failed:', error)\n      return false\n    } finally {\n      setIsLoading(false)\n    }\n  }, [subscription, settings, saveSettings])\n\n  // Update notification settings\n  const updateSettings = useCallback(async (newSettings: Partial<NotificationSettings>) => {\n    const updated = { ...settings, ...newSettings }\n    saveSettings(updated)\n\n    // If subscribed, update server settings\n    if (subscription) {\n      try {\n        await fetch('/api/v1/notifications/settings', {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            endpoint: subscription.endpoint,\n            settings: updated\n          })\n        })\n      } catch (error) {\n        console.error('Failed to update server settings:', error)\n      }\n    }\n  }, [settings, subscription, saveSettings])\n\n  // Show local notification (for testing)\n  const showLocalNotification = useCallback(async (notification: Partial<PushNotification>) => {\n    if (permission !== 'granted') return false\n\n    try {\n      const notif = new Notification(notification.title || 'HASIVU Notification', {\n        body: notification.body || '',\n        icon: notification.icon || '/icons/icon-192x192.png',\n        badge: notification.badge || '/icons/badge-72x72.png',\n        tag: notification.tag || 'hasivu-local',\n        data: notification.data,\n        requireInteraction: notification.requireInteraction || false,\n        silent: notification.silent || false,\n        vibrate: notification.vibrate || (settings.vibration ? [100, 50, 100] : [])\n      })\n\n      // Handle notification events\n      notif.onclick = (event) => {\n        event.preventDefault()\n        notif.close()\n        \n        // Handle notification click\n        if (notification.data?.url) {\n          window.focus()\n          window.location.href = notification.data.url\n        }\n        \n        saveToHistory(notification as PushNotification, 'clicked')\n      }\n\n      notif.onclose = () => {\n        saveToHistory(notification as PushNotification, 'dismissed')\n      }\n\n      saveToHistory(notification as PushNotification, 'delivered')\n\n      return true\n    } catch (error) {\n      console.error('Local notification failed:', error)\n      return false\n    }\n  }, [permission, settings.vibration, saveToHistory])\n\n  // Check if in quiet hours\n  const isInQuietHours = useCallback(() => {\n    if (!settings.quietHours.enabled) return false\n\n    const now = new Date()\n    const currentTime = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`\n    \n    const { start, end } = settings.quietHours\n    \n    if (start <= end) {\n      return currentTime >= start && currentTime <= end\n    } else {\n      return currentTime >= start || currentTime <= end\n    }\n  }, [settings.quietHours])\n\n  return {\n    isSupported,\n    permission,\n    subscription,\n    settings,\n    history,\n    isLoading,\n    requestPermission,\n    subscribe,\n    unsubscribe,\n    updateSettings,\n    showLocalNotification,\n    isInQuietHours\n  }\n}\n\n// Notification Settings Component\ninterface NotificationSettingsProps {\n  className?: string\n}\n\nexport const NotificationSettings: React.FC<NotificationSettingsProps> = ({ className }) => {\n  const {\n    isSupported,\n    permission,\n    subscription,\n    settings,\n    isLoading,\n    requestPermission,\n    subscribe,\n    unsubscribe,\n    updateSettings\n  } = usePushNotifications()\n\n  const handleToggleNotifications = async () => {\n    if (subscription) {\n      await unsubscribe()\n    } else {\n      if (permission !== 'granted') {\n        const granted = await requestPermission()\n        if (!granted) return\n      }\n      await subscribe()\n    }\n  }\n\n  const handleSettingChange = (key: keyof NotificationSettings, value: boolean) => {\n    updateSettings({ [key]: value })\n  }\n\n  const handleQuietHoursChange = (field: 'enabled' | 'start' | 'end', value: boolean | string) => {\n    updateSettings({\n      quietHours: {\n        ...settings.quietHours,\n        [field]: value\n      }\n    })\n  }\n\n  if (!isSupported) {\n    return (\n      <Alert className={className}>\n        <AlertCircle className=\"h-4 w-4\" />\n        <AlertDescription>\n          Push notifications are not supported in this browser.\n        </AlertDescription>\n      </Alert>\n    )\n  }\n\n  return (\n    <Card className={cn(\"p-6\", className)}>\n      <div className=\"space-y-6\">\n        {/* Main Toggle */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            {subscription ? (\n              <Bell className=\"h-5 w-5 text-green-600\" />\n            ) : (\n              <BellOff className=\"h-5 w-5 text-gray-400\" />\n            )}\n            <div>\n              <h3 className=\"font-semibold\">Push Notifications</h3>\n              <p className=\"text-sm text-gray-600\">\n                {subscription ? 'Enabled' : 'Disabled'}\n              </p>\n            </div>\n          </div>\n          \n          <Button\n            onClick={handleToggleNotifications}\n            disabled={isLoading}\n            variant={subscription ? \"destructive\" : \"default\"}\n          >\n            {isLoading ? (\n              <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n            ) : subscription ? (\n              \"Disable\"\n            ) : (\n              \"Enable\"\n            )}\n          </Button>\n        </div>\n\n        {permission === 'denied' && (\n          <Alert>\n            <AlertCircle className=\"h-4 w-4\" />\n            <AlertDescription>\n              Notifications are blocked. Please enable them in your browser settings and refresh the page.\n            </AlertDescription>\n          </Alert>\n        )}\n\n        {/* Notification Categories */}\n        {subscription && (\n          <div className=\"space-y-4\">\n            <h4 className=\"font-medium\">Notification Types</h4>\n            \n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <ShoppingCart className=\"h-4 w-4 text-blue-600\" />\n                  <div>\n                    <div className=\"text-sm font-medium\">Order Updates</div>\n                    <div className=\"text-xs text-gray-600\">Order confirmation, preparation, ready for pickup</div>\n                  </div>\n                </div>\n                <Switch\n                  checked={settings.orders}\n                  onCheckedChange={(checked) => handleSettingChange('orders', checked)}\n                />\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <MapPin className=\"h-4 w-4 text-green-600\" />\n                  <div>\n                    <div className=\"text-sm font-medium\">Delivery Tracking</div>\n                    <div className=\"text-xs text-gray-600\">Live delivery updates and location sharing</div>\n                  </div>\n                </div>\n                <Switch\n                  checked={settings.delivery}\n                  onCheckedChange={(checked) => handleSettingChange('delivery', checked)}\n                />\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <Wallet className=\"h-4 w-4 text-purple-600\" />\n                  <div>\n                    <div className=\"text-sm font-medium\">Wallet & Payments</div>\n                    <div className=\"text-xs text-gray-600\">Low balance alerts, payment confirmations</div>\n                  </div>\n                </div>\n                <Switch\n                  checked={settings.wallet}\n                  onCheckedChange={(checked) => handleSettingChange('wallet', checked)}\n                />\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <Clock className=\"h-4 w-4 text-orange-600\" />\n                  <div>\n                    <div className=\"text-sm font-medium\">Meal Reminders</div>\n                    <div className=\"text-xs text-gray-600\">Lunch time reminders, menu updates</div>\n                  </div>\n                </div>\n                <Switch\n                  checked={settings.reminders}\n                  onCheckedChange={(checked) => handleSettingChange('reminders', checked)}\n                />\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <MessageSquare className=\"h-4 w-4 text-pink-600\" />\n                  <div>\n                    <div className=\"text-sm font-medium\">Promotions</div>\n                    <div className=\"text-xs text-gray-600\">Special offers, discounts, new menu items</div>\n                  </div>\n                </div>\n                <Switch\n                  checked={settings.promotions}\n                  onCheckedChange={(checked) => handleSettingChange('promotions', checked)}\n                />\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <AlertCircle className=\"h-4 w-4 text-red-600\" />\n                  <div>\n                    <div className=\"text-sm font-medium\">Emergency Alerts</div>\n                    <div className=\"text-xs text-gray-600\">School closures, safety alerts</div>\n                  </div>\n                </div>\n                <Switch\n                  checked={settings.emergency}\n                  onCheckedChange={(checked) => handleSettingChange('emergency', checked)}\n                  disabled // Emergency alerts should always be enabled\n                />\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Sound & Vibration Settings */}\n        {subscription && (\n          <div className=\"space-y-4\">\n            <h4 className=\"font-medium\">Sound & Vibration</h4>\n            \n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <Volume2 className=\"h-4 w-4\" />\n                  <span className=\"text-sm\">Sound</span>\n                </div>\n                <Switch\n                  checked={settings.sound}\n                  onCheckedChange={(checked) => handleSettingChange('sound', checked)}\n                />\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <Vibrate className=\"h-4 w-4\" />\n                  <span className=\"text-sm\">Vibration</span>\n                </div>\n                <Switch\n                  checked={settings.vibration}\n                  onCheckedChange={(checked) => handleSettingChange('vibration', checked)}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Quiet Hours */}\n        {subscription && (\n          <div className=\"space-y-4\">\n            <h4 className=\"font-medium\">Quiet Hours</h4>\n            \n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm\">Enable quiet hours</span>\n                <Switch\n                  checked={settings.quietHours.enabled}\n                  onCheckedChange={(checked) => handleQuietHoursChange('enabled', checked)}\n                />\n              </div>\n\n              {settings.quietHours.enabled && (\n                <div className=\"grid grid-cols-2 gap-3\">\n                  <div>\n                    <label className=\"text-xs text-gray-600\">Start</label>\n                    <input\n                      type=\"time\"\n                      value={settings.quietHours.start}\n                      onChange={(e) => handleQuietHoursChange('start', e.target.value)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"text-xs text-gray-600\">End</label>\n                    <input\n                      type=\"time\"\n                      value={settings.quietHours.end}\n                      onChange={(e) => handleQuietHoursChange('end', e.target.value)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </Card>\n  )\n}\n\n// Notification History Component\ninterface NotificationHistoryProps {\n  className?: string\n  limit?: number\n}\n\nexport const NotificationHistory: React.FC<NotificationHistoryProps> = ({ \n  className, \n  limit = 10 \n}) => {\n  const { history } = usePushNotifications()\n\n  const getStatusIcon = (status: NotificationHistory['status']) => {\n    switch (status) {\n      case 'delivered':\n        return <Bell className=\"h-4 w-4 text-blue-500\" />\n      case 'clicked':\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" />\n      case 'dismissed':\n        return <X className=\"h-4 w-4 text-gray-500\" />\n      default:\n        return <Bell className=\"h-4 w-4 text-gray-500\" />\n    }\n  }\n\n  const getStatusColor = (status: NotificationHistory['status']) => {\n    switch (status) {\n      case 'delivered':\n        return 'bg-blue-50 text-blue-800'\n      case 'clicked':\n        return 'bg-green-50 text-green-800'\n      case 'dismissed':\n        return 'bg-gray-50 text-gray-800'\n      default:\n        return 'bg-gray-50 text-gray-800'\n    }\n  }\n\n  const displayHistory = history.slice(0, limit)\n\n  if (displayHistory.length === 0) {\n    return (\n      <Card className={cn(\"p-6\", className)}>\n        <div className=\"text-center text-gray-500\">\n          <Bell className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\n          <p className=\"text-sm\">No notification history</p>\n        </div>\n      </Card>\n    )\n  }\n\n  return (\n    <Card className={cn(\"p-4\", className)}>\n      <h3 className=\"font-semibold mb-4\">Recent Notifications</h3>\n      \n      <div className=\"space-y-3\">\n        {displayHistory.map((item) => (\n          <div key={item.id} className=\"flex items-start space-x-3 p-3 bg-gray-50 rounded-lg\">\n            <div className=\"flex-shrink-0\">\n              {getStatusIcon(item.status)}\n            </div>\n            \n            <div className=\"flex-1 min-w-0\">\n              <div className=\"flex items-center justify-between\">\n                <h4 className=\"text-sm font-medium truncate\">\n                  {item.notification.title}\n                </h4>\n                <Badge className={cn(\"text-xs\", getStatusColor(item.status))}>\n                  {item.status}\n                </Badge>\n              </div>\n              \n              <p className=\"text-sm text-gray-600 mt-1\">\n                {item.notification.body}\n              </p>\n              \n              <div className=\"flex items-center justify-between mt-2\">\n                <span className=\"text-xs text-gray-500\">\n                  {new Date(item.timestamp).toLocaleString()}\n                </span>\n                \n                {item.notification.tag && (\n                  <Badge variant=\"outline\" className=\"text-xs\">\n                    {item.notification.tag}\n                  </Badge>\n                )}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      \n      {history.length > limit && (\n        <div className=\"text-center mt-4\">\n          <Button variant=\"ghost\" size=\"sm\">\n            View All ({history.length})\n          </Button>\n        </div>\n      )}\n    </Card>\n  )\n}\n\n// Test Notification Component\ninterface TestNotificationProps {\n  className?: string\n}\n\nexport const TestNotification: React.FC<TestNotificationProps> = ({ className }) => {\n  const { showLocalNotification, subscription } = usePushNotifications()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const testNotifications = [\n    {\n      title: 'Order Ready!',\n      body: 'Your lunch order #1234 is ready for pickup at the cafeteria.',\n      tag: 'order-ready',\n      data: { orderId: '1234', url: '/orders/1234' },\n      requireInteraction: true,\n      vibrate: [200, 100, 200]\n    },\n    {\n      title: 'Delivery Update',\n      body: 'Your meal delivery is 5 minutes away. Please be ready!',\n      tag: 'delivery-update',\n      data: { deliveryId: 'del456', url: '/delivery/del456' },\n      vibrate: [100, 50, 100]\n    },\n    {\n      title: 'Low Wallet Balance',\n      body: 'Your wallet balance is low (₹25). Please top up to continue ordering.',\n      tag: 'wallet-balance',\n      data: { balance: 25, url: '/wallet' },\n      vibrate: [50]\n    },\n    {\n      title: 'Lunch Reminder',\n      body: \"Don't forget to order your lunch! Today's special: Butter Chicken Rice.\",\n      tag: 'meal-reminder',\n      data: { url: '/menu' },\n      silent: true\n    }\n  ]\n\n  const handleTestNotification = async (notification: any) => {\n    if (!subscription) return\n\n    setIsLoading(true)\n    \n    try {\n      await showLocalNotification({\n        ...notification,\n        id: `test-${Date.now()}`\n      })\n    } catch (error) {\n      console.error('Test notification failed:', error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  if (!subscription) {\n    return (\n      <Alert className={className}>\n        <AlertCircle className=\"h-4 w-4\" />\n        <AlertDescription>\n          Enable push notifications to test notification delivery.\n        </AlertDescription>\n      </Alert>\n    )\n  }\n\n  return (\n    <Card className={cn(\"p-4\", className)}>\n      <h3 className=\"font-semibold mb-4\">Test Notifications</h3>\n      \n      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\n        {testNotifications.map((notification, index) => (\n          <Button\n            key={index}\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => handleTestNotification(notification)}\n            disabled={isLoading}\n            className=\"h-auto p-3 text-left justify-start\"\n          >\n            <div>\n              <div className=\"font-medium text-sm\">{notification.title}</div>\n              <div className=\"text-xs text-gray-600 mt-1\">\n                {notification.body.slice(0, 50)}...\n              </div>\n            </div>\n          </Button>\n        ))}\n      </div>\n    </Card>\n  )\n}","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/NativeFeatures.tsx",["2331","2332","2333","2334","2335","2336"],[],"\"use client\"\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Card } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { cn } from '@/lib/utils'\nimport { \n  MapPin, \n  Camera, \n  QrCode,\n  Navigation,\n  Locate,\n  AlertCircle,\n  CheckCircle,\n  Loader2,\n  X,\n  RotateCcw,\n  Zap,\n  Vibrate\n} from 'lucide-react'\n\n// Geolocation Hook with enhanced accuracy\nexport const useGeolocation = (enableHighAccuracy = true) => {\n  const [location, setLocation] = useState<{\n    latitude: number\n    longitude: number\n    accuracy: number\n    timestamp: number\n  } | null>(null)\n  const [error, setError] = useState<string | null>(null)\n  const [loading, setLoading] = useState(false)\n  const watchIdRef = useRef<number | null>(null)\n\n  const getCurrentPosition = useCallback(() => {\n    if (!navigator.geolocation) {\n      setError('Geolocation is not supported by this device')\n      return\n    }\n\n    setLoading(true)\n    setError(null)\n\n    const options: PositionOptions = {\n      enableHighAccuracy,\n      timeout: 10000,\n      maximumAge: 300000 // 5 minutes\n    }\n\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        setLocation({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n          accuracy: position.coords.accuracy,\n          timestamp: position.timestamp\n        })\n        setLoading(false)\n      },\n      (error) => {\n        let errorMessage = 'Unable to get your location'\n        \n        switch (error.code) {\n          case error.PERMISSION_DENIED:\n            errorMessage = 'Location access denied. Please enable location permissions in your browser settings.'\n            break\n          case error.POSITION_UNAVAILABLE:\n            errorMessage = 'Location information unavailable. Please check your GPS settings.'\n            break\n          case error.TIMEOUT:\n            errorMessage = 'Location request timed out. Please try again.'\n            break\n        }\n        \n        setError(errorMessage)\n        setLoading(false)\n      },\n      options\n    )\n  }, [enableHighAccuracy])\n\n  const startWatching = useCallback(() => {\n    if (!navigator.geolocation || watchIdRef.current !== null) return\n\n    const options: PositionOptions = {\n      enableHighAccuracy,\n      timeout: 10000,\n      maximumAge: 60000 // 1 minute\n    }\n\n    watchIdRef.current = navigator.geolocation.watchPosition(\n      (position) => {\n        setLocation({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n          accuracy: position.coords.accuracy,\n          timestamp: position.timestamp\n        })\n      },\n      (error) => {\n        console.error('Geolocation watch error:', error)\n      },\n      options\n    )\n  }, [enableHighAccuracy])\n\n  const stopWatching = useCallback(() => {\n    if (watchIdRef.current !== null) {\n      navigator.geolocation.clearWatch(watchIdRef.current)\n      watchIdRef.current = null\n    }\n  }, [])\n\n  useEffect(() => {\n    return () => {\n      stopWatching()\n    }\n  }, [stopWatching])\n\n  return {\n    location,\n    error,\n    loading,\n    getCurrentPosition,\n    startWatching,\n    stopWatching\n  }\n}\n\n// Delivery Tracking Component\ninterface DeliveryTrackingProps {\n  orderID: string\n  deliveryLocation: {\n    latitude: number\n    longitude: number\n  }\n  onLocationUpdate?: (location: { latitude: number; longitude: number }) => void\n  className?: string\n}\n\nexport const DeliveryTracking: React.FC<DeliveryTrackingProps> = ({\n  orderID,\n  deliveryLocation,\n  onLocationUpdate,\n  className\n}) => {\n  const { location, error, loading, getCurrentPosition, startWatching, stopWatching } = useGeolocation(true)\n  const [isTracking, setIsTracking] = useState(false)\n  const [distance, setDistance] = useState<number | null>(null)\n  const [estimatedTime, setEstimatedTime] = useState<number | null>(null)\n\n  // Calculate distance between two coordinates using Haversine formula\n  const calculateDistance = useCallback((lat1: number, lon1: number, lat2: number, lon2: number) => {\n    const R = 6371 // Earth's radius in kilometers\n    const dLat = (lat2 - lat1) * Math.PI / 180\n    const dLon = (lon2 - lon1) * Math.PI / 180\n    const a = \n      Math.sin(dLat/2) * Math.sin(dLat/2) +\n      Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * \n      Math.sin(dLon/2) * Math.sin(dLon/2)\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a))\n    return R * c\n  }, [])\n\n  useEffect(() => {\n    if (location && deliveryLocation) {\n      const dist = calculateDistance(\n        location.latitude, \n        location.longitude, \n        deliveryLocation.latitude, \n        deliveryLocation.longitude\n      )\n      setDistance(dist)\n      \n      // Estimate delivery time (assuming 5 km/h walking speed)\n      setEstimatedTime(Math.round((dist / 5) * 60)) // in minutes\n      \n      onLocationUpdate?.(location)\n    }\n  }, [location, deliveryLocation, calculateDistance, onLocationUpdate])\n\n  const toggleTracking = useCallback(() => {\n    if (isTracking) {\n      stopWatching()\n      setIsTracking(false)\n    } else {\n      startWatching()\n      setIsTracking(true)\n      \n      // Haptic feedback\n      if ('vibrate' in navigator) {\n        navigator.vibrate(50)\n      }\n    }\n  }, [isTracking, startWatching, stopWatching])\n\n  return (\n    <Card className={cn(\"p-4 bg-gradient-to-br from-blue-50 to-purple-50\", className)}>\n      <div className=\"space-y-4\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            <MapPin className=\"h-5 w-5 text-blue-600\" />\n            <span className=\"font-semibold\">Delivery Tracking</span>\n          </div>\n          <Badge variant=\"outline\" className=\"text-xs\">\n            Order #{orderID.slice(-6)}\n          </Badge>\n        </div>\n\n        {error && (\n          <div className=\"flex items-center space-x-2 p-3 bg-red-50 rounded-lg\">\n            <AlertCircle className=\"h-4 w-4 text-red-600\" />\n            <p className=\"text-sm text-red-700\">{error}</p>\n          </div>\n        )}\n\n        {location && distance !== null && (\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"text-center p-3 bg-white/70 rounded-lg\">\n              <p className=\"text-2xl font-bold text-blue-600\">\n                {distance < 1 ? `${Math.round(distance * 1000)}m` : `${distance.toFixed(1)}km`}\n              </p>\n              <p className=\"text-xs text-gray-600\">Distance</p>\n            </div>\n            <div className=\"text-center p-3 bg-white/70 rounded-lg\">\n              <p className=\"text-2xl font-bold text-green-600\">\n                {estimatedTime ? `${estimatedTime}min` : '--'}\n              </p>\n              <p className=\"text-xs text-gray-600\">ETA</p>\n            </div>\n          </div>\n        )}\n\n        <div className=\"flex space-x-2\">\n          <Button\n            onClick={getCurrentPosition}\n            disabled={loading}\n            className=\"flex-1\"\n            size=\"sm\"\n          >\n            {loading ? (\n              <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n            ) : (\n              <Locate className=\"h-4 w-4 mr-2\" />\n            )}\n            Get Location\n          </Button>\n          \n          <Button\n            onClick={toggleTracking}\n            variant={isTracking ? \"destructive\" : \"outline\"}\n            size=\"sm\"\n            className=\"flex-1\"\n          >\n            {isTracking ? (\n              <>\n                <X className=\"h-4 w-4 mr-2\" />\n                Stop Tracking\n              </>\n            ) : (\n              <>\n                <Navigation className=\"h-4 w-4 mr-2\" />\n                Start Tracking\n              </>\n            )}\n          </Button>\n        </div>\n\n        {location && (\n          <div className=\"text-xs text-gray-500 text-center\">\n            Accuracy: {Math.round(location.accuracy)}m\n          </div>\n        )}\n      </div>\n    </Card>\n  )\n}\n\n// Camera Component for QR/Barcode Scanning\ninterface CameraScannerProps {\n  onScanResult: (result: string, type: 'qr' | 'barcode' | 'rfid') => void\n  onError?: (error: string) => void\n  scanType?: 'qr' | 'barcode' | 'rfid' | 'all'\n  className?: string\n}\n\nexport const CameraScanner: React.FC<CameraScannerProps> = ({\n  onScanResult,\n  onError,\n  scanType = 'all',\n  className\n}) => {\n  const [isActive, setIsActive] = useState(false)\n  const [hasPermission, setHasPermission] = useState<boolean | null>(null)\n  const [error, setError] = useState<string | null>(null)\n  const [flashOn, setFlashOn] = useState(false)\n  const [facingMode, setFacingMode] = useState<'user' | 'environment'>('environment')\n  \n  const videoRef = useRef<HTMLVideoElement>(null)\n  const streamRef = useRef<MediaStream | null>(null)\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const animationRef = useRef<number>()\n\n  const startCamera = useCallback(async () => {\n    try {\n      setError(null)\n      \n      const constraints: MediaStreamConstraints = {\n        video: {\n          facingMode,\n          width: { ideal: 1280 },\n          height: { ideal: 720 },\n          frameRate: { ideal: 30 }\n        }\n      }\n\n      // Add torch/flash support if available\n      if (flashOn && 'mediaDevices' in navigator && 'getDisplayMedia' in navigator.mediaDevices) {\n        constraints.video = {\n          ...constraints.video,\n          // @ts-ignore - advanced constraints may not be typed\n          advanced: [{ torch: true }]\n        }\n      }\n\n      const stream = await navigator.mediaDevices.getUserMedia(constraints)\n      streamRef.current = stream\n      \n      if (videoRef.current) {\n        videoRef.current.srcObject = stream\n        videoRef.current.play()\n      }\n      \n      setHasPermission(true)\n      setIsActive(true)\n      \n      // Start scanning process\n      startScanning()\n      \n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Camera access denied'\n      setError(errorMessage)\n      setHasPermission(false)\n      onError?.(errorMessage)\n    }\n  }, [facingMode, flashOn, onError])\n\n  const stopCamera = useCallback(() => {\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop())\n      streamRef.current = null\n    }\n    \n    if (animationRef.current) {\n      cancelAnimationFrame(animationRef.current)\n    }\n    \n    setIsActive(false)\n  }, [])\n\n  const switchCamera = useCallback(() => {\n    setFacingMode(prev => prev === 'user' ? 'environment' : 'user')\n    if (isActive) {\n      stopCamera()\n      setTimeout(() => {\n        startCamera()\n      }, 100)\n    }\n  }, [isActive, stopCamera, startCamera])\n\n  const toggleFlash = useCallback(async () => {\n    if (streamRef.current) {\n      const videoTrack = streamRef.current.getVideoTracks()[0]\n      \n      try {\n        // Check if torch is supported\n        const capabilities = videoTrack.getCapabilities()\n        \n        if ('torch' in capabilities) {\n          await videoTrack.applyConstraints({\n            advanced: [{ torch: !flashOn }]\n          })\n          setFlashOn(!flashOn)\n        }\n      } catch (err) {\n        console.warn('Flash/torch not supported:', err)\n      }\n    }\n  }, [flashOn])\n\n  // Mock scanning function - in production, integrate with a real barcode/QR scanner library\n  const startScanning = useCallback(() => {\n    if (!videoRef.current || !canvasRef.current) return\n\n    const scan = () => {\n      if (!isActive) return\n\n      const video = videoRef.current!\n      const canvas = canvasRef.current!\n      const context = canvas.getContext('2d')!\n\n      // Set canvas size to match video\n      canvas.width = video.videoWidth\n      canvas.height = video.videoHeight\n\n      // Draw video frame to canvas\n      context.drawImage(video, 0, 0, canvas.width, canvas.height)\n\n      // In production, use a barcode/QR code scanning library here\n      // For demo purposes, we'll simulate scanning\n      \n      // Mock scanning logic - replace with actual scanning library\n      if (Math.random() < 0.01) { // 1% chance to simulate successful scan\n        const mockResults = [\n          { result: 'RFID_123456789', type: 'rfid' as const },\n          { result: 'https://hasivu.com/student/123', type: 'qr' as const },\n          { result: '1234567890123', type: 'barcode' as const }\n        ]\n        \n        const randomResult = mockResults[Math.floor(Math.random() * mockResults.length)]\n        \n        if (scanType === 'all' || scanType === randomResult.type) {\n          onScanResult(randomResult.result, randomResult.type)\n          \n          // Haptic feedback on successful scan\n          if ('vibrate' in navigator) {\n            navigator.vibrate([50, 50, 50])\n          }\n          \n          stopCamera()\n          return\n        }\n      }\n\n      animationRef.current = requestAnimationFrame(scan)\n    }\n\n    scan()\n  }, [isActive, scanType, onScanResult, stopCamera])\n\n  useEffect(() => {\n    return () => {\n      stopCamera()\n    }\n  }, [stopCamera])\n\n  if (!hasPermission && hasPermission !== null) {\n    return (\n      <Card className={cn(\"p-6 text-center\", className)}>\n        <AlertCircle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\n        <h3 className=\"text-lg font-semibold mb-2\">Camera Access Required</h3>\n        <p className=\"text-sm text-gray-600 mb-4\">\n          Please allow camera access to scan QR codes and barcodes\n        </p>\n        <Button onClick={startCamera} size=\"sm\">\n          Grant Camera Access\n        </Button>\n      </Card>\n    )\n  }\n\n  return (\n    <Card className={cn(\"overflow-hidden bg-black\", className)}>\n      <div className=\"relative\">\n        {/* Video Preview */}\n        <video\n          ref={videoRef}\n          className=\"w-full h-64 object-cover\"\n          autoPlay\n          playsInline\n          muted\n        />\n        \n        {/* Scanning Canvas (hidden) */}\n        <canvas ref={canvasRef} className=\"hidden\" />\n        \n        {/* Scanning Overlay */}\n        {isActive && (\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <div className=\"w-48 h-48 border-2 border-white rounded-lg relative\">\n              {/* Scanning animation corners */}\n              <div className=\"absolute top-0 left-0 w-6 h-6 border-l-4 border-t-4 border-green-400\" />\n              <div className=\"absolute top-0 right-0 w-6 h-6 border-r-4 border-t-4 border-green-400\" />\n              <div className=\"absolute bottom-0 left-0 w-6 h-6 border-l-4 border-b-4 border-green-400\" />\n              <div className=\"absolute bottom-0 right-0 w-6 h-6 border-r-4 border-b-4 border-green-400\" />\n              \n              {/* Scanning line animation */}\n              <div className=\"absolute inset-x-0 top-1/2 h-0.5 bg-green-400 animate-pulse\" />\n            </div>\n            \n            {/* Instructions */}\n            <div className=\"absolute bottom-4 left-4 right-4\">\n              <p className=\"text-white text-sm text-center bg-black/50 p-2 rounded\">\n                Position {scanType === 'all' ? 'code' : scanType.toUpperCase()} within the frame\n              </p>\n            </div>\n          </div>\n        )}\n        \n        {/* Error Display */}\n        {error && (\n          <div className=\"absolute inset-0 bg-black/80 flex items-center justify-center\">\n            <div className=\"text-center text-white p-4\">\n              <AlertCircle className=\"h-8 w-8 mx-auto mb-2\" />\n              <p className=\"text-sm\">{error}</p>\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Controls */}\n      <div className=\"p-4 bg-gray-900\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex space-x-2\">\n            {!isActive ? (\n              <Button onClick={startCamera} size=\"sm\" className=\"bg-green-600 hover:bg-green-700\">\n                <Camera className=\"h-4 w-4 mr-2\" />\n                Start Scanner\n              </Button>\n            ) : (\n              <Button onClick={stopCamera} size=\"sm\" variant=\"destructive\">\n                <X className=\"h-4 w-4 mr-2\" />\n                Stop\n              </Button>\n            )}\n          </div>\n          \n          {isActive && (\n            <div className=\"flex space-x-2\">\n              <Button onClick={switchCamera} size=\"sm\" variant=\"ghost\" className=\"text-white\">\n                <RotateCcw className=\"h-4 w-4\" />\n              </Button>\n              \n              <Button onClick={toggleFlash} size=\"sm\" variant=\"ghost\" className=\"text-white\">\n                <Zap className={cn(\"h-4 w-4\", flashOn && \"text-yellow-400\")} />\n              </Button>\n            </div>\n          )}\n        </div>\n        \n        {isActive && (\n          <div className=\"mt-2 text-center\">\n            <Badge variant=\"secondary\" className=\"text-xs\">\n              Scanning for {scanType === 'all' ? 'QR/Barcode/RFID' : scanType.toUpperCase()}\n            </Badge>\n          </div>\n        )}\n      </div>\n    </Card>\n  )\n}\n\n// Haptic Feedback Component\ninterface HapticFeedbackProps {\n  pattern?: number | number[]\n  children: React.ReactNode\n  className?: string\n  disabled?: boolean\n}\n\nexport const HapticFeedback: React.FC<HapticFeedbackProps> = ({\n  pattern = 50,\n  children,\n  className,\n  disabled = false\n}) => {\n  const triggerHaptic = useCallback(() => {\n    if (disabled || !('vibrate' in navigator)) return\n    \n    navigator.vibrate(pattern)\n  }, [pattern, disabled])\n\n  return (\n    <div \n      className={cn(\"cursor-pointer\", className)} \n      onClick={triggerHaptic}\n    >\n      {children}\n    </div>\n  )\n}\n\n// Native Share API Component\ninterface NativeShareProps {\n  title: string\n  text: string\n  url?: string\n  files?: File[]\n  onSuccess?: () => void\n  onError?: (error: string) => void\n  children: React.ReactNode\n}\n\nexport const NativeShare: React.FC<NativeShareProps> = ({\n  title,\n  text,\n  url = window.location.href,\n  files = [],\n  onSuccess,\n  onError,\n  children\n}) => {\n  const handleShare = useCallback(async () => {\n    if ('share' in navigator) {\n      try {\n        const shareData: ShareData = { title, text, url }\n        \n        // Add files if supported and provided\n        if (files.length > 0 && 'canShare' in navigator && navigator.canShare({ files })) {\n          shareData.files = files\n        }\n        \n        await navigator.share(shareData)\n        onSuccess?.()\n        \n        // Haptic feedback\n        if ('vibrate' in navigator) {\n          navigator.vibrate(25)\n        }\n      } catch (error) {\n        if (error instanceof Error && error.name !== 'AbortError') {\n          onError?.(error.message)\n        }\n      }\n    } else {\n      // Fallback to clipboard\n      try {\n        await navigator.clipboard.writeText(`${title}\\n${text}\\n${url}`)\n        onSuccess?.()\n      } catch (error) {\n        onError?.('Unable to share or copy to clipboard')\n      }\n    }\n  }, [title, text, url, files, onSuccess, onError])\n\n  return (\n    <div onClick={handleShare} className=\"cursor-pointer\">\n      {children}\n    </div>\n  )\n}","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/OfflineQueue.tsx",["2337","2338","2339","2340","2341","2342","2343","2344","2345","2346","2347","2348","2349","2350","2351","2352","2353","2354","2355"],[],"\"use client\"\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Card } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\nimport { cn } from '@/lib/utils'\nimport { \n  Wifi, \n  WifiOff,\n  Clock,\n  CheckCircle,\n  AlertCircle,\n  RefreshCw,\n  Trash2,\n  Upload,\n  Download,\n  Loader2,\n  Database,\n  Sync,\n  CloudOff,\n  Cloud\n} from 'lucide-react'\n\n// Types for offline operations\ninterface OfflineOperation {\n  id: string\n  type: 'order' | 'payment' | 'wallet' | 'feedback' | 'profile'\n  action: string\n  data: any\n  timestamp: number\n  retryCount: number\n  maxRetries: number\n  status: 'pending' | 'retrying' | 'failed' | 'completed'\n  url: string\n  method: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH'\n  headers?: Record<string, string>\n}\n\ninterface CachedData {\n  key: string\n  data: any\n  timestamp: number\n  expiry: number\n  category: string\n}\n\n// IndexedDB utilities for offline storage\nclass OfflineStorage {\n  private dbName = 'hasivu-offline'\n  private version = 1\n  private db: IDBDatabase | null = null\n\n  async init(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const request = indexedDB.open(this.dbName, this.version)\n      \n      request.onerror = () => reject(request.error)\n      request.onsuccess = () => {\n        this.db = request.result\n        resolve()\n      }\n      \n      request.onupgradeneeded = (event) => {\n        const db = (event.target as IDBOpenDBRequest).result\n        \n        // Store for offline operations queue\n        if (!db.objectStoreNames.contains('operations')) {\n          const operationsStore = db.createObjectStore('operations', { keyPath: 'id' })\n          operationsStore.createIndex('timestamp', 'timestamp', { unique: false })\n          operationsStore.createIndex('status', 'status', { unique: false })\n          operationsStore.createIndex('type', 'type', { unique: false })\n        }\n        \n        // Store for cached data\n        if (!db.objectStoreNames.contains('cache')) {\n          const cacheStore = db.createObjectStore('cache', { keyPath: 'key' })\n          cacheStore.createIndex('category', 'category', { unique: false })\n          cacheStore.createIndex('timestamp', 'timestamp', { unique: false })\n        }\n        \n        // Store for meal data\n        if (!db.objectStoreNames.contains('meals')) {\n          const mealsStore = db.createObjectStore('meals', { keyPath: 'id' })\n          mealsStore.createIndex('date', 'date', { unique: false })\n          mealsStore.createIndex('category', 'category', { unique: false })\n        }\n      }\n    })\n  }\n\n  async addOperation(operation: OfflineOperation): Promise<void> {\n    if (!this.db) await this.init()\n    \n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction(['operations'], 'readwrite')\n      const store = transaction.objectStore('operations')\n      const request = store.add(operation)\n      \n      request.onerror = () => reject(request.error)\n      request.onsuccess = () => resolve()\n    })\n  }\n\n  async getOperations(status?: string): Promise<OfflineOperation[]> {\n    if (!this.db) await this.init()\n    \n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction(['operations'], 'readonly')\n      const store = transaction.objectStore('operations')\n      \n      let request: IDBRequest\n      if (status) {\n        const index = store.index('status')\n        request = index.getAll(status)\n      } else {\n        request = store.getAll()\n      }\n      \n      request.onerror = () => reject(request.error)\n      request.onsuccess = () => resolve(request.result || [])\n    })\n  }\n\n  async updateOperation(operation: OfflineOperation): Promise<void> {\n    if (!this.db) await this.init()\n    \n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction(['operations'], 'readwrite')\n      const store = transaction.objectStore('operations')\n      const request = store.put(operation)\n      \n      request.onerror = () => reject(request.error)\n      request.onsuccess = () => resolve()\n    })\n  }\n\n  async deleteOperation(id: string): Promise<void> {\n    if (!this.db) await this.init()\n    \n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction(['operations'], 'readwrite')\n      const store = transaction.objectStore('operations')\n      const request = store.delete(id)\n      \n      request.onerror = () => reject(request.error)\n      request.onsuccess = () => resolve()\n    })\n  }\n\n  async cacheData(key: string, data: any, category: string, expiry: number = 24 * 60 * 60 * 1000): Promise<void> {\n    if (!this.db) await this.init()\n    \n    const cachedData: CachedData = {\n      key,\n      data,\n      timestamp: Date.now(),\n      expiry: Date.now() + expiry,\n      category\n    }\n    \n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction(['cache'], 'readwrite')\n      const store = transaction.objectStore('cache')\n      const request = store.put(cachedData)\n      \n      request.onerror = () => reject(request.error)\n      request.onsuccess = () => resolve()\n    })\n  }\n\n  async getCachedData(key: string): Promise<any | null> {\n    if (!this.db) await this.init()\n    \n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction(['cache'], 'readonly')\n      const store = transaction.objectStore('cache')\n      const request = store.get(key)\n      \n      request.onerror = () => reject(request.error)\n      request.onsuccess = () => {\n        const result = request.result\n        if (result && result.expiry > Date.now()) {\n          resolve(result.data)\n        } else {\n          if (result) {\n            // Delete expired data\n            this.deleteCachedData(key)\n          }\n          resolve(null)\n        }\n      }\n    })\n  }\n\n  async deleteCachedData(key: string): Promise<void> {\n    if (!this.db) await this.init()\n    \n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction(['cache'], 'readwrite')\n      const store = transaction.objectStore('cache')\n      const request = store.delete(key)\n      \n      request.onerror = () => reject(request.error)\n      request.onsuccess = () => resolve()\n    })\n  }\n\n  async clearExpiredCache(): Promise<void> {\n    if (!this.db) await this.init()\n    \n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction(['cache'], 'readwrite')\n      const store = transaction.objectStore('cache')\n      const request = store.getAll()\n      \n      request.onerror = () => reject(request.error)\n      request.onsuccess = () => {\n        const now = Date.now()\n        const expired = request.result.filter(item => item.expiry <= now)\n        \n        const deletePromises = expired.map(item => this.deleteCachedData(item.key))\n        Promise.all(deletePromises).then(() => resolve()).catch(reject)\n      }\n    })\n  }\n}\n\n// Initialize storage instance\nconst offlineStorage = new OfflineStorage()\n\n// Offline Queue Hook\nexport const useOfflineQueue = () => {\n  const [operations, setOperations] = useState<OfflineOperation[]>([])\n  const [isOnline, setIsOnline] = useState(navigator.onLine)\n  const [isProcessing, setIsProcessing] = useState(false)\n  const processingRef = useRef(false)\n\n  // Monitor online status\n  useEffect(() => {\n    const handleOnline = () => {\n      setIsOnline(true)\n      processQueue()\n    }\n    \n    const handleOffline = () => {\n      setIsOnline(false)\n    }\n\n    window.addEventListener('online', handleOnline)\n    window.addEventListener('offline', handleOffline)\n\n    return () => {\n      window.removeEventListener('online', handleOnline)\n      window.removeEventListener('offline', handleOffline)\n    }\n  }, [])\n\n  // Load operations from storage\n  const loadOperations = useCallback(async () => {\n    try {\n      const storedOperations = await offlineStorage.getOperations()\n      setOperations(storedOperations.sort((a, b) => a.timestamp - b.timestamp))\n    } catch (error) {\n      console.error('Failed to load offline operations:', error)\n    }\n  }, [])\n\n  // Add operation to queue\n  const addOperation = useCallback(async (\n    type: OfflineOperation['type'],\n    action: string,\n    data: any,\n    url: string,\n    method: OfflineOperation['method'] = 'POST',\n    headers?: Record<string, string>\n  ) => {\n    const operation: OfflineOperation = {\n      id: `${type}-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n      type,\n      action,\n      data,\n      timestamp: Date.now(),\n      retryCount: 0,\n      maxRetries: 3,\n      status: 'pending',\n      url,\n      method,\n      headers\n    }\n\n    try {\n      await offlineStorage.addOperation(operation)\n      setOperations(prev => [...prev, operation].sort((a, b) => a.timestamp - b.timestamp))\n      \n      // Try to process immediately if online\n      if (isOnline) {\n        processQueue()\n      }\n      \n      return operation.id\n    } catch (error) {\n      console.error('Failed to add offline operation:', error)\n      return null\n    }\n  }, [isOnline])\n\n  // Process offline queue\n  const processQueue = useCallback(async () => {\n    if (!isOnline || processingRef.current) return\n    \n    processingRef.current = true\n    setIsProcessing(true)\n\n    try {\n      const pendingOperations = await offlineStorage.getOperations('pending')\n      const retryingOperations = await offlineStorage.getOperations('retrying')\n      const toProcess = [...pendingOperations, ...retryingOperations]\n\n      for (const operation of toProcess) {\n        try {\n          // Update status to retrying\n          operation.status = 'retrying'\n          await offlineStorage.updateOperation(operation)\n          setOperations(prev => prev.map(op => op.id === operation.id ? operation : op))\n\n          // Execute the operation\n          const response = await fetch(operation.url, {\n            method: operation.method,\n            headers: {\n              'Content-Type': 'application/json',\n              ...operation.headers\n            },\n            body: operation.method !== 'GET' ? JSON.stringify(operation.data) : undefined\n          })\n\n          if (response.ok) {\n            // Success - remove from queue\n            operation.status = 'completed'\n            await offlineStorage.deleteOperation(operation.id)\n            setOperations(prev => prev.filter(op => op.id !== operation.id))\n            \n            // Notify user of successful sync\n            if ('serviceWorker' in navigator && navigator.serviceWorker.controller) {\n              navigator.serviceWorker.controller.postMessage({\n                type: 'OPERATION_SYNCED',\n                data: { operation, success: true }\n              })\n            }\n          } else {\n            throw new Error(`HTTP ${response.status}: ${response.statusText}`)\n          }\n        } catch (error) {\n          console.error('Failed to process operation:', operation.id, error)\n          \n          operation.retryCount++\n          \n          if (operation.retryCount >= operation.maxRetries) {\n            operation.status = 'failed'\n          } else {\n            operation.status = 'pending'\n          }\n          \n          await offlineStorage.updateOperation(operation)\n          setOperations(prev => prev.map(op => op.id === operation.id ? operation : op))\n        }\n      }\n    } catch (error) {\n      console.error('Failed to process offline queue:', error)\n    } finally {\n      processingRef.current = false\n      setIsProcessing(false)\n    }\n  }, [isOnline])\n\n  // Retry failed operation\n  const retryOperation = useCallback(async (operationId: string) => {\n    const operation = operations.find(op => op.id === operationId)\n    if (!operation) return\n\n    operation.status = 'pending'\n    operation.retryCount = 0\n    \n    try {\n      await offlineStorage.updateOperation(operation)\n      setOperations(prev => prev.map(op => op.id === operationId ? operation : op))\n      \n      if (isOnline) {\n        processQueue()\n      }\n    } catch (error) {\n      console.error('Failed to retry operation:', error)\n    }\n  }, [operations, isOnline, processQueue])\n\n  // Delete operation\n  const deleteOperation = useCallback(async (operationId: string) => {\n    try {\n      await offlineStorage.deleteOperation(operationId)\n      setOperations(prev => prev.filter(op => op.id !== operationId))\n    } catch (error) {\n      console.error('Failed to delete operation:', error)\n    }\n  }, [])\n\n  // Clear all operations\n  const clearQueue = useCallback(async () => {\n    try {\n      const allOperations = await offlineStorage.getOperations()\n      await Promise.all(allOperations.map(op => offlineStorage.deleteOperation(op.id)))\n      setOperations([])\n    } catch (error) {\n      console.error('Failed to clear queue:', error)\n    }\n  }, [])\n\n  // Load operations on mount\n  useEffect(() => {\n    loadOperations()\n  }, [loadOperations])\n\n  // Auto-process queue when coming online\n  useEffect(() => {\n    if (isOnline && operations.some(op => op.status === 'pending')) {\n      processQueue()\n    }\n  }, [isOnline, operations, processQueue])\n\n  return {\n    operations,\n    isOnline,\n    isProcessing,\n    addOperation,\n    retryOperation,\n    deleteOperation,\n    clearQueue,\n    processQueue\n  }\n}\n\n// Cached Data Hook\nexport const useCachedData = () => {\n  const [cacheStats, setCacheStats] = useState({\n    totalSize: 0,\n    itemCount: 0,\n    categories: {} as Record<string, number>\n  })\n\n  const getCachedData = useCallback(async (key: string) => {\n    try {\n      return await offlineStorage.getCachedData(key)\n    } catch (error) {\n      console.error('Failed to get cached data:', error)\n      return null\n    }\n  }, [])\n\n  const setCachedData = useCallback(async (\n    key: string,\n    data: any,\n    category: string = 'default',\n    expiry: number = 24 * 60 * 60 * 1000 // 24 hours\n  ) => {\n    try {\n      await offlineStorage.cacheData(key, data, category, expiry)\n      updateCacheStats()\n    } catch (error) {\n      console.error('Failed to cache data:', error)\n    }\n  }, [])\n\n  const clearExpiredCache = useCallback(async () => {\n    try {\n      await offlineStorage.clearExpiredCache()\n      updateCacheStats()\n    } catch (error) {\n      console.error('Failed to clear expired cache:', error)\n    }\n  }, [])\n\n  const updateCacheStats = useCallback(async () => {\n    // This would need to be implemented based on IndexedDB size calculation\n    // For now, we'll use approximate values\n    setCacheStats({\n      totalSize: 0, // Would calculate actual size\n      itemCount: 0, // Would count actual items\n      categories: {} // Would group by category\n    })\n  }, [])\n\n  useEffect(() => {\n    updateCacheStats()\n  }, [updateCacheStats])\n\n  return {\n    cacheStats,\n    getCachedData,\n    setCachedData,\n    clearExpiredCache\n  }\n}\n\n// Offline Queue Component\ninterface OfflineQueueProps {\n  className?: string\n}\n\nexport const OfflineQueue: React.FC<OfflineQueueProps> = ({ className }) => {\n  const {\n    operations,\n    isOnline,\n    isProcessing,\n    retryOperation,\n    deleteOperation,\n    clearQueue,\n    processQueue\n  } = useOfflineQueue()\n\n  const pendingCount = operations.filter(op => op.status === 'pending').length\n  const failedCount = operations.filter(op => op.status === 'failed').length\n\n  const getOperationIcon = (operation: OfflineOperation) => {\n    switch (operation.status) {\n      case 'pending':\n        return <Clock className=\"h-4 w-4 text-yellow-500\" />\n      case 'retrying':\n        return <Loader2 className=\"h-4 w-4 text-blue-500 animate-spin\" />\n      case 'failed':\n        return <AlertCircle className=\"h-4 w-4 text-red-500\" />\n      case 'completed':\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" />\n      default:\n        return <Clock className=\"h-4 w-4 text-gray-500\" />\n    }\n  }\n\n  const getOperationTitle = (operation: OfflineOperation) => {\n    const typeLabels = {\n      order: 'Meal Order',\n      payment: 'Payment',\n      wallet: 'Wallet Update',\n      feedback: 'Feedback',\n      profile: 'Profile Update'\n    }\n    \n    return `${typeLabels[operation.type]} - ${operation.action}`\n  }\n\n  return (\n    <Card className={cn(\"p-4\", className)}>\n      <div className=\"flex items-center justify-between mb-4\">\n        <div className=\"flex items-center space-x-2\">\n          {isOnline ? (\n            <Wifi className=\"h-5 w-5 text-green-500\" />\n          ) : (\n            <WifiOff className=\"h-5 w-5 text-red-500\" />\n          )}\n          <h3 className=\"font-semibold\">Offline Queue</h3>\n          {isProcessing && <Loader2 className=\"h-4 w-4 animate-spin\" />}\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          {pendingCount > 0 && (\n            <Badge variant=\"secondary\">{pendingCount} pending</Badge>\n          )}\n          {failedCount > 0 && (\n            <Badge variant=\"destructive\">{failedCount} failed</Badge>\n          )}\n        </div>\n      </div>\n\n      {!isOnline && (\n        <Alert className=\"mb-4\">\n          <CloudOff className=\"h-4 w-4\" />\n          <AlertDescription>\n            You're offline. Operations will be queued and synced when connection is restored.\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {operations.length === 0 ? (\n        <div className=\"text-center py-6 text-gray-500\">\n          <Database className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\n          <p className=\"text-sm\">No offline operations</p>\n        </div>\n      ) : (\n        <div className=\"space-y-3\">\n          {operations.map((operation) => (\n            <div\n              key={operation.id}\n              className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\"\n            >\n              <div className=\"flex items-center space-x-3\">\n                {getOperationIcon(operation)}\n                <div>\n                  <div className=\"text-sm font-medium\">\n                    {getOperationTitle(operation)}\n                  </div>\n                  <div className=\"text-xs text-gray-500\">\n                    {new Date(operation.timestamp).toLocaleString()}\n                    {operation.retryCount > 0 && (\n                      <span className=\"ml-2\">\n                        (Retry {operation.retryCount}/{operation.maxRetries})\n                      </span>\n                    )}\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center space-x-1\">\n                {operation.status === 'failed' && (\n                  <Button\n                    size=\"sm\"\n                    variant=\"outline\"\n                    onClick={() => retryOperation(operation.id)}\n                  >\n                    <RefreshCw className=\"h-3 w-3\" />\n                  </Button>\n                )}\n                \n                <Button\n                  size=\"sm\"\n                  variant=\"ghost\"\n                  onClick={() => deleteOperation(operation.id)}\n                >\n                  <Trash2 className=\"h-3 w-3\" />\n                </Button>\n              </div>\n            </div>\n          ))}\n          \n          {operations.length > 1 && (\n            <div className=\"flex justify-between pt-3 border-t\">\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={processQueue}\n                disabled={!isOnline || isProcessing}\n              >\n                <Sync className=\"h-4 w-4 mr-2\" />\n                Sync Now\n              </Button>\n              \n              <Button\n                variant=\"destructive\"\n                size=\"sm\"\n                onClick={clearQueue}\n              >\n                Clear All\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </Card>\n  )\n}\n\n// Cached Data Manager Component\ninterface CachedDataManagerProps {\n  className?: string\n}\n\nexport const CachedDataManager: React.FC<CachedDataManagerProps> = ({ className }) => {\n  const { cacheStats, clearExpiredCache } = useCachedData()\n  const [isClearing, setIsClearing] = useState(false)\n\n  const handleClearExpired = async () => {\n    setIsClearing(true)\n    await clearExpiredCache()\n    setIsClearing(false)\n  }\n\n  const formatBytes = (bytes: number) => {\n    if (bytes === 0) return '0 Bytes'\n    const k = 1024\n    const sizes = ['Bytes', 'KB', 'MB', 'GB']\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n  }\n\n  return (\n    <Card className={cn(\"p-4\", className)}>\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"font-semibold flex items-center\">\n          <Database className=\"h-4 w-4 mr-2\" />\n          Cached Data\n        </h3>\n        \n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={handleClearExpired}\n          disabled={isClearing}\n        >\n          {isClearing ? (\n            <Loader2 className=\"h-4 w-4 animate-spin\" />\n          ) : (\n            <RefreshCw className=\"h-4 w-4\" />\n          )}\n          Clear Expired\n        </Button>\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-4 text-sm\">\n        <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\n          <div className=\"text-lg font-bold text-blue-600\">\n            {cacheStats.itemCount}\n          </div>\n          <div className=\"text-blue-700\">Items Cached</div>\n        </div>\n        \n        <div className=\"text-center p-3 bg-green-50 rounded-lg\">\n          <div className=\"text-lg font-bold text-green-600\">\n            {formatBytes(cacheStats.totalSize)}\n          </div>\n          <div className=\"text-green-700\">Storage Used</div>\n        </div>\n      </div>\n\n      {Object.keys(cacheStats.categories).length > 0 && (\n        <div className=\"mt-4\">\n          <h4 className=\"text-sm font-medium mb-2\">By Category</h4>\n          <div className=\"space-y-1\">\n            {Object.entries(cacheStats.categories).map(([category, count]) => (\n              <div key={category} className=\"flex justify-between text-xs\">\n                <span className=\"capitalize\">{category}</span>\n                <span className=\"font-mono\">{count}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </Card>\n  )\n}","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/PWAEnhanced.tsx",["2356","2357","2358","2359","2360","2361","2362","2363","2364","2365","2366","2367","2368","2369","2370","2371","2372","2373","2374","2375","2376","2377"],[],"\"use client\"\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Card } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\nimport { cn } from '@/lib/utils'\nimport { \n  Smartphone, \n  Download, \n  Wifi, \n  WifiOff,\n  Bell,\n  BellOff,\n  Battery,\n  Signal,\n  Loader2,\n  CheckCircle,\n  AlertCircle,\n  RefreshCw,\n  Settings,\n  Monitor,\n  HardDrive,\n  Zap,\n  Cloud,\n  CloudOff\n} from 'lucide-react'\n\n// PWA Installation Hook\nexport const usePWAInstall = () => {\n  const [isInstallable, setIsInstallable] = useState(false)\n  const [isInstalled, setIsInstalled] = useState(false)\n  const [installPrompt, setInstallPrompt] = useState<any>(null)\n  \n  useEffect(() => {\n    // Check if already installed\n    const checkInstalled = () => {\n      if (window.matchMedia('(display-mode: standalone)').matches) {\n        setIsInstalled(true)\n      }\n    }\n    \n    // Listen for beforeinstallprompt event\n    const handleBeforeInstallPrompt = (e: Event) => {\n      e.preventDefault()\n      setInstallPrompt(e)\n      setIsInstallable(true)\n    }\n    \n    // Listen for app installed event\n    const handleAppInstalled = () => {\n      setIsInstalled(true)\n      setIsInstallable(false)\n    }\n    \n    checkInstalled()\n    \n    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt)\n    window.addEventListener('appinstalled', handleAppInstalled)\n    \n    return () => {\n      window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt)\n      window.removeEventListener('appinstalled', handleAppInstalled)\n    }\n  }, [])\n  \n  const installApp = useCallback(async () => {\n    if (!installPrompt) return false\n    \n    try {\n      const result = await installPrompt.prompt()\n      const outcome = await result.userChoice\n      \n      if (outcome === 'accepted') {\n        setIsInstalled(true)\n        setIsInstallable(false)\n      }\n      \n      setInstallPrompt(null)\n      return outcome === 'accepted'\n      \n    } catch (error) {\n      console.error('PWA installation failed:', error)\n      return false\n    }\n  }, [installPrompt])\n  \n  return {\n    isInstallable,\n    isInstalled,\n    installApp\n  }\n}\n\n// Network Status Hook\nexport const useNetworkStatus = () => {\n  const [isOnline, setIsOnline] = useState(navigator.onLine)\n  const [connectionType, setConnectionType] = useState<string>('unknown')\n  const [effectiveType, setEffectiveType] = useState<string>('unknown')\n  \n  useEffect(() => {\n    const updateOnlineStatus = () => {\n      setIsOnline(navigator.onLine)\n    }\n    \n    const updateConnectionInfo = () => {\n      // @ts-ignore - connection is not in TypeScript definitions\n      const connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection\n      \n      if (connection) {\n        setConnectionType(connection.type || 'unknown')\n        setEffectiveType(connection.effectiveType || 'unknown')\n      }\n    }\n    \n    updateConnectionInfo()\n    \n    window.addEventListener('online', updateOnlineStatus)\n    window.addEventListener('offline', updateOnlineStatus)\n    \n    // @ts-ignore\n    const connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection\n    if (connection) {\n      connection.addEventListener('change', updateConnectionInfo)\n    }\n    \n    return () => {\n      window.removeEventListener('online', updateOnlineStatus)\n      window.removeEventListener('offline', updateOnlineStatus)\n      \n      if (connection) {\n        connection.removeEventListener('change', updateConnectionInfo)\n      }\n    }\n  }, [])\n  \n  return {\n    isOnline,\n    connectionType,\n    effectiveType,\n    isSlowConnection: effectiveType === 'slow-2g' || effectiveType === '2g'\n  }\n}\n\n// Push Notifications Hook\nexport const usePushNotifications = () => {\n  const [permission, setPermission] = useState<NotificationPermission>('default')\n  const [subscription, setSubscription] = useState<PushSubscription | null>(null)\n  const [isSupported, setIsSupported] = useState(false)\n  \n  useEffect(() => {\n    const checkSupport = () => {\n      const supported = 'Notification' in window && 'serviceWorker' in navigator && 'PushManager' in window\n      setIsSupported(supported)\n      \n      if (supported) {\n        setPermission(Notification.permission)\n      }\n    }\n    \n    checkSupport()\n  }, [])\n  \n  const requestPermission = useCallback(async () => {\n    if (!isSupported) return false\n    \n    try {\n      const result = await Notification.requestPermission()\n      setPermission(result)\n      return result === 'granted'\n    } catch (error) {\n      console.error('Notification permission request failed:', error)\n      return false\n    }\n  }, [isSupported])\n  \n  const subscribeToPush = useCallback(async () => {\n    if (!isSupported || permission !== 'granted') return null\n    \n    try {\n      const registration = await navigator.serviceWorker.ready\n      \n      const subscription = await registration.pushManager.subscribe({\n        userVisibleOnly: true,\n        applicationServerKey: process.env.NEXT_PUBLIC_VAPID_PUBLIC_KEY\n      })\n      \n      setSubscription(subscription)\n      \n      // Send subscription to server\n      await fetch('/api/v1/notifications/subscribe', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          subscription: subscription.toJSON()\n        })\n      })\n      \n      return subscription\n      \n    } catch (error) {\n      console.error('Push subscription failed:', error)\n      return null\n    }\n  }, [isSupported, permission])\n  \n  const unsubscribeFromPush = useCallback(async () => {\n    if (!subscription) return false\n    \n    try {\n      await subscription.unsubscribe()\n      setSubscription(null)\n      \n      // Notify server\n      await fetch('/api/v1/notifications/unsubscribe', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          endpoint: subscription.endpoint\n        })\n      })\n      \n      return true\n      \n    } catch (error) {\n      console.error('Push unsubscription failed:', error)\n      return false\n    }\n  }, [subscription])\n  \n  return {\n    isSupported,\n    permission,\n    subscription,\n    requestPermission,\n    subscribeToPush,\n    unsubscribeFromPush\n  }\n}\n\n// Cache Management Hook\nexport const useCacheManagement = () => {\n  const [cacheSize, setCacheSize] = useState<number>(0)\n  const [cacheStatus, setCacheStatus] = useState<any>(null)\n  const [isLoading, setIsLoading] = useState(false)\n  \n  const getCacheInfo = useCallback(async () => {\n    setIsLoading(true)\n    \n    try {\n      // Get cache storage estimate\n      if ('storage' in navigator && 'estimate' in navigator.storage) {\n        const estimate = await navigator.storage.estimate()\n        setCacheSize(estimate.usage || 0)\n      }\n      \n      // Get cache status from service worker\n      if ('serviceWorker' in navigator && navigator.serviceWorker.controller) {\n        const messageChannel = new MessageChannel()\n        \n        navigator.serviceWorker.controller.postMessage(\n          { type: 'GET_CACHE_STATUS' },\n          [messageChannel.port2]\n        )\n        \n        messageChannel.port1.onmessage = (event) => {\n          setCacheStatus(event.data)\n        }\n      }\n      \n    } catch (error) {\n      console.error('Failed to get cache info:', error)\n    } finally {\n      setIsLoading(false)\n    }\n  }, [])\n  \n  const clearCache = useCallback(async () => {\n    try {\n      if ('serviceWorker' in navigator && navigator.serviceWorker.controller) {\n        navigator.serviceWorker.controller.postMessage({ type: 'CLEAR_CACHES' })\n      }\n      \n      // Refresh cache info\n      setTimeout(() => {\n        getCacheInfo()\n      }, 1000)\n      \n      return true\n      \n    } catch (error) {\n      console.error('Failed to clear cache:', error)\n      return false\n    }\n  }, [getCacheInfo])\n  \n  useEffect(() => {\n    getCacheInfo()\n  }, [getCacheInfo])\n  \n  return {\n    cacheSize,\n    cacheStatus,\n    isLoading,\n    getCacheInfo,\n    clearCache\n  }\n}\n\n// Battery Status Hook\nexport const useBatteryStatus = () => {\n  const [batteryLevel, setBatteryLevel] = useState<number | null>(null)\n  const [isCharging, setIsCharging] = useState<boolean | null>(null)\n  const [isSupported, setIsSupported] = useState(false)\n  \n  useEffect(() => {\n    const getBatteryInfo = async () => {\n      try {\n        // @ts-ignore - battery API not in TypeScript definitions\n        if ('getBattery' in navigator) {\n          // @ts-ignore\n          const battery = await navigator.getBattery()\n          setIsSupported(true)\n          \n          const updateBatteryInfo = () => {\n            setBatteryLevel(battery.level)\n            setIsCharging(battery.charging)\n          }\n          \n          updateBatteryInfo()\n          \n          battery.addEventListener('levelchange', updateBatteryInfo)\n          battery.addEventListener('chargingchange', updateBatteryInfo)\n          \n          return () => {\n            battery.removeEventListener('levelchange', updateBatteryInfo)\n            battery.removeEventListener('chargingchange', updateBatteryInfo)\n          }\n        }\n      } catch (error) {\n        console.warn('Battery API not supported:', error)\n      }\n    }\n    \n    getBatteryInfo()\n  }, [])\n  \n  return {\n    batteryLevel,\n    isCharging,\n    isSupported,\n    isLowBattery: batteryLevel !== null && batteryLevel < 0.2\n  }\n}\n\n// PWA Install Prompt Component\ninterface PWAInstallPromptProps {\n  className?: string\n}\n\nexport const PWAInstallPrompt: React.FC<PWAInstallPromptProps> = ({ className }) => {\n  const { isInstallable, isInstalled, installApp } = usePWAInstall()\n  const [isInstalling, setIsInstalling] = useState(false)\n  \n  const handleInstall = async () => {\n    setIsInstalling(true)\n    const success = await installApp()\n    setIsInstalling(false)\n    \n    if (success) {\n      // Haptic feedback\n      if ('vibrate' in navigator) {\n        navigator.vibrate([100, 50, 100])\n      }\n    }\n  }\n  \n  if (isInstalled) {\n    return (\n      <Alert className={cn(\"border-green-200 bg-green-50\", className)}>\n        <CheckCircle className=\"h-4 w-4 text-green-600\" />\n        <AlertDescription className=\"text-green-800\">\n          HASIVU app is installed! You can access it from your home screen.\n        </AlertDescription>\n      </Alert>\n    )\n  }\n  \n  if (!isInstallable) {\n    return null\n  }\n  \n  return (\n    <Card className={cn(\"p-4 border-blue-200 bg-blue-50\", className)}>\n      <div className=\"flex items-start space-x-3\">\n        <Smartphone className=\"h-6 w-6 text-blue-600 mt-1\" />\n        <div className=\"flex-1\">\n          <h3 className=\"font-semibold text-blue-900 mb-1\">\n            Install HASIVU App\n          </h3>\n          <p className=\"text-sm text-blue-800 mb-3\">\n            Install the app for faster access, offline ordering, and push notifications.\n          </p>\n          <Button \n            onClick={handleInstall}\n            disabled={isInstalling}\n            size=\"sm\"\n            className=\"bg-blue-600 hover:bg-blue-700\"\n          >\n            {isInstalling ? (\n              <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n            ) : (\n              <Download className=\"h-4 w-4 mr-2\" />\n            )}\n            Install App\n          </Button>\n        </div>\n      </div>\n    </Card>\n  )\n}\n\n// Network Status Indicator\ninterface NetworkStatusProps {\n  className?: string\n}\n\nexport const NetworkStatus: React.FC<NetworkStatusProps> = ({ className }) => {\n  const { isOnline, connectionType, effectiveType, isSlowConnection } = useNetworkStatus()\n  \n  return (\n    <div className={cn(\"flex items-center space-x-2 p-2 rounded-lg\", className, {\n      \"bg-green-50 text-green-800\": isOnline && !isSlowConnection,\n      \"bg-yellow-50 text-yellow-800\": isOnline && isSlowConnection,\n      \"bg-red-50 text-red-800\": !isOnline\n    })}>\n      {isOnline ? (\n        <>\n          <Wifi className=\"h-4 w-4\" />\n          <span className=\"text-sm font-medium\">\n            {isSlowConnection ? 'Slow Connection' : 'Online'}\n          </span>\n          {effectiveType !== 'unknown' && (\n            <Badge variant=\"outline\" className=\"text-xs\">\n              {effectiveType.toUpperCase()}\n            </Badge>\n          )}\n        </>\n      ) : (\n        <>\n          <WifiOff className=\"h-4 w-4\" />\n          <span className=\"text-sm font-medium\">Offline</span>\n        </>\n      )}\n    </div>\n  )\n}\n\n// Push Notifications Settings\ninterface PushNotificationSettingsProps {\n  className?: string\n}\n\nexport const PushNotificationSettings: React.FC<PushNotificationSettingsProps> = ({ className }) => {\n  const { \n    isSupported, \n    permission, \n    subscription, \n    requestPermission, \n    subscribeToPush, \n    unsubscribeFromPush \n  } = usePushNotifications()\n  \n  const [isLoading, setIsLoading] = useState(false)\n  \n  const handleToggleNotifications = async () => {\n    setIsLoading(true)\n    \n    try {\n      if (subscription) {\n        await unsubscribeFromPush()\n      } else {\n        if (permission !== 'granted') {\n          const granted = await requestPermission()\n          if (!granted) {\n            setIsLoading(false)\n            return\n          }\n        }\n        await subscribeToPush()\n      }\n    } catch (error) {\n      console.error('Notification toggle failed:', error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n  \n  if (!isSupported) {\n    return (\n      <Alert className={cn(\"\", className)}>\n        <AlertCircle className=\"h-4 w-4\" />\n        <AlertDescription>\n          Push notifications are not supported in this browser.\n        </AlertDescription>\n      </Alert>\n    )\n  }\n  \n  return (\n    <Card className={cn(\"p-4\", className)}>\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          {subscription ? (\n            <Bell className=\"h-5 w-5 text-green-600\" />\n          ) : (\n            <BellOff className=\"h-5 w-5 text-gray-400\" />\n          )}\n          <div>\n            <h3 className=\"font-semibold\">Push Notifications</h3>\n            <p className=\"text-sm text-gray-600\">\n              {subscription ? 'Enabled' : 'Disabled'}\n            </p>\n          </div>\n        </div>\n        \n        <Button\n          onClick={handleToggleNotifications}\n          disabled={isLoading}\n          variant={subscription ? \"destructive\" : \"default\"}\n          size=\"sm\"\n        >\n          {isLoading ? (\n            <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n          ) : subscription ? (\n            \"Disable\"\n          ) : (\n            \"Enable\"\n          )}\n        </Button>\n      </div>\n      \n      {permission === 'denied' && (\n        <Alert className=\"mt-3\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertDescription>\n            Notifications are blocked. Please enable them in your browser settings.\n          </AlertDescription>\n        </Alert>\n      )}\n    </Card>\n  )\n}\n\n// Cache Management Component\ninterface CacheManagementProps {\n  className?: string\n}\n\nexport const CacheManagement: React.FC<CacheManagementProps> = ({ className }) => {\n  const { cacheSize, cacheStatus, isLoading, getCacheInfo, clearCache } = useCacheManagement()\n  const [isClearing, setIsClearing] = useState(false)\n  \n  const handleClearCache = async () => {\n    setIsClearing(true)\n    await clearCache()\n    setIsClearing(false)\n  }\n  \n  const formatBytes = (bytes: number) => {\n    if (bytes === 0) return '0 Bytes'\n    const k = 1024\n    const sizes = ['Bytes', 'KB', 'MB', 'GB']\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n  }\n  \n  return (\n    <Card className={cn(\"p-4\", className)}>\n      <div className=\"space-y-4\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <HardDrive className=\"h-5 w-5 text-blue-600\" />\n            <div>\n              <h3 className=\"font-semibold\">Storage & Cache</h3>\n              <p className=\"text-sm text-gray-600\">\n                {cacheSize > 0 ? formatBytes(cacheSize) : 'Calculating...'}\n              </p>\n            </div>\n          </div>\n          \n          <div className=\"flex space-x-2\">\n            <Button\n              onClick={getCacheInfo}\n              disabled={isLoading}\n              variant=\"outline\"\n              size=\"sm\"\n            >\n              {isLoading ? (\n                <Loader2 className=\"h-4 w-4\" />\n              ) : (\n                <RefreshCw className=\"h-4 w-4\" />\n              )}\n            </Button>\n            \n            <Button\n              onClick={handleClearCache}\n              disabled={isClearing}\n              variant=\"destructive\"\n              size=\"sm\"\n            >\n              {isClearing ? (\n                <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n              ) : (\n                \"Clear\"\n              )}\n            </Button>\n          </div>\n        </div>\n        \n        {cacheStatus && (\n          <div className=\"grid grid-cols-2 gap-2 text-xs\">\n            {Object.entries(cacheStatus.caches).map(([name, count]) => (\n              <div key={name} className=\"flex justify-between p-2 bg-gray-50 rounded\">\n                <span className=\"truncate\">{name.replace('hasivu-', '')}</span>\n                <span className=\"font-mono\">{count}</span>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </Card>\n  )\n}\n\n// Battery Status Component\ninterface BatteryStatusProps {\n  className?: string\n}\n\nexport const BatteryStatus: React.FC<BatteryStatusProps> = ({ className }) => {\n  const { batteryLevel, isCharging, isSupported, isLowBattery } = useBatteryStatus()\n  \n  if (!isSupported) {\n    return null\n  }\n  \n  return (\n    <div className={cn(\"flex items-center space-x-2 p-2 rounded-lg\", className, {\n      \"bg-red-50 text-red-800\": isLowBattery && !isCharging,\n      \"bg-yellow-50 text-yellow-800\": isLowBattery && isCharging,\n      \"bg-green-50 text-green-800\": !isLowBattery\n    })}>\n      <Battery className={cn(\"h-4 w-4\", {\n        \"text-red-600\": isLowBattery && !isCharging,\n        \"text-yellow-600\": isCharging,\n        \"text-green-600\": !isLowBattery\n      })} />\n      \n      <span className=\"text-sm font-medium\">\n        {batteryLevel !== null ? `${Math.round(batteryLevel * 100)}%` : 'Unknown'}\n        {isCharging && ' (Charging)'}\n      </span>\n      \n      {isLowBattery && !isCharging && (\n        <Badge variant=\"destructive\" className=\"text-xs\">\n          Low Battery\n        </Badge>\n      )}\n    </div>\n  )\n}\n\n// PWA Status Dashboard\ninterface PWAStatusDashboardProps {\n  className?: string\n}\n\nexport const PWAStatusDashboard: React.FC<PWAStatusDashboardProps> = ({ className }) => {\n  return (\n    <div className={cn(\"space-y-4\", className)}>\n      <PWAInstallPrompt />\n      \n      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n        <NetworkStatus />\n        <BatteryStatus />\n      </div>\n      \n      <PushNotificationSettings />\n      <CacheManagement />\n    </div>\n  )\n}","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/PWAFeatures.tsx",["2378","2379","2380","2381","2382","2383","2384","2385","2386"],[],"\"use client\"\n\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Card } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { cn } from '@/lib/utils'\nimport { \n  Bell, \n  Download, \n  Wifi, \n  WifiOff, \n  Battery, \n  Signal,\n  Smartphone,\n  Share,\n  X,\n  CheckCircle,\n  AlertCircle,\n  Clock\n} from 'lucide-react'\n\n// PWA Install Prompt Component\ninterface PWAInstallPromptProps {\n  onInstall: () => void\n  onDismiss: () => void\n  variant?: 'card' | 'banner' | 'fab'\n}\n\nexport const PWAInstallPrompt: React.FC<PWAInstallPromptProps> = ({\n  onInstall,\n  onDismiss,\n  variant = 'card'\n}) => {\n  if (variant === 'banner') {\n    return (\n      <div className=\"fixed top-0 left-0 right-0 z-50 bg-primary text-white p-3 safe-area-pt animate-slide-down\">\n        <div className=\"flex items-center justify-between max-w-md mx-auto\">\n          <div className=\"flex items-center space-x-3\">\n            <Smartphone className=\"h-5 w-5\" />\n            <div>\n              <p className=\"text-sm font-medium\">Install HASIVU App</p>\n              <p className=\"text-xs opacity-90\">For a better experience</p>\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <Button size=\"sm\" variant=\"secondary\" onClick={onInstall}>\n              Install\n            </Button>\n            <Button size=\"sm\" variant=\"ghost\" onClick={onDismiss} className=\"text-white\">\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  if (variant === 'fab') {\n    return (\n      <Button\n        variant=\"fab\"\n        onClick={onInstall}\n        className=\"fixed bottom-20 right-4 z-40 shadow-xl\"\n        haptic\n      >\n        <Download className=\"h-6 w-6\" />\n      </Button>\n    )\n  }\n\n  return (\n    <Card className=\"fixed bottom-20 left-4 right-4 z-40 mx-auto max-w-md border-primary/20 bg-gradient-to-r from-primary/5 to-blue-50 animate-slide-in-bottom\">\n      <div className=\"p-4\">\n        <div className=\"flex items-start space-x-3\">\n          <div className=\"p-2 bg-primary/10 rounded-lg\">\n            <Smartphone className=\"h-6 w-6 text-primary\" />\n          </div>\n          <div className=\"flex-1\">\n            <h4 className=\"font-semibold text-gray-900\">Install HASIVU App</h4>\n            <p className=\"text-sm text-gray-600 mt-1\">\n              Get faster access, offline features, and push notifications.\n            </p>\n            <div className=\"flex space-x-2 mt-3\">\n              <Button size=\"sm\" onClick={onInstall} haptic>\n                Install Now\n              </Button>\n              <Button size=\"sm\" variant=\"ghost\" onClick={onDismiss}>\n                Not now\n              </Button>\n            </div>\n          </div>\n          <Button\n            size=\"sm\"\n            variant=\"ghost\"\n            onClick={onDismiss}\n            className=\"h-6 w-6 p-0\"\n          >\n            <X className=\"h-3 w-3\" />\n          </Button>\n        </div>\n      </div>\n    </Card>\n  )\n}\n\n// Offline Status Indicator\ninterface OfflineStatusProps {\n  isOnline: boolean\n  onRetry?: () => void\n  className?: string\n}\n\nexport const OfflineStatus: React.FC<OfflineStatusProps> = ({\n  isOnline,\n  onRetry,\n  className\n}) => {\n  const [showBanner, setShowBanner] = useState(false)\n\n  useEffect(() => {\n    setShowBanner(!isOnline)\n  }, [isOnline])\n\n  if (!showBanner) return null\n\n  return (\n    <div className={cn(\n      \"fixed top-0 left-0 right-0 z-50 bg-orange-500 text-white p-3 safe-area-pt animate-slide-down\",\n      className\n    )}>\n      <div className=\"flex items-center justify-between max-w-md mx-auto\">\n        <div className=\"flex items-center space-x-3\">\n          <WifiOff className=\"h-5 w-5\" />\n          <div>\n            <p className=\"text-sm font-medium\">You're offline</p>\n            <p className=\"text-xs opacity-90\">Some features may be limited</p>\n          </div>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          {onRetry && (\n            <Button\n              size=\"sm\"\n              variant=\"ghost\"\n              onClick={onRetry}\n              className=\"text-white hover:bg-white/20\"\n            >\n              Retry\n            </Button>\n          )}\n          <Button\n            size=\"sm\"\n            variant=\"ghost\"\n            onClick={() => setShowBanner(false)}\n            className=\"h-6 w-6 p-0 text-white hover:bg-white/20\"\n          >\n            <X className=\"h-3 w-3\" />\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n// Push Notification Permission\ninterface NotificationPermissionProps {\n  onPermissionGranted?: () => void\n  onPermissionDenied?: () => void\n}\n\nexport const NotificationPermission: React.FC<NotificationPermissionProps> = ({\n  onPermissionGranted,\n  onPermissionDenied\n}) => {\n  const [permission, setPermission] = useState<NotificationPermission>('default')\n  const [showPrompt, setShowPrompt] = useState(false)\n\n  useEffect(() => {\n    if ('Notification' in window) {\n      setPermission(Notification.permission)\n      \n      // Show prompt after 5 seconds if permission is default\n      if (Notification.permission === 'default') {\n        const timer = setTimeout(() => setShowPrompt(true), 5000)\n        return () => clearTimeout(timer)\n      }\n    }\n  }, [])\n\n  const requestPermission = useCallback(async () => {\n    if ('Notification' in window) {\n      try {\n        const result = await Notification.requestPermission()\n        setPermission(result)\n        setShowPrompt(false)\n        \n        if (result === 'granted') {\n          onPermissionGranted?.()\n          // Show test notification\n          new Notification('HASIVU Notifications Enabled', {\n            body: 'You\\'ll now receive updates about your orders and meal schedules.',\n            icon: '/icons/icon-192x192.png',\n            badge: '/icons/icon-72x72.png'\n          })\n        } else {\n          onPermissionDenied?.()\n        }\n      } catch (error) {\n        console.error('Error requesting notification permission:', error)\n      }\n    }\n  }, [onPermissionGranted, onPermissionDenied])\n\n  if (!('Notification' in window) || permission === 'granted' || !showPrompt) {\n    return null\n  }\n\n  return (\n    <Card className=\"fixed bottom-20 left-4 right-4 z-40 mx-auto max-w-md border-blue-200 bg-blue-50 animate-slide-in-bottom\">\n      <div className=\"p-4\">\n        <div className=\"flex items-start space-x-3\">\n          <div className=\"p-2 bg-blue-100 rounded-lg\">\n            <Bell className=\"h-6 w-6 text-blue-600\" />\n          </div>\n          <div className=\"flex-1\">\n            <h4 className=\"font-semibold text-gray-900\">Stay Updated</h4>\n            <p className=\"text-sm text-gray-600 mt-1\">\n              Get notified about order status, meal schedules, and important updates.\n            </p>\n            <div className=\"flex space-x-2 mt-3\">\n              <Button size=\"sm\" onClick={requestPermission} haptic>\n                Allow Notifications\n              </Button>\n              <Button size=\"sm\" variant=\"ghost\" onClick={() => setShowPrompt(false)}>\n                Not now\n              </Button>\n            </div>\n          </div>\n          <Button\n            size=\"sm\"\n            variant=\"ghost\"\n            onClick={() => setShowPrompt(false)}\n            className=\"h-6 w-6 p-0\"\n          >\n            <X className=\"h-3 w-3\" />\n          </Button>\n        </div>\n      </div>\n    </Card>\n  )\n}\n\n// Network Status Indicator (for status bar)\nexport const NetworkStatusIndicator: React.FC = () => {\n  const [isOnline, setIsOnline] = useState(navigator.onLine)\n  const [connectionType, setConnectionType] = useState<string>('unknown')\n\n  useEffect(() => {\n    const handleOnline = () => setIsOnline(true)\n    const handleOffline = () => setIsOnline(false)\n\n    window.addEventListener('online', handleOnline)\n    window.addEventListener('offline', handleOffline)\n\n    // Get connection info if available\n    if ('connection' in navigator) {\n      const connection = (navigator as any).connection\n      setConnectionType(connection.effectiveType || 'unknown')\n      \n      const handleConnectionChange = () => {\n        setConnectionType(connection.effectiveType || 'unknown')\n      }\n      \n      connection.addEventListener('change', handleConnectionChange)\n      \n      return () => {\n        window.removeEventListener('online', handleOnline)\n        window.removeEventListener('offline', handleOffline)\n        connection.removeEventListener('change', handleConnectionChange)\n      }\n    }\n\n    return () => {\n      window.removeEventListener('online', handleOnline)\n      window.removeEventListener('offline', handleOffline)\n    }\n  }, [])\n\n  return (\n    <div className=\"flex items-center space-x-1\">\n      {isOnline ? (\n        <>\n          <Wifi className=\"h-4 w-4 text-green-600\" />\n          <span className=\"text-xs text-green-600 font-medium\">\n            {connectionType !== 'unknown' ? connectionType.toUpperCase() : 'Online'}\n          </span>\n        </>\n      ) : (\n        <>\n          <WifiOff className=\"h-4 w-4 text-red-600\" />\n          <span className=\"text-xs text-red-600 font-medium\">Offline</span>\n        </>\n      )}\n    </div>\n  )\n}\n\n// Background Sync Status\ninterface BackgroundSyncStatusProps {\n  pendingActions: Array<{\n    id: string\n    type: 'order' | 'payment' | 'feedback'\n    description: string\n    timestamp: Date\n  }>\n  onRetryAction?: (actionId: string) => void\n}\n\nexport const BackgroundSyncStatus: React.FC<BackgroundSyncStatusProps> = ({\n  pendingActions,\n  onRetryAction\n}) => {\n  if (pendingActions.length === 0) return null\n\n  return (\n    <Card className=\"mx-4 mb-4 border-amber-200 bg-amber-50\">\n      <div className=\"p-3\">\n        <div className=\"flex items-center space-x-2 mb-2\">\n          <Clock className=\"h-4 w-4 text-amber-600\" />\n          <span className=\"text-sm font-medium text-amber-800\">\n            Pending Actions ({pendingActions.length})\n          </span>\n        </div>\n        <p className=\"text-xs text-amber-700 mb-3\">\n          These actions will be completed when you're back online.\n        </p>\n        <div className=\"space-y-2\">\n          {pendingActions.slice(0, 3).map((action) => (\n            <div key={action.id} className=\"flex items-center justify-between\">\n              <div className=\"flex-1\">\n                <p className=\"text-sm text-gray-900\">{action.description}</p>\n                <p className=\"text-xs text-gray-500\">\n                  {action.timestamp.toLocaleTimeString()}\n                </p>\n              </div>\n              {onRetryAction && (\n                <Button\n                  size=\"sm\"\n                  variant=\"ghost\"\n                  onClick={() => onRetryAction(action.id)}\n                  className=\"h-6 px-2 text-xs\"\n                >\n                  Retry\n                </Button>\n              )}\n            </div>\n          ))}\n        </div>\n        {pendingActions.length > 3 && (\n          <p className=\"text-xs text-amber-600 mt-2\">\n            +{pendingActions.length - 3} more actions pending\n          </p>\n        )}\n      </div>\n    </Card>\n  )\n}\n\n// Share functionality for PWA\ninterface ShareButtonProps {\n  title: string\n  text: string\n  url?: string\n  className?: string\n  variant?: 'button' | 'icon'\n}\n\nexport const ShareButton: React.FC<ShareButtonProps> = ({\n  title,\n  text,\n  url = window.location.href,\n  className,\n  variant = 'button'\n}) => {\n  const [canShare, setCanShare] = useState(false)\n\n  useEffect(() => {\n    setCanShare('share' in navigator)\n  }, [])\n\n  const handleShare = useCallback(async () => {\n    if ('share' in navigator) {\n      try {\n        await navigator.share({ title, text, url })\n        \n        if ('vibrate' in navigator) {\n          navigator.vibrate(10)\n        }\n      } catch (error) {\n        // User cancelled or error occurred\n        console.log('Share cancelled or failed:', error)\n      }\n    } else {\n      // Fallback to clipboard\n      try {\n        await navigator.clipboard.writeText(`${title}\\n${text}\\n${url}`)\n        // Show toast notification\n        alert('Link copied to clipboard!')\n      } catch (error) {\n        console.error('Failed to copy to clipboard:', error)\n      }\n    }\n  }, [title, text, url])\n\n  if (!canShare && !('clipboard' in navigator)) {\n    return null\n  }\n\n  if (variant === 'icon') {\n    return (\n      <Button\n        variant=\"ghost\"\n        size=\"icon\"\n        onClick={handleShare}\n        className={className}\n        haptic\n      >\n        <Share className=\"h-4 w-4\" />\n      </Button>\n    )\n  }\n\n  return (\n    <Button\n      variant=\"outline\"\n      onClick={handleShare}\n      className={className}\n      haptic\n    >\n      <Share className=\"h-4 w-4 mr-2\" />\n      Share\n    </Button>\n  )\n}\n\n// Emergency notification banner for school emergencies\ninterface EmergencyBannerProps {\n  message: string\n  type: 'emergency' | 'alert' | 'info'\n  onDismiss?: () => void\n  actionButton?: {\n    text: string\n    action: () => void\n  }\n}\n\nexport const EmergencyBanner: React.FC<EmergencyBannerProps> = ({\n  message,\n  type,\n  onDismiss,\n  actionButton\n}) => {\n  const colors = {\n    emergency: 'bg-red-600 text-white',\n    alert: 'bg-orange-500 text-white',\n    info: 'bg-blue-600 text-white'\n  }\n\n  const icons = {\n    emergency: <AlertCircle className=\"h-5 w-5\" />,\n    alert: <AlertCircle className=\"h-5 w-5\" />,\n    info: <Bell className=\"h-5 w-5\" />\n  }\n\n  return (\n    <div className={cn(\n      \"fixed top-0 left-0 right-0 z-50 p-3 safe-area-pt animate-slide-down\",\n      colors[type]\n    )}>\n      <div className=\"flex items-center space-x-3 max-w-md mx-auto\">\n        {icons[type]}\n        <p className=\"flex-1 text-sm font-medium\">{message}</p>\n        <div className=\"flex items-center space-x-2\">\n          {actionButton && (\n            <Button\n              size=\"sm\"\n              variant=\"ghost\"\n              onClick={actionButton.action}\n              className=\"text-current border-current hover:bg-white/20\"\n            >\n              {actionButton.text}\n            </Button>\n          )}\n          {onDismiss && (\n            <Button\n              size=\"sm\"\n              variant=\"ghost\"\n              onClick={onDismiss}\n              className=\"h-6 w-6 p-0 text-current hover:bg-white/20\"\n            >\n              <X className=\"h-3 w-3\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\n// Quick RFID display for easy scanning\ninterface QuickRFIDDisplayProps {\n  rfidCode: string\n  studentName: string\n  onCopy?: () => void\n}\n\nexport const QuickRFIDDisplay: React.FC<QuickRFIDDisplayProps> = ({\n  rfidCode,\n  studentName,\n  onCopy\n}) => {\n  const handleCopy = useCallback(async () => {\n    try {\n      await navigator.clipboard.writeText(rfidCode)\n      onCopy?.()\n      \n      if ('vibrate' in navigator) {\n        navigator.vibrate(20)\n      }\n    } catch (error) {\n      console.error('Failed to copy RFID code:', error)\n    }\n  }, [rfidCode, onCopy])\n\n  return (\n    <Card className=\"mx-4 mb-4 bg-gradient-to-r from-blue-50 to-purple-50 border-blue-200\">\n      <div className=\"p-4 text-center\">\n        <h3 className=\"font-semibold text-gray-900 mb-1\">Your RFID Code</h3>\n        <p className=\"text-sm text-gray-600 mb-3\">{studentName}</p>\n        \n        <div className=\"bg-white rounded-lg p-4 mb-3 border-2 border-dashed border-blue-300\">\n          <div className=\"font-mono text-2xl font-bold text-blue-600 tracking-wider\">\n            {rfidCode}\n          </div>\n        </div>\n        \n        <Button\n          size=\"sm\"\n          variant=\"outline\"\n          onClick={handleCopy}\n          className=\"text-blue-600 border-blue-300\"\n          haptic\n        >\n          Copy Code\n        </Button>\n        \n        <p className=\"text-xs text-gray-500 mt-2\">\n          Show this code to the scanner during meal pickup\n        </p>\n      </div>\n    </Card>\n  )\n}","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/SchoolMobileComponents.tsx",["2387","2388","2389","2390","2391","2392","2393","2394","2395","2396"],[],"\"use client\"\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { cn } from '@/lib/utils'\nimport { Button } from '@/components/ui/button'\nimport { Card } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Progress } from '@/components/ui/progress'\nimport { SwipeableCard, TouchContainer, PullToRefresh } from './TouchOptimized'\nimport { BottomSheet, useBottomSheet } from './BottomSheet'\nimport { ShareButton } from './PWAFeatures'\nimport {\n  Clock,\n  MapPin,\n  Users,\n  Star,\n  Heart,\n  ShoppingCart,\n  CheckCircle,\n  AlertTriangle,\n  Utensils,\n  Timer,\n  Zap,\n  ArrowRight,\n  RefreshCw,\n  MessageCircle,\n  Camera,\n  Smartphone,\n  Plus,\n  Minus,\n  X\n} from 'lucide-react'\n\n// Quick meal ordering carousel for lunch breaks\ninterface QuickMealCarouselProps {\n  meals: Array<{\n    id: string\n    name: string\n    price: number\n    image: string\n    preparationTime: number\n    rating: number\n    isAvailable: boolean\n    isPopular?: boolean\n  }>\n  onOrderMeal: (mealId: string, quantity: number) => void\n  className?: string\n}\n\nexport const QuickMealCarousel: React.FC<QuickMealCarouselProps> = ({\n  meals,\n  onOrderMeal,\n  className\n}) => {\n  const [selectedQuantity, setSelectedQuantity] = useState<{ [key: string]: number }>({})\n  const scrollRef = useRef<HTMLDivElement>(null)\n\n  const updateQuantity = useCallback((mealId: string, delta: number) => {\n    setSelectedQuantity(prev => ({\n      ...prev,\n      [mealId]: Math.max(0, (prev[mealId] || 0) + delta)\n    }))\n  }, [])\n\n  const handleQuickOrder = useCallback((mealId: string) => {\n    const quantity = selectedQuantity[mealId] || 1\n    onOrderMeal(mealId, quantity)\n    \n    // Reset quantity\n    setSelectedQuantity(prev => ({ ...prev, [mealId]: 0 }))\n    \n    // Haptic feedback\n    if ('vibrate' in navigator) {\n      navigator.vibrate([20, 10, 20])\n    }\n  }, [selectedQuantity, onOrderMeal])\n\n  return (\n    <div className={cn(\"space-y-3\", className)}>\n      <div className=\"flex items-center justify-between px-4\">\n        <h2 className=\"text-lg font-bold text-gray-900\">Quick Order</h2>\n        <Badge variant=\"secondary\" className=\"text-xs\">\n          <Clock className=\"h-3 w-3 mr-1\" />\n          Fast pickup\n        </Badge>\n      </div>\n\n      <div\n        ref={scrollRef}\n        className=\"flex space-x-3 overflow-x-auto scrollbar-none px-4 snap-x snap-mandatory\"\n      >\n        {meals.map((meal) => (\n          <TouchContainer\n            key={meal.id}\n            className=\"flex-none w-72 snap-start\"\n            hapticFeedback\n          >\n            <Card className={cn(\n              \"relative overflow-hidden transition-all duration-200\",\n              !meal.isAvailable && \"opacity-60\"\n            )}>\n              {/* Popular badge */}\n              {meal.isPopular && (\n                <div className=\"absolute top-2 left-2 z-10\">\n                  <Badge className=\"bg-orange-500 text-white text-xs px-2 py-1\">\n                    <Star className=\"h-3 w-3 mr-1\" />\n                    Popular\n                  </Badge>\n                </div>\n              )}\n\n              {/* Meal image */}\n              <div className=\"relative h-32 bg-gray-100\">\n                <img\n                  src={meal.image}\n                  alt={meal.name}\n                  className=\"w-full h-full object-cover\"\n                />\n                <div className=\"absolute inset-0 bg-gradient-to-t from-black/20 to-transparent\" />\n                \n                {/* Quick add button */}\n                <div className=\"absolute bottom-2 right-2\">\n                  <Button\n                    size=\"fabSmall\"\n                    variant=\"floating\"\n                    onClick={() => updateQuantity(meal.id, 1)}\n                    disabled={!meal.isAvailable}\n                    haptic\n                  >\n                    <Plus className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n\n              {/* Meal info */}\n              <div className=\"p-3 space-y-2\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1 min-w-0\">\n                    <h3 className=\"font-semibold text-gray-900 truncate\">{meal.name}</h3>\n                    <div className=\"flex items-center space-x-2 mt-1\">\n                      <span className=\"text-lg font-bold text-green-600\">₹{meal.price}</span>\n                      <div className=\"flex items-center space-x-1\">\n                        <Star className=\"h-3 w-3 text-yellow-500 fill-current\" />\n                        <span className=\"text-xs text-gray-500\">{meal.rating}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"flex items-center justify-between text-xs text-gray-500\">\n                  <div className=\"flex items-center space-x-1\">\n                    <Timer className=\"h-3 w-3\" />\n                    <span>{meal.preparationTime} min</span>\n                  </div>\n                  <div className={cn(\n                    \"flex items-center space-x-1\",\n                    meal.isAvailable ? \"text-green-600\" : \"text-red-600\"\n                  )}>\n                    <div className={cn(\n                      \"w-2 h-2 rounded-full\",\n                      meal.isAvailable ? \"bg-green-500\" : \"bg-red-500\"\n                    )} />\n                    <span>{meal.isAvailable ? \"Available\" : \"Sold out\"}</span>\n                  </div>\n                </div>\n\n                {/* Quantity selector and order button */}\n                {(selectedQuantity[meal.id] || 0) > 0 && (\n                  <div className=\"flex items-center justify-between pt-2 border-t\">\n                    <div className=\"flex items-center space-x-2\">\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => updateQuantity(meal.id, -1)}\n                        className=\"h-8 w-8 p-0\"\n                        haptic\n                      >\n                        <Minus className=\"h-3 w-3\" />\n                      </Button>\n                      <span className=\"font-semibold text-lg w-8 text-center\">\n                        {selectedQuantity[meal.id]}\n                      </span>\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => updateQuantity(meal.id, 1)}\n                        className=\"h-8 w-8 p-0\"\n                        haptic\n                      >\n                        <Plus className=\"h-3 w-3\" />\n                      </Button>\n                    </div>\n                    <Button\n                      size=\"sm\"\n                      onClick={() => handleQuickOrder(meal.id)}\n                      disabled={!meal.isAvailable}\n                      className=\"px-4\"\n                      haptic\n                    >\n                      Add ₹{meal.price * selectedQuantity[meal.id]}\n                    </Button>\n                  </div>\n                )}\n              </div>\n            </Card>\n          </TouchContainer>\n        ))}\n      </div>\n    </div>\n  )\n}\n\n// Live order tracking for mobile\ninterface LiveOrderTrackingProps {\n  order: {\n    id: string\n    items: Array<{ name: string; quantity: number }>\n    status: 'placed' | 'preparing' | 'ready' | 'completed'\n    estimatedTime: number\n    actualTime?: number\n    pickupLocation: string\n  }\n  onRefresh?: () => void\n}\n\nexport const LiveOrderTracking: React.FC<LiveOrderTrackingProps> = ({\n  order,\n  onRefresh\n}) => {\n  const [timeRemaining, setTimeRemaining] = useState(order.estimatedTime)\n\n  useEffect(() => {\n    if (order.status === 'preparing') {\n      const interval = setInterval(() => {\n        setTimeRemaining(prev => Math.max(0, prev - 1))\n      }, 60000) // Update every minute\n\n      return () => clearInterval(interval)\n    }\n  }, [order.status])\n\n  const getStatusInfo = (status: string) => {\n    switch (status) {\n      case 'placed':\n        return { color: 'bg-blue-500', icon: <Clock className=\"h-4 w-4\" />, text: 'Order Placed' }\n      case 'preparing':\n        return { color: 'bg-orange-500', icon: <Utensils className=\"h-4 w-4\" />, text: 'Preparing' }\n      case 'ready':\n        return { color: 'bg-green-500', icon: <CheckCircle className=\"h-4 w-4\" />, text: 'Ready for Pickup' }\n      case 'completed':\n        return { color: 'bg-gray-500', icon: <CheckCircle className=\"h-4 w-4\" />, text: 'Completed' }\n      default:\n        return { color: 'bg-gray-400', icon: <Clock className=\"h-4 w-4\" />, text: 'Unknown' }\n    }\n  }\n\n  const statusInfo = getStatusInfo(order.status)\n  const progress = (() => {\n    switch (order.status) {\n      case 'placed': return 25\n      case 'preparing': return 50\n      case 'ready': return 100\n      case 'completed': return 100\n      default: return 0\n    }\n  })()\n\n  return (\n    <Card className=\"mx-4 mb-4 border-l-4 border-l-primary\">\n      <div className=\"p-4\">\n        {/* Header with refresh */}\n        <div className=\"flex items-center justify-between mb-3\">\n          <div className=\"flex items-center space-x-2\">\n            <div className={cn(\"p-2 rounded-full text-white\", statusInfo.color)}>\n              {statusInfo.icon}\n            </div>\n            <div>\n              <h3 className=\"font-semibold text-gray-900\">Order #{order.id.slice(-6)}</h3>\n              <p className=\"text-sm text-gray-600\">{statusInfo.text}</p>\n            </div>\n          </div>\n          \n          {onRefresh && (\n            <Button\n              size=\"sm\"\n              variant=\"ghost\"\n              onClick={onRefresh}\n              className=\"h-8 w-8 p-0\"\n              haptic\n            >\n              <RefreshCw className=\"h-4 w-4\" />\n            </Button>\n          )}\n        </div>\n\n        {/* Progress bar */}\n        <div className=\"mb-4\">\n          <Progress value={progress} className=\"h-2\" />\n        </div>\n\n        {/* Time remaining */}\n        {order.status === 'preparing' && timeRemaining > 0 && (\n          <div className=\"flex items-center justify-center mb-4 p-3 bg-orange-50 rounded-lg\">\n            <Timer className=\"h-5 w-5 text-orange-600 mr-2\" />\n            <div className=\"text-center\">\n              <p className=\"font-semibold text-orange-900\">\n                {timeRemaining} min remaining\n              </p>\n              <p className=\"text-sm text-orange-700\">Estimated time</p>\n            </div>\n          </div>\n        )}\n\n        {/* Ready for pickup */}\n        {order.status === 'ready' && (\n          <div className=\"flex items-center justify-center mb-4 p-3 bg-green-50 rounded-lg animate-pulse\">\n            <CheckCircle className=\"h-5 w-5 text-green-600 mr-2\" />\n            <div className=\"text-center\">\n              <p className=\"font-semibold text-green-900\">Ready for pickup!</p>\n              <p className=\"text-sm text-green-700\">{order.pickupLocation}</p>\n            </div>\n          </div>\n        )}\n\n        {/* Order items */}\n        <div className=\"space-y-2\">\n          <h4 className=\"text-sm font-medium text-gray-700\">Items ordered:</h4>\n          {order.items.map((item, index) => (\n            <div key={index} className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-600\">{item.name}</span>\n              <span className=\"text-gray-900\">x{item.quantity}</span>\n            </div>\n          ))}\n        </div>\n\n        {/* Pickup location */}\n        <div className=\"flex items-center mt-3 pt-3 border-t\">\n          <MapPin className=\"h-4 w-4 text-gray-500 mr-2\" />\n          <span className=\"text-sm text-gray-600\">Pickup: {order.pickupLocation}</span>\n        </div>\n      </div>\n    </Card>\n  )\n}\n\n// Parent approval interface for mobile\ninterface ParentApprovalProps {\n  pendingOrders: Array<{\n    id: string\n    studentName: string\n    items: Array<{ name: string; price: number; quantity: number }>\n    total: number\n    requestedTime: Date\n    dietaryNotes?: string\n  }>\n  onApprove: (orderId: string) => void\n  onReject: (orderId: string, reason?: string) => void\n  onModify: (orderId: string) => void\n}\n\nexport const ParentApprovalInterface: React.FC<ParentApprovalProps> = ({\n  pendingOrders,\n  onApprove,\n  onReject,\n  onModify\n}) => {\n  const rejectSheet = useBottomSheet()\n  const [selectedOrderId, setSelectedOrderId] = useState<string>('')\n  const [rejectReason, setRejectReason] = useState('')\n\n  const handleReject = useCallback((orderId: string) => {\n    setSelectedOrderId(orderId)\n    rejectSheet.open()\n  }, [rejectSheet])\n\n  const confirmReject = useCallback(() => {\n    if (selectedOrderId) {\n      onReject(selectedOrderId, rejectReason)\n      setRejectReason('')\n      rejectSheet.close()\n    }\n  }, [selectedOrderId, rejectReason, onReject, rejectSheet])\n\n  if (pendingOrders.length === 0) {\n    return (\n      <div className=\"text-center py-8\">\n        <CheckCircle className=\"h-12 w-12 text-green-500 mx-auto mb-3\" />\n        <h3 className=\"font-semibold text-gray-900 mb-1\">All caught up!</h3>\n        <p className=\"text-gray-600\">No pending meal approvals</p>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <div className=\"space-y-4\">\n        <div className=\"flex items-center justify-between px-4\">\n          <h2 className=\"text-lg font-bold text-gray-900\">Pending Approvals</h2>\n          <Badge variant=\"destructive\" className=\"px-2 py-1\">\n            {pendingOrders.length} pending\n          </Badge>\n        </div>\n\n        {pendingOrders.map((order) => (\n          <SwipeableCard\n            key={order.id}\n            className=\"mx-4\"\n            leftAction={{\n              icon: <X className=\"h-5 w-5\" />,\n              color: \"bg-red-500 text-white\",\n              label: \"Reject\"\n            }}\n            rightAction={{\n              icon: <CheckCircle className=\"h-5 w-5\" />,\n              color: \"bg-green-500 text-white\",\n              label: \"Approve\"\n            }}\n            onSwipeLeft={() => handleReject(order.id)}\n            onSwipeRight={() => onApprove(order.id)}\n          >\n            <Card className=\"border-amber-200 bg-amber-50\">\n              <div className=\"p-4\">\n                {/* Header */}\n                <div className=\"flex items-center justify-between mb-3\">\n                  <div>\n                    <h3 className=\"font-semibold text-gray-900\">{order.studentName}</h3>\n                    <p className=\"text-sm text-gray-600\">\n                      Requested {order.requestedTime.toLocaleTimeString()}\n                    </p>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-lg font-bold text-green-600\">₹{order.total}</p>\n                    <p className=\"text-xs text-gray-500\">Total</p>\n                  </div>\n                </div>\n\n                {/* Items */}\n                <div className=\"space-y-1 mb-3\">\n                  {order.items.map((item, index) => (\n                    <div key={index} className=\"flex justify-between text-sm\">\n                      <span className=\"text-gray-700\">\n                        {item.name} x{item.quantity}\n                      </span>\n                      <span className=\"text-gray-900\">₹{item.price * item.quantity}</span>\n                    </div>\n                  ))}\n                </div>\n\n                {/* Dietary notes */}\n                {order.dietaryNotes && (\n                  <div className=\"mb-3 p-2 bg-blue-50 rounded-lg\">\n                    <p className=\"text-xs text-blue-800 font-medium\">Dietary Note:</p>\n                    <p className=\"text-sm text-blue-700\">{order.dietaryNotes}</p>\n                  </div>\n                )}\n\n                {/* Action buttons */}\n                <div className=\"flex space-x-2 pt-3 border-t\">\n                  <Button\n                    size=\"sm\"\n                    variant=\"outline\"\n                    onClick={() => handleReject(order.id)}\n                    className=\"flex-1 text-red-600 border-red-300 hover:bg-red-50\"\n                    haptic\n                  >\n                    Reject\n                  </Button>\n                  <Button\n                    size=\"sm\"\n                    variant=\"outline\"\n                    onClick={() => onModify(order.id)}\n                    className=\"flex-1\"\n                    haptic\n                  >\n                    Modify\n                  </Button>\n                  <Button\n                    size=\"sm\"\n                    onClick={() => onApprove(order.id)}\n                    className=\"flex-1 bg-green-600 hover:bg-green-700\"\n                    haptic\n                  >\n                    Approve\n                  </Button>\n                </div>\n              </div>\n            </Card>\n          </SwipeableCard>\n        ))}\n      </div>\n\n      {/* Reject reason bottom sheet */}\n      <BottomSheet\n        isOpen={rejectSheet.isOpen}\n        onClose={rejectSheet.close}\n        title=\"Reject Order\"\n        snapPoints={[50]}\n      >\n        <div className=\"p-4 space-y-4\">\n          <p className=\"text-gray-600\">\n            Please provide a reason for rejecting this meal order:\n          </p>\n          \n          <div className=\"space-y-3\">\n            {[\n              \"Too expensive\",\n              \"Unhealthy choice\",\n              \"Already had lunch\",\n              \"Dietary restrictions\",\n              \"Other\"\n            ].map((reason) => (\n              <button\n                key={reason}\n                onClick={() => setRejectReason(reason)}\n                className={cn(\n                  \"w-full p-3 text-left rounded-lg border transition-colors\",\n                  rejectReason === reason\n                    ? \"border-primary bg-primary/5 text-primary\"\n                    : \"border-gray-200 hover:bg-gray-50\"\n                )}\n              >\n                {reason}\n              </button>\n            ))}\n          </div>\n\n          {rejectReason === \"Other\" && (\n            <textarea\n              placeholder=\"Please specify...\"\n              value={rejectReason === \"Other\" ? \"\" : rejectReason}\n              onChange={(e) => setRejectReason(e.target.value)}\n              className=\"w-full p-3 border rounded-lg resize-none\"\n              rows={3}\n            />\n          )}\n\n          <div className=\"flex space-x-3 pt-4\">\n            <Button\n              variant=\"outline\"\n              onClick={rejectSheet.close}\n              className=\"flex-1\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={confirmReject}\n              disabled={!rejectReason}\n              className=\"flex-1 bg-red-600 hover:bg-red-700\"\n              haptic\n            >\n              Reject Order\n            </Button>\n          </div>\n        </div>\n      </BottomSheet>\n    </>\n  )\n}\n\n// School schedule integration\ninterface SchoolScheduleIntegrationProps {\n  currentPeriod: {\n    subject: string\n    teacher: string\n    room: string\n    endTime: Date\n  }\n  nextMealTime: {\n    type: 'lunch' | 'snack'\n    time: Date\n    location: string\n  }\n  isOrderingOpen: boolean\n  onQuickOrder: () => void\n}\n\nexport const SchoolScheduleIntegration: React.FC<SchoolScheduleIntegrationProps> = ({\n  currentPeriod,\n  nextMealTime,\n  isOrderingOpen,\n  onQuickOrder\n}) => {\n  const [timeUntilMeal, setTimeUntilMeal] = useState('')\n\n  useEffect(() => {\n    const updateTime = () => {\n      const now = new Date()\n      const diff = nextMealTime.time.getTime() - now.getTime()\n      \n      if (diff > 0) {\n        const hours = Math.floor(diff / (1000 * 60 * 60))\n        const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60))\n        \n        if (hours > 0) {\n          setTimeUntilMeal(`${hours}h ${minutes}m`)\n        } else {\n          setTimeUntilMeal(`${minutes}m`)\n        }\n      } else {\n        setTimeUntilMeal('Now')\n      }\n    }\n\n    updateTime()\n    const interval = setInterval(updateTime, 60000)\n    return () => clearInterval(interval)\n  }, [nextMealTime.time])\n\n  return (\n    <Card className=\"mx-4 mb-4 bg-gradient-to-r from-blue-50 to-purple-50\">\n      <div className=\"p-4\">\n        {/* Current class */}\n        <div className=\"flex items-center justify-between mb-4\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"p-2 bg-blue-100 rounded-lg\">\n              <Clock className=\"h-5 w-5 text-blue-600\" />\n            </div>\n            <div>\n              <h3 className=\"font-semibold text-gray-900\">Current Class</h3>\n              <p className=\"text-sm text-gray-600\">\n                {currentPeriod.subject} • {currentPeriod.teacher}\n              </p>\n              <p className=\"text-xs text-gray-500\">\n                Room {currentPeriod.room} • Ends {currentPeriod.endTime.toLocaleTimeString()}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Next meal */}\n        <div className=\"bg-white rounded-lg p-3 border border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"p-2 bg-green-100 rounded-lg\">\n                <Utensils className=\"h-4 w-4 text-green-600\" />\n              </div>\n              <div>\n                <p className=\"font-medium text-gray-900 capitalize\">\n                  Next {nextMealTime.type}\n                </p>\n                <p className=\"text-sm text-gray-600\">\n                  {nextMealTime.location} • in {timeUntilMeal}\n                </p>\n              </div>\n            </div>\n            \n            {isOrderingOpen && (\n              <Button\n                size=\"sm\"\n                onClick={onQuickOrder}\n                className=\"px-4\"\n                haptic\n              >\n                <Zap className=\"h-4 w-4 mr-1\" />\n                Quick Order\n              </Button>\n            )}\n          </div>\n          \n          {!isOrderingOpen && (\n            <div className=\"mt-2 p-2 bg-amber-50 rounded border border-amber-200\">\n              <p className=\"text-xs text-amber-800\">\n                Ordering opens 30 minutes before {nextMealTime.type} time\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n    </Card>\n  )\n}","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/SwipeableCard.tsx",["2397","2398","2399","2400","2401","2402","2403","2404","2405","2406","2407","2408","2409"],[],"/**\n * SwipeableCard - Touch-friendly swipeable card component\n * Features: Swipe gestures, haptic feedback, smooth animations\n */\n\nimport React, { useRef, useState } from 'react';\nimport { motion, PanInfo, useMotionValue, useTransform } from 'framer-motion';\nimport { Heart, ShoppingCart, Info, Star, Clock, MapPin } from 'lucide-react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { cn } from '@/lib/utils';\n\ninterface SwipeAction {\n  id: string;\n  label: string;\n  icon: React.ComponentType<{ className?: string }>;\n  color: string;\n  bgColor: string;\n  action: () => void;\n}\n\ninterface SwipeableCardProps {\n  children: React.ReactNode;\n  leftActions?: SwipeAction[];\n  rightActions?: SwipeAction[];\n  onSwipe?: (direction: 'left' | 'right', actionId?: string) => void;\n  swipeThreshold?: number;\n  disabled?: boolean;\n  className?: string;\n}\n\nexport const SwipeableCard: React.FC<SwipeableCardProps> = ({\n  children,\n  leftActions = [],\n  rightActions = [],\n  onSwipe,\n  swipeThreshold = 80,\n  disabled = false,\n  className\n}) => {\n  const [isDragging, setIsDragging] = useState(false);\n  const [triggerHaptic, setTriggerHaptic] = useState(false);\n  const cardRef = useRef<HTMLDivElement>(null);\n  \n  const x = useMotionValue(0);\n  const opacity = useTransform(x, [-200, -100, 0, 100, 200], [0.5, 0.8, 1, 0.8, 0.5]);\n  const scale = useTransform(x, [-200, -100, 0, 100, 200], [0.9, 0.95, 1, 0.95, 0.9]);\n\n  const handleDragStart = () => {\n    if (disabled) return;\n    setIsDragging(true);\n    \n    // Light haptic feedback on drag start\n    if ('vibrate' in navigator && navigator.vibrate) {\n      navigator.vibrate(5);\n    }\n  };\n\n  const handleDragEnd = (event: any, info: PanInfo) => {\n    if (disabled) return;\n    \n    setIsDragging(false);\n    const swipeDistance = info.offset.x;\n    const velocity = info.velocity.x;\n    \n    // Determine if swipe threshold is met\n    const shouldSwipe = Math.abs(swipeDistance) > swipeThreshold || Math.abs(velocity) > 500;\n    \n    if (shouldSwipe) {\n      const direction = swipeDistance > 0 ? 'right' : 'left';\n      const actions = direction === 'right' ? rightActions : leftActions;\n      \n      // Find the appropriate action based on swipe distance\n      let selectedAction: SwipeAction | undefined;\n      if (actions.length > 0) {\n        const actionIndex = Math.min(\n          Math.floor(Math.abs(swipeDistance) / swipeThreshold) - 1,\n          actions.length - 1\n        );\n        selectedAction = actions[Math.max(0, actionIndex)];\n      }\n      \n      // Haptic feedback for successful swipe\n      if ('vibrate' in navigator && navigator.vibrate) {\n        navigator.vibrate(15);\n      }\n      \n      onSwipe?.(direction, selectedAction?.id);\n      selectedAction?.action();\n    }\n    \n    // Reset position\n    x.set(0);\n  };\n\n  const handleDrag = (event: any, info: PanInfo) => {\n    if (disabled) return;\n    \n    const swipeDistance = Math.abs(info.offset.x);\n    \n    // Trigger haptic feedback when passing threshold\n    if (swipeDistance > swipeThreshold && !triggerHaptic) {\n      setTriggerHaptic(true);\n      if ('vibrate' in navigator && navigator.vibrate) {\n        navigator.vibrate(10);\n      }\n    } else if (swipeDistance <= swipeThreshold && triggerHaptic) {\n      setTriggerHaptic(false);\n    }\n  };\n\n  const renderActionIndicators = (actions: SwipeAction[], side: 'left' | 'right') => {\n    if (actions.length === 0) return null;\n    \n    return (\n      <div className={cn(\n        'absolute top-0 bottom-0 flex items-center space-x-2 px-4',\n        side === 'left' ? 'left-0' : 'right-0'\n      )}>\n        {actions.map((action, index) => {\n          const Icon = action.icon;\n          return (\n            <motion.div\n              key={action.id}\n              className={cn(\n                'flex items-center justify-center',\n                'w-12 h-12 rounded-full',\n                action.bgColor,\n                'shadow-lg'\n              )}\n              initial={{ scale: 0 }}\n              animate={{ scale: triggerHaptic ? 1.1 : 1 }}\n              transition={{ type: 'spring', stiffness: 400, damping: 30 }}\n            >\n              <Icon className={cn('h-6 w-6', action.color)} />\n            </motion.div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <div className={cn('relative overflow-hidden', className)}>\n      {/* Background action indicators */}\n      {renderActionIndicators(leftActions, 'left')}\n      {renderActionIndicators(rightActions, 'right')}\n      \n      {/* Main card */}\n      <motion.div\n        ref={cardRef}\n        className=\"relative z-10\"\n        drag={disabled ? false : 'x'}\n        dragConstraints={{ left: 0, right: 0 }}\n        dragElastic={0.2}\n        onDragStart={handleDragStart}\n        onDrag={handleDrag}\n        onDragEnd={handleDragEnd}\n        style={{ x, opacity, scale }}\n        whileTap={{ scale: 0.98 }}\n        transition={{\n          type: 'spring',\n          stiffness: 400,\n          damping: 30\n        }}\n      >\n        <Card className={cn(\n          'touch-none select-none',\n          isDragging && 'shadow-xl',\n          disabled && 'opacity-50 cursor-not-allowed'\n        )}>\n          {children}\n        </Card>\n      </motion.div>\n\n      {/* Swipe instruction overlay for first-time users */}\n      {!disabled && (leftActions.length > 0 || rightActions.length > 0) && (\n        <motion.div\n          className=\"absolute inset-0 flex items-center justify-center bg-black/5 rounded-lg pointer-events-none\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: isDragging ? 0.3 : 0 }}\n          transition={{ duration: 0.2 }}\n        >\n          <div className=\"text-gray-600 text-sm font-medium\">\n            ← Swipe for actions →\n          </div>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\n// Preset swipe actions for meal cards\nexport const createMealCardActions = (\n  meal: any,\n  onAddToCart: (meal: any) => void,\n  onToggleFavorite: (meal: any) => void,\n  onViewDetails: (meal: any) => void,\n  isFavorite: boolean = false\n) => {\n  const leftActions: SwipeAction[] = [\n    {\n      id: 'favorite',\n      label: isFavorite ? 'Remove Favorite' : 'Add Favorite',\n      icon: Heart,\n      color: isFavorite ? 'text-red-500' : 'text-white',\n      bgColor: isFavorite ? 'bg-gray-100' : 'bg-red-500',\n      action: () => onToggleFavorite(meal),\n    }\n  ];\n\n  const rightActions: SwipeAction[] = [\n    {\n      id: 'info',\n      label: 'View Details',\n      icon: Info,\n      color: 'text-white',\n      bgColor: 'bg-blue-500',\n      action: () => onViewDetails(meal),\n    },\n    {\n      id: 'cart',\n      label: 'Add to Cart',\n      icon: ShoppingCart,\n      color: 'text-white',\n      bgColor: 'bg-green-500',\n      action: () => onAddToCart(meal),\n    }\n  ];\n\n  return { leftActions, rightActions };\n};\n\nexport default SwipeableCard;","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/TouchGestures.tsx",["2410","2411","2412","2413","2414","2415","2416","2417","2418"],[],"\"use client\"\n\nimport React, { useState, useRef, useCallback, useEffect, ReactNode } from 'react'\nimport { cn } from '@/lib/utils'\n\n// Touch gesture utilities\ninterface Touch {\n  x: number\n  y: number\n  time: number\n  id: number\n}\n\ninterface SwipeState {\n  startTouch: Touch | null\n  currentTouch: Touch | null\n  direction: 'left' | 'right' | 'up' | 'down' | null\n  distance: number\n  velocity: number\n  isActive: boolean\n}\n\ninterface PinchState {\n  touches: Touch[]\n  scale: number\n  initialDistance: number\n  center: { x: number; y: number }\n  isActive: boolean\n}\n\ninterface LongPressState {\n  touch: Touch | null\n  isActive: boolean\n  timer: NodeJS.Timeout | null\n}\n\n// Swipe Gesture Hook\nexport const useSwipeGesture = (\n  onSwipe?: (direction: 'left' | 'right' | 'up' | 'down', velocity: number) => void,\n  options: {\n    threshold?: number\n    velocityThreshold?: number\n    preventScroll?: boolean\n  } = {}\n) => {\n  const {\n    threshold = 50,\n    velocityThreshold = 0.3,\n    preventScroll = false\n  } = options\n\n  const [swipeState, setSwipeState] = useState<SwipeState>({\n    startTouch: null,\n    currentTouch: null,\n    direction: null,\n    distance: 0,\n    velocity: 0,\n    isActive: false\n  })\n\n  const handleTouchStart = useCallback((e: React.TouchEvent) => {\n    if (preventScroll) {\n      e.preventDefault()\n    }\n\n    const touch = e.touches[0]\n    const touchData: Touch = {\n      x: touch.clientX,\n      y: touch.clientY,\n      time: Date.now(),\n      id: touch.identifier\n    }\n\n    setSwipeState(prev => ({\n      ...prev,\n      startTouch: touchData,\n      currentTouch: touchData,\n      isActive: true,\n      direction: null,\n      distance: 0,\n      velocity: 0\n    }))\n  }, [preventScroll])\n\n  const handleTouchMove = useCallback((e: React.TouchEvent) => {\n    if (preventScroll) {\n      e.preventDefault()\n    }\n\n    const touch = Array.from(e.touches).find(t => t.identifier === swipeState.startTouch?.id)\n    if (!touch || !swipeState.startTouch) return\n\n    const currentTouch: Touch = {\n      x: touch.clientX,\n      y: touch.clientY,\n      time: Date.now(),\n      id: touch.identifier\n    }\n\n    const deltaX = currentTouch.x - swipeState.startTouch.x\n    const deltaY = currentTouch.y - swipeState.startTouch.y\n    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY)\n    \n    let direction: 'left' | 'right' | 'up' | 'down' | null = null\n    \n    if (Math.abs(deltaX) > Math.abs(deltaY)) {\n      direction = deltaX > 0 ? 'right' : 'left'\n    } else {\n      direction = deltaY > 0 ? 'down' : 'up'\n    }\n\n    const timeDelta = currentTouch.time - swipeState.startTouch.time\n    const velocity = timeDelta > 0 ? distance / timeDelta : 0\n\n    setSwipeState(prev => ({\n      ...prev,\n      currentTouch,\n      direction,\n      distance,\n      velocity\n    }))\n  }, [swipeState.startTouch, preventScroll])\n\n  const handleTouchEnd = useCallback((e: React.TouchEvent) => {\n    if (!swipeState.startTouch || !swipeState.currentTouch) return\n\n    const { distance, velocity, direction } = swipeState\n\n    if (distance >= threshold && velocity >= velocityThreshold && direction) {\n      onSwipe?.(direction, velocity)\n      \n      // Haptic feedback\n      if ('vibrate' in navigator) {\n        navigator.vibrate(25)\n      }\n    }\n\n    setSwipeState({\n      startTouch: null,\n      currentTouch: null,\n      direction: null,\n      distance: 0,\n      velocity: 0,\n      isActive: false\n    })\n  }, [swipeState, threshold, velocityThreshold, onSwipe])\n\n  return {\n    swipeState,\n    handlers: {\n      onTouchStart: handleTouchStart,\n      onTouchMove: handleTouchMove,\n      onTouchEnd: handleTouchEnd\n    }\n  }\n}\n\n// Pinch Gesture Hook\nexport const usePinchGesture = (\n  onPinch?: (scale: number, center: { x: number; y: number }) => void,\n  onPinchEnd?: (finalScale: number) => void,\n  options: {\n    threshold?: number\n  } = {}\n) => {\n  const { threshold = 0.1 } = options\n\n  const [pinchState, setPinchState] = useState<PinchState>({\n    touches: [],\n    scale: 1,\n    initialDistance: 0,\n    center: { x: 0, y: 0 },\n    isActive: false\n  })\n\n  const getDistance = useCallback((touch1: Touch, touch2: Touch) => {\n    const dx = touch1.x - touch2.x\n    const dy = touch1.y - touch2.y\n    return Math.sqrt(dx * dx + dy * dy)\n  }, [])\n\n  const getCenter = useCallback((touch1: Touch, touch2: Touch) => {\n    return {\n      x: (touch1.x + touch2.x) / 2,\n      y: (touch1.y + touch2.y) / 2\n    }\n  }, [])\n\n  const handleTouchStart = useCallback((e: React.TouchEvent) => {\n    if (e.touches.length === 2) {\n      const touches = Array.from(e.touches).map(touch => ({\n        x: touch.clientX,\n        y: touch.clientY,\n        time: Date.now(),\n        id: touch.identifier\n      }))\n\n      const initialDistance = getDistance(touches[0], touches[1])\n      const center = getCenter(touches[0], touches[1])\n\n      setPinchState({\n        touches,\n        scale: 1,\n        initialDistance,\n        center,\n        isActive: true\n      })\n    }\n  }, [getDistance, getCenter])\n\n  const handleTouchMove = useCallback((e: React.TouchEvent) => {\n    if (e.touches.length === 2 && pinchState.isActive) {\n      const touches = Array.from(e.touches).map(touch => ({\n        x: touch.clientX,\n        y: touch.clientY,\n        time: Date.now(),\n        id: touch.identifier\n      }))\n\n      const currentDistance = getDistance(touches[0], touches[1])\n      const scale = currentDistance / pinchState.initialDistance\n      const center = getCenter(touches[0], touches[1])\n\n      if (Math.abs(scale - 1) > threshold) {\n        onPinch?.(scale, center)\n      }\n\n      setPinchState(prev => ({\n        ...prev,\n        touches,\n        scale,\n        center\n      }))\n    }\n  }, [pinchState.isActive, pinchState.initialDistance, getDistance, getCenter, threshold, onPinch])\n\n  const handleTouchEnd = useCallback((e: React.TouchEvent) => {\n    if (e.touches.length < 2 && pinchState.isActive) {\n      onPinchEnd?.(pinchState.scale)\n      \n      setPinchState({\n        touches: [],\n        scale: 1,\n        initialDistance: 0,\n        center: { x: 0, y: 0 },\n        isActive: false\n      })\n    }\n  }, [pinchState.isActive, pinchState.scale, onPinchEnd])\n\n  return {\n    pinchState,\n    handlers: {\n      onTouchStart: handleTouchStart,\n      onTouchMove: handleTouchMove,\n      onTouchEnd: handleTouchEnd\n    }\n  }\n}\n\n// Long Press Hook\nexport const useLongPress = (\n  onLongPress?: (touch: Touch) => void,\n  options: {\n    delay?: number\n    moveTolerance?: number\n  } = {}\n) => {\n  const {\n    delay = 500,\n    moveTolerance = 10\n  } = options\n\n  const [longPressState, setLongPressState] = useState<LongPressState>({\n    touch: null,\n    isActive: false,\n    timer: null\n  })\n\n  const handleTouchStart = useCallback((e: React.TouchEvent) => {\n    const touch = e.touches[0]\n    const touchData: Touch = {\n      x: touch.clientX,\n      y: touch.clientY,\n      time: Date.now(),\n      id: touch.identifier\n    }\n\n    const timer = setTimeout(() => {\n      onLongPress?.(touchData)\n      \n      // Haptic feedback\n      if ('vibrate' in navigator) {\n        navigator.vibrate([50, 50, 50])\n      }\n\n      setLongPressState(prev => ({\n        ...prev,\n        isActive: true\n      }))\n    }, delay)\n\n    setLongPressState({\n      touch: touchData,\n      isActive: false,\n      timer\n    })\n  }, [delay, onLongPress])\n\n  const handleTouchMove = useCallback((e: React.TouchEvent) => {\n    if (!longPressState.touch) return\n\n    const touch = Array.from(e.touches).find(t => t.identifier === longPressState.touch?.id)\n    if (!touch) return\n\n    const deltaX = touch.clientX - longPressState.touch.x\n    const deltaY = touch.clientY - longPressState.touch.y\n    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY)\n\n    if (distance > moveTolerance && longPressState.timer) {\n      clearTimeout(longPressState.timer)\n      setLongPressState({\n        touch: null,\n        isActive: false,\n        timer: null\n      })\n    }\n  }, [longPressState.touch, longPressState.timer, moveTolerance])\n\n  const handleTouchEnd = useCallback(() => {\n    if (longPressState.timer) {\n      clearTimeout(longPressState.timer)\n    }\n\n    setLongPressState({\n      touch: null,\n      isActive: false,\n      timer: null\n    })\n  }, [longPressState.timer])\n\n  return {\n    longPressState,\n    handlers: {\n      onTouchStart: handleTouchStart,\n      onTouchMove: handleTouchMove,\n      onTouchEnd: handleTouchEnd\n    }\n  }\n}\n\n// Swipeable Card Component\ninterface SwipeableCardProps {\n  children: ReactNode\n  onSwipeLeft?: () => void\n  onSwipeRight?: () => void\n  onSwipeUp?: () => void\n  onSwipeDown?: () => void\n  className?: string\n  swipeThreshold?: number\n  disabled?: boolean\n}\n\nexport const SwipeableCard: React.FC<SwipeableCardProps> = ({\n  children,\n  onSwipeLeft,\n  onSwipeRight,\n  onSwipeUp,\n  onSwipeDown,\n  className,\n  swipeThreshold = 80,\n  disabled = false\n}) => {\n  const [transform, setTransform] = useState({ x: 0, y: 0 })\n  const [isDragging, setIsDragging] = useState(false)\n\n  const handleSwipe = useCallback((direction: 'left' | 'right' | 'up' | 'down', velocity: number) => {\n    if (disabled) return\n\n    switch (direction) {\n      case 'left':\n        onSwipeLeft?.()\n        break\n      case 'right':\n        onSwipeRight?.()\n        break\n      case 'up':\n        onSwipeUp?.()\n        break\n      case 'down':\n        onSwipeDown?.()\n        break\n    }\n  }, [disabled, onSwipeLeft, onSwipeRight, onSwipeUp, onSwipeDown])\n\n  const { swipeState, handlers } = useSwipeGesture(handleSwipe, {\n    threshold: swipeThreshold,\n    velocityThreshold: 0.3\n  })\n\n  useEffect(() => {\n    if (disabled) return\n\n    if (swipeState.isActive && swipeState.startTouch && swipeState.currentTouch) {\n      const deltaX = swipeState.currentTouch.x - swipeState.startTouch.x\n      const deltaY = swipeState.currentTouch.y - swipeState.startTouch.y\n      \n      setTransform({ x: deltaX * 0.3, y: deltaY * 0.3 })\n      setIsDragging(true)\n    } else {\n      setTransform({ x: 0, y: 0 })\n      setIsDragging(false)\n    }\n  }, [swipeState, disabled])\n\n  return (\n    <div\n      className={cn(\n        \"transition-transform duration-200 ease-out\",\n        isDragging && \"transition-none\",\n        className\n      )}\n      style={{\n        transform: `translate3d(${transform.x}px, ${transform.y}px, 0)`,\n      }}\n      {...handlers}\n    >\n      {children}\n    </div>\n  )\n}\n\n// Pull to Refresh Component\ninterface PullToRefreshProps {\n  onRefresh: () => Promise<void>\n  children: ReactNode\n  className?: string\n  threshold?: number\n  disabled?: boolean\n}\n\nexport const PullToRefresh: React.FC<PullToRefreshProps> = ({\n  onRefresh,\n  children,\n  className,\n  threshold = 80,\n  disabled = false\n}) => {\n  const [pullDistance, setPullDistance] = useState(0)\n  const [isRefreshing, setIsRefreshing] = useState(false)\n  const [canRefresh, setCanRefresh] = useState(false)\n  const containerRef = useRef<HTMLDivElement>(null)\n\n  const handleSwipe = useCallback(async (direction: 'down', velocity: number) => {\n    if (disabled || direction !== 'down' || !canRefresh) return\n\n    setIsRefreshing(true)\n    \n    try {\n      await onRefresh()\n    } finally {\n      setIsRefreshing(false)\n      setPullDistance(0)\n      setCanRefresh(false)\n    }\n  }, [disabled, onRefresh, canRefresh])\n\n  const { swipeState, handlers } = useSwipeGesture(handleSwipe, {\n    threshold,\n    velocityThreshold: 0.2,\n    preventScroll: true\n  })\n\n  useEffect(() => {\n    if (disabled) return\n\n    const container = containerRef.current\n    if (!container) return\n\n    const isAtTop = container.scrollTop === 0\n\n    if (swipeState.isActive && swipeState.direction === 'down' && isAtTop) {\n      const distance = Math.min(swipeState.distance, threshold * 1.5)\n      setPullDistance(distance)\n      setCanRefresh(distance >= threshold)\n    } else if (!swipeState.isActive) {\n      if (!isRefreshing) {\n        setPullDistance(0)\n        setCanRefresh(false)\n      }\n    }\n  }, [swipeState, threshold, disabled, isRefreshing])\n\n  const refreshIndicatorOpacity = Math.min(pullDistance / threshold, 1)\n  const refreshIndicatorScale = Math.min(pullDistance / threshold, 1)\n\n  return (\n    <div className={cn(\"relative overflow-hidden\", className)}>\n      {/* Pull to refresh indicator */}\n      <div\n        className=\"absolute top-0 left-0 right-0 flex items-center justify-center z-10 pointer-events-none\"\n        style={{\n          height: pullDistance,\n          opacity: refreshIndicatorOpacity,\n          transform: `scale(${refreshIndicatorScale})`\n        }}\n      >\n        <div className=\"flex items-center space-x-2 text-blue-600\">\n          <div className={cn(\n            \"w-6 h-6 border-2 border-blue-600 rounded-full\",\n            isRefreshing && \"animate-spin border-t-transparent\"\n          )} />\n          <span className=\"text-sm font-medium\">\n            {isRefreshing ? 'Refreshing...' : canRefresh ? 'Release to refresh' : 'Pull to refresh'}\n          </span>\n        </div>\n      </div>\n\n      {/* Content container */}\n      <div\n        ref={containerRef}\n        className=\"overflow-auto\"\n        style={{\n          transform: `translateY(${pullDistance}px)`,\n          transition: swipeState.isActive ? 'none' : 'transform 0.2s ease-out'\n        }}\n        {...handlers}\n      >\n        {children}\n      </div>\n    </div>\n  )\n}\n\n// Pinch to Zoom Image Component\ninterface PinchZoomImageProps {\n  src: string\n  alt: string\n  className?: string\n  maxScale?: number\n  minScale?: number\n}\n\nexport const PinchZoomImage: React.FC<PinchZoomImageProps> = ({\n  src,\n  alt,\n  className,\n  maxScale = 3,\n  minScale = 1\n}) => {\n  const [scale, setScale] = useState(1)\n  const [position, setPosition] = useState({ x: 0, y: 0 })\n  const [isDragging, setIsDragging] = useState(false)\n  const containerRef = useRef<HTMLDivElement>(null)\n\n  const handlePinch = useCallback((newScale: number, center: { x: number; y: number }) => {\n    const constrainedScale = Math.max(minScale, Math.min(maxScale, newScale))\n    setScale(constrainedScale)\n  }, [maxScale, minScale])\n\n  const handlePinchEnd = useCallback((finalScale: number) => {\n    const constrainedScale = Math.max(minScale, Math.min(maxScale, finalScale))\n    setScale(constrainedScale)\n    \n    if (constrainedScale === minScale) {\n      setPosition({ x: 0, y: 0 })\n    }\n  }, [maxScale, minScale])\n\n  const { pinchState, handlers: pinchHandlers } = usePinchGesture(\n    handlePinch,\n    handlePinchEnd,\n    { threshold: 0.05 }\n  )\n\n  // Pan gesture for when zoomed in\n  const handleSwipe = useCallback((direction: any, velocity: number) => {\n    if (scale <= 1) return\n\n    const container = containerRef.current\n    if (!container) return\n\n    const rect = container.getBoundingClientRect()\n    const maxX = (rect.width * (scale - 1)) / 2\n    const maxY = (rect.height * (scale - 1)) / 2\n\n    setPosition(prev => ({\n      x: Math.max(-maxX, Math.min(maxX, prev.x + (direction === 'right' ? 20 : direction === 'left' ? -20 : 0))),\n      y: Math.max(-maxY, Math.min(maxY, prev.y + (direction === 'down' ? 20 : direction === 'up' ? -20 : 0)))\n    }))\n  }, [scale])\n\n  const { handlers: swipeHandlers } = useSwipeGesture(handleSwipe, {\n    threshold: 20,\n    velocityThreshold: 0.1\n  })\n\n  // Double tap to zoom\n  const handleDoubleTap = useCallback(() => {\n    if (scale > 1) {\n      setScale(1)\n      setPosition({ x: 0, y: 0 })\n    } else {\n      setScale(2)\n    }\n    \n    // Haptic feedback\n    if ('vibrate' in navigator) {\n      navigator.vibrate(50)\n    }\n  }, [scale])\n\n  const combinedHandlers = {\n    onTouchStart: (e: React.TouchEvent) => {\n      pinchHandlers.onTouchStart(e)\n      if (e.touches.length === 1) {\n        swipeHandlers.onTouchStart(e)\n      }\n    },\n    onTouchMove: (e: React.TouchEvent) => {\n      pinchHandlers.onTouchMove(e)\n      if (e.touches.length === 1 && scale > 1) {\n        swipeHandlers.onTouchMove(e)\n      }\n    },\n    onTouchEnd: (e: React.TouchEvent) => {\n      pinchHandlers.onTouchEnd(e)\n      swipeHandlers.onTouchEnd(e)\n    },\n    onDoubleClick: handleDoubleTap\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={cn(\"overflow-hidden select-none\", className)}\n      {...combinedHandlers}\n    >\n      <img\n        src={src}\n        alt={alt}\n        className=\"w-full h-full object-contain transition-transform duration-200 ease-out\"\n        style={{\n          transform: `scale(${scale}) translate(${position.x}px, ${position.y}px)`,\n          transformOrigin: 'center center'\n        }}\n        draggable={false}\n      />\n    </div>\n  )\n}\n\n// Long Press Menu Component\ninterface LongPressMenuProps {\n  children: ReactNode\n  menuItems: Array<{\n    label: string\n    icon?: ReactNode\n    onClick: () => void\n    variant?: 'default' | 'destructive'\n  }>\n  className?: string\n}\n\nexport const LongPressMenu: React.FC<LongPressMenuProps> = ({\n  children,\n  menuItems,\n  className\n}) => {\n  const [showMenu, setShowMenu] = useState(false)\n  const [menuPosition, setMenuPosition] = useState({ x: 0, y: 0 })\n\n  const handleLongPress = useCallback((touch: Touch) => {\n    setMenuPosition({ x: touch.x, y: touch.y })\n    setShowMenu(true)\n  }, [])\n\n  const { handlers } = useLongPress(handleLongPress, {\n    delay: 500,\n    moveTolerance: 10\n  })\n\n  const handleMenuItemClick = useCallback((onClick: () => void) => {\n    onClick()\n    setShowMenu(false)\n  }, [])\n\n  useEffect(() => {\n    const handleClickOutside = () => setShowMenu(false)\n    \n    if (showMenu) {\n      document.addEventListener('touchstart', handleClickOutside)\n      document.addEventListener('click', handleClickOutside)\n      \n      return () => {\n        document.removeEventListener('touchstart', handleClickOutside)\n        document.removeEventListener('click', handleClickOutside)\n      }\n    }\n  }, [showMenu])\n\n  return (\n    <>\n      <div className={className} {...handlers}>\n        {children}\n      </div>\n\n      {showMenu && (\n        <div\n          className=\"fixed z-50 bg-white rounded-lg shadow-lg border border-gray-200 py-2 min-w-[150px]\"\n          style={{\n            left: Math.min(menuPosition.x, window.innerWidth - 150),\n            top: Math.min(menuPosition.y, window.innerHeight - menuItems.length * 40 - 20)\n          }}\n        >\n          {menuItems.map((item, index) => (\n            <button\n              key={index}\n              onClick={() => handleMenuItemClick(item.onClick)}\n              className={cn(\n                \"w-full px-4 py-2 text-left text-sm hover:bg-gray-50 flex items-center space-x-2\",\n                item.variant === 'destructive' && \"text-red-600 hover:bg-red-50\"\n              )}\n            >\n              {item.icon && <span className=\"w-4 h-4\">{item.icon}</span>}\n              <span>{item.label}</span>\n            </button>\n          ))}\n        </div>\n      )}\n    </>\n  )\n}","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/TouchOptimized.tsx",["2419"],[],"\"use client\"\n\nimport React, { useCallback, useRef, useState, useEffect } from 'react'\nimport { cn } from '@/lib/utils'\nimport { useMobileLayout } from '@/hooks/useMobileLayout'\n\n// Touch-optimized container with gesture support\ninterface TouchContainerProps {\n  children: React.ReactNode\n  className?: string\n  onSwipeLeft?: () => void\n  onSwipeRight?: () => void\n  onSwipeUp?: () => void\n  onSwipeDown?: () => void\n  onDoubleTap?: () => void\n  onLongPress?: () => void\n  hapticFeedback?: boolean\n  swipeThreshold?: number\n  longPressDelay?: number\n}\n\nexport const TouchContainer: React.FC<TouchContainerProps> = ({\n  children,\n  className,\n  onSwipeLeft,\n  onSwipeRight,\n  onSwipeUp,\n  onSwipeDown,\n  onDoubleTap,\n  onLongPress,\n  hapticFeedback = false,\n  swipeThreshold = 50,\n  longPressDelay = 500\n}) => {\n  const { isTouchDevice } = useMobileLayout()\n  const touchStart = useRef<{ x: number; y: number; time: number } | null>(null)\n  const lastTap = useRef<number>(0)\n  const longPressTimer = useRef<NodeJS.Timeout | null>(null)\n  const [isPressed, setIsPressed] = useState(false)\n\n  const triggerHaptic = useCallback((intensity: 'light' | 'medium' | 'heavy' = 'light') => {\n    if (hapticFeedback && 'vibrate' in navigator) {\n      const patterns = {\n        light: 10,\n        medium: 20,\n        heavy: [20, 10, 20]\n      }\n      navigator.vibrate(patterns[intensity])\n    }\n  }, [hapticFeedback])\n\n  const handleTouchStart = useCallback((e: React.TouchEvent) => {\n    const touch = e.touches[0]\n    touchStart.current = {\n      x: touch.clientX,\n      y: touch.clientY,\n      time: Date.now()\n    }\n    setIsPressed(true)\n\n    // Start long press timer\n    if (onLongPress) {\n      longPressTimer.current = setTimeout(() => {\n        triggerHaptic('medium')\n        onLongPress()\n        setIsPressed(false)\n      }, longPressDelay)\n    }\n  }, [onLongPress, longPressDelay, triggerHaptic])\n\n  const handleTouchEnd = useCallback((e: React.TouchEvent) => {\n    if (!touchStart.current) return\n\n    const touch = e.changedTouches[0]\n    const deltaX = touch.clientX - touchStart.current.x\n    const deltaY = touch.clientY - touchStart.current.y\n    const deltaTime = Date.now() - touchStart.current.time\n\n    setIsPressed(false)\n\n    // Clear long press timer\n    if (longPressTimer.current) {\n      clearTimeout(longPressTimer.current)\n      longPressTimer.current = null\n    }\n\n    // Check for double tap\n    if (onDoubleTap && deltaTime < 300 && Math.abs(deltaX) < 10 && Math.abs(deltaY) < 10) {\n      if (Date.now() - lastTap.current < 300) {\n        triggerHaptic('light')\n        onDoubleTap()\n        lastTap.current = 0\n        return\n      }\n      lastTap.current = Date.now()\n      return\n    }\n\n    // Check for swipe gestures\n    if (Math.abs(deltaX) > swipeThreshold || Math.abs(deltaY) > swipeThreshold) {\n      if (Math.abs(deltaX) > Math.abs(deltaY)) {\n        // Horizontal swipe\n        if (deltaX > 0 && onSwipeRight) {\n          triggerHaptic('light')\n          onSwipeRight()\n        } else if (deltaX < 0 && onSwipeLeft) {\n          triggerHaptic('light')\n          onSwipeLeft()\n        }\n      } else {\n        // Vertical swipe\n        if (deltaY > 0 && onSwipeDown) {\n          triggerHaptic('light')\n          onSwipeDown()\n        } else if (deltaY < 0 && onSwipeUp) {\n          triggerHaptic('light')\n          onSwipeUp()\n        }\n      }\n    }\n\n    touchStart.current = null\n  }, [onSwipeLeft, onSwipeRight, onSwipeUp, onSwipeDown, onDoubleTap, swipeThreshold, triggerHaptic])\n\n  const handleTouchCancel = useCallback(() => {\n    setIsPressed(false)\n    if (longPressTimer.current) {\n      clearTimeout(longPressTimer.current)\n      longPressTimer.current = null\n    }\n    touchStart.current = null\n  }, [])\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (longPressTimer.current) {\n        clearTimeout(longPressTimer.current)\n      }\n    }\n  }, [])\n\n  if (!isTouchDevice) {\n    return <div className={className}>{children}</div>\n  }\n\n  return (\n    <div\n      className={cn(\n        \"touch-manipulation select-none\",\n        isPressed && \"transition-transform duration-75 scale-[0.98]\",\n        className\n      )}\n      onTouchStart={handleTouchStart}\n      onTouchEnd={handleTouchEnd}\n      onTouchCancel={handleTouchCancel}\n    >\n      {children}\n    </div>\n  )\n}\n\n// Touch-optimized card with swipe gestures\ninterface SwipeableCardProps {\n  children: React.ReactNode\n  className?: string\n  onSwipeLeft?: () => void\n  onSwipeRight?: () => void\n  leftAction?: {\n    icon: React.ReactNode\n    color: string\n    label: string\n  }\n  rightAction?: {\n    icon: React.ReactNode\n    color: string\n    label: string\n  }\n  disabled?: boolean\n}\n\nexport const SwipeableCard: React.FC<SwipeableCardProps> = ({\n  children,\n  className,\n  onSwipeLeft,\n  onSwipeRight,\n  leftAction,\n  rightAction,\n  disabled = false\n}) => {\n  const [swipeOffset, setSwipeOffset] = useState(0)\n  const [isSwiming, setIsSwiming] = useState(false)\n  const touchStart = useRef<{ x: number; time: number } | null>(null)\n  const cardRef = useRef<HTMLDivElement>(null)\n\n  const handleTouchStart = useCallback((e: React.TouchEvent) => {\n    if (disabled) return\n    \n    const touch = e.touches[0]\n    touchStart.current = {\n      x: touch.clientX,\n      time: Date.now()\n    }\n    setIsSwiming(true)\n  }, [disabled])\n\n  const handleTouchMove = useCallback((e: React.TouchEvent) => {\n    if (!touchStart.current || disabled) return\n\n    const touch = e.touches[0]\n    const deltaX = touch.clientX - touchStart.current.x\n    \n    // Limit swipe range\n    const maxSwipe = 100\n    const clampedDelta = Math.max(-maxSwipe, Math.min(maxSwipe, deltaX))\n    setSwipeOffset(clampedDelta)\n  }, [disabled])\n\n  const handleTouchEnd = useCallback(() => {\n    if (!touchStart.current || disabled) return\n\n    const threshold = 60\n    \n    if (swipeOffset > threshold && onSwipeRight) {\n      onSwipeRight()\n    } else if (swipeOffset < -threshold && onSwipeLeft) {\n      onSwipeLeft()\n    }\n    \n    // Reset state\n    setSwipeOffset(0)\n    setIsSwiming(false)\n    touchStart.current = null\n  }, [swipeOffset, onSwipeLeft, onSwipeRight, disabled])\n\n  return (\n    <div className=\"relative overflow-hidden rounded-lg\">\n      {/* Background actions */}\n      {(leftAction || rightAction) && (\n        <div className=\"absolute inset-0 flex\">\n          {rightAction && (\n            <div className={cn(\n              \"flex-1 flex items-center justify-start pl-4\",\n              rightAction.color\n            )}>\n              <div className=\"flex items-center space-x-2\">\n                {rightAction.icon}\n                <span className=\"text-sm font-medium\">{rightAction.label}</span>\n              </div>\n            </div>\n          )}\n          {leftAction && (\n            <div className={cn(\n              \"flex-1 flex items-center justify-end pr-4\",\n              leftAction.color\n            )}>\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-sm font-medium\">{leftAction.label}</span>\n                {leftAction.icon}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Main card content */}\n      <div\n        ref={cardRef}\n        className={cn(\n          \"relative bg-white transition-transform duration-200\",\n          isSwiming ? \"transition-none\" : \"\",\n          className\n        )}\n        style={{\n          transform: `translateX(${swipeOffset}px)`\n        }}\n        onTouchStart={handleTouchStart}\n        onTouchMove={handleTouchMove}\n        onTouchEnd={handleTouchEnd}\n        onTouchCancel={handleTouchEnd}\n      >\n        {children}\n      </div>\n    </div>\n  )\n}\n\n// Pull-to-refresh component\ninterface PullToRefreshProps {\n  children: React.ReactNode\n  onRefresh: () => Promise<void>\n  refreshThreshold?: number\n  className?: string\n}\n\nexport const PullToRefresh: React.FC<PullToRefreshProps> = ({\n  children,\n  onRefresh,\n  refreshThreshold = 100,\n  className\n}) => {\n  const [pullDistance, setPullDistance] = useState(0)\n  const [isRefreshing, setIsRefreshing] = useState(false)\n  const [canRefresh, setCanRefresh] = useState(false)\n  const touchStart = useRef<number>(0)\n  const scrollContainer = useRef<HTMLDivElement>(null)\n\n  const handleTouchStart = useCallback((e: React.TouchEvent) => {\n    if (!scrollContainer.current || scrollContainer.current.scrollTop > 0) return\n    touchStart.current = e.touches[0].clientY\n  }, [])\n\n  const handleTouchMove = useCallback((e: React.TouchEvent) => {\n    if (!scrollContainer.current || scrollContainer.current.scrollTop > 0 || isRefreshing) return\n    \n    const currentY = e.touches[0].clientY\n    const deltaY = currentY - touchStart.current\n    \n    if (deltaY > 0) {\n      e.preventDefault()\n      const distance = Math.min(deltaY * 0.5, refreshThreshold * 1.5)\n      setPullDistance(distance)\n      setCanRefresh(distance >= refreshThreshold)\n    }\n  }, [refreshThreshold, isRefreshing])\n\n  const handleTouchEnd = useCallback(async () => {\n    if (canRefresh && !isRefreshing) {\n      setIsRefreshing(true)\n      \n      if ('vibrate' in navigator) {\n        navigator.vibrate(20)\n      }\n      \n      try {\n        await onRefresh()\n      } finally {\n        setIsRefreshing(false)\n      }\n    }\n    \n    setPullDistance(0)\n    setCanRefresh(false)\n    touchStart.current = 0\n  }, [canRefresh, isRefreshing, onRefresh])\n\n  const refreshProgress = Math.min(pullDistance / refreshThreshold, 1)\n  const showRefreshIndicator = pullDistance > 20\n\n  return (\n    <div className={cn(\"relative\", className)}>\n      {/* Refresh indicator */}\n      {showRefreshIndicator && (\n        <div \n          className=\"absolute top-0 left-0 right-0 flex items-center justify-center bg-primary/10 transition-all duration-200 z-10\"\n          style={{ \n            height: `${Math.min(pullDistance, refreshThreshold)}px`,\n            transform: `translateY(-${Math.max(0, refreshThreshold - pullDistance)}px)`\n          }}\n        >\n          <div className=\"flex items-center space-x-2 text-primary\">\n            <div \n              className={cn(\n                \"w-6 h-6 border-2 border-primary/30 border-t-primary rounded-full transition-transform duration-200\",\n                isRefreshing ? \"animate-spin\" : \"\",\n                canRefresh && !isRefreshing ? \"rotate-180\" : \"\"\n              )}\n              style={{\n                transform: `rotate(${refreshProgress * 180}deg)`\n              }}\n            />\n            <span className=\"text-sm font-medium\">\n              {isRefreshing ? \"Refreshing...\" : canRefresh ? \"Release to refresh\" : \"Pull to refresh\"}\n            </span>\n          </div>\n        </div>\n      )}\n\n      {/* Content */}\n      <div\n        ref={scrollContainer}\n        className=\"relative overflow-auto\"\n        onTouchStart={handleTouchStart}\n        onTouchMove={handleTouchMove}\n        onTouchEnd={handleTouchEnd}\n        style={{\n          transform: `translateY(${isRefreshing ? refreshThreshold : pullDistance}px)`,\n          transition: isRefreshing || pullDistance === 0 ? 'transform 0.3s ease-out' : 'none'\n        }}\n      >\n        {children}\n      </div>\n    </div>\n  )\n}\n\n// Touch-optimized input with better mobile UX\ninterface TouchInputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  label?: string\n  error?: string\n  helpText?: string\n  icon?: React.ReactNode\n  clearable?: boolean\n  onClear?: () => void\n}\n\nexport const TouchInput: React.FC<TouchInputProps> = ({\n  label,\n  error,\n  helpText,\n  icon,\n  clearable = false,\n  onClear,\n  className,\n  value,\n  onChange,\n  ...props\n}) => {\n  const [isFocused, setIsFocused] = useState(false)\n  const inputRef = useRef<HTMLInputElement>(null)\n\n  const handleClear = useCallback(() => {\n    if (onClear) {\n      onClear()\n    } else if (onChange) {\n      onChange({ target: { value: '' } } as React.ChangeEvent<HTMLInputElement>)\n    }\n    \n    if (inputRef.current) {\n      inputRef.current.focus()\n    }\n    \n    if ('vibrate' in navigator) {\n      navigator.vibrate(10)\n    }\n  }, [onClear, onChange])\n\n  return (\n    <div className=\"space-y-2\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-700\">\n          {label}\n        </label>\n      )}\n      \n      <div className=\"relative\">\n        {icon && (\n          <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\">\n            {icon}\n          </div>\n        )}\n        \n        <input\n          ref={inputRef}\n          value={value}\n          onChange={onChange}\n          onFocus={() => setIsFocused(true)}\n          onBlur={() => setIsFocused(false)}\n          className={cn(\n            // Base styles\n            \"w-full px-3 py-3 text-mobile-optimized border border-gray-300 rounded-lg\",\n            \"bg-white text-gray-900 placeholder-gray-500\",\n            \"transition-all duration-200\",\n            // Focus styles\n            \"focus:outline-none focus:ring-2 focus:ring-primary/20 focus:border-primary\",\n            // Touch optimization\n            \"touch-manipulation min-h-touch-target\",\n            // Icon spacing\n            icon && \"pl-10\",\n            clearable && value && \"pr-10\",\n            // Error styles\n            error && \"border-red-500 focus:border-red-500 focus:ring-red-500/20\",\n            // Custom styles\n            className\n          )}\n          {...props}\n        />\n        \n        {clearable && value && (\n          <button\n            type=\"button\"\n            onClick={handleClear}\n            className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 touch-manipulation\"\n            aria-label=\"Clear input\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        )}\n      </div>\n      \n      {error && (\n        <p className=\"text-sm text-red-600\">{error}</p>\n      )}\n      \n      {helpText && !error && (\n        <p className=\"text-sm text-gray-500\">{helpText}</p>\n      )}\n    </div>\n  )\n}","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/VirtualScrollList.tsx",["2420"],[],"\"use client\"\n\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react'\nimport { cn } from '@/lib/utils'\n\ninterface VirtualScrollListProps<T> {\n  items: T[]\n  itemHeight: number\n  containerHeight: number\n  renderItem: (item: T, index: number) => React.ReactNode\n  keyExtractor: (item: T, index: number) => string | number\n  className?: string\n  onEndReached?: () => void\n  onEndReachedThreshold?: number\n  loading?: boolean\n  loadingComponent?: React.ReactNode\n  overscan?: number\n  emptyComponent?: React.ReactNode\n}\n\ninterface VisibleRange {\n  start: number\n  end: number\n}\n\nexport function VirtualScrollList<T>({\n  items,\n  itemHeight,\n  containerHeight,\n  renderItem,\n  keyExtractor,\n  className,\n  onEndReached,\n  onEndReachedThreshold = 0.8,\n  loading = false,\n  loadingComponent,\n  overscan = 5,\n  emptyComponent\n}: VirtualScrollListProps<T>) {\n  const [scrollTop, setScrollTop] = useState(0)\n  const [isScrolling, setIsScrolling] = useState(false)\n  const scrollElementRef = useRef<HTMLDivElement>(null)\n  const scrollTimeoutRef = useRef<NodeJS.Timeout>()\n\n  // Calculate visible range\n  const visibleRange = useMemo((): VisibleRange => {\n    const itemCount = items.length\n    if (itemCount === 0) {\n      return { start: 0, end: 0 }\n    }\n\n    const visibleStart = Math.floor(scrollTop / itemHeight)\n    const visibleEnd = Math.min(\n      visibleStart + Math.ceil(containerHeight / itemHeight),\n      itemCount\n    )\n\n    // Add overscan\n    const start = Math.max(0, visibleStart - overscan)\n    const end = Math.min(itemCount, visibleEnd + overscan)\n\n    return { start, end }\n  }, [scrollTop, itemHeight, containerHeight, items.length, overscan])\n\n  // Get visible items\n  const visibleItems = useMemo(() => {\n    return items.slice(visibleRange.start, visibleRange.end)\n  }, [items, visibleRange])\n\n  // Handle scroll events\n  const handleScroll = useCallback((event: React.UIEvent<HTMLDivElement>) => {\n    const scrollTop = event.currentTarget.scrollTop\n    setScrollTop(scrollTop)\n    setIsScrolling(true)\n\n    // Clear existing timeout\n    if (scrollTimeoutRef.current) {\n      clearTimeout(scrollTimeoutRef.current)\n    }\n\n    // Set new timeout to detect scroll end\n    scrollTimeoutRef.current = setTimeout(() => {\n      setIsScrolling(false)\n    }, 150)\n\n    // Check if we've reached the end\n    if (onEndReached && !loading) {\n      const scrollElement = event.currentTarget\n      const scrollPercentage = \n        (scrollTop + scrollElement.clientHeight) / scrollElement.scrollHeight\n\n      if (scrollPercentage >= onEndReachedThreshold) {\n        onEndReached()\n      }\n    }\n  }, [onEndReached, onEndReachedThreshold, loading])\n\n  // Scroll to specific item\n  const scrollToItem = useCallback((index: number, align: 'start' | 'center' | 'end' = 'start') => {\n    if (!scrollElementRef.current) return\n\n    let targetScrollTop: number\n\n    switch (align) {\n      case 'center':\n        targetScrollTop = (index * itemHeight) - (containerHeight / 2) + (itemHeight / 2)\n        break\n      case 'end':\n        targetScrollTop = (index * itemHeight) - containerHeight + itemHeight\n        break\n      case 'start':\n      default:\n        targetScrollTop = index * itemHeight\n        break\n    }\n\n    // Clamp to valid range\n    const maxScrollTop = (items.length * itemHeight) - containerHeight\n    targetScrollTop = Math.max(0, Math.min(targetScrollTop, maxScrollTop))\n\n    scrollElementRef.current.scrollTo({\n      top: targetScrollTop,\n      behavior: 'smooth'\n    })\n  }, [itemHeight, containerHeight, items.length])\n\n  // Cleanup timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (scrollTimeoutRef.current) {\n        clearTimeout(scrollTimeoutRef.current)\n      }\n    }\n  }, [])\n\n  // Calculate total height and offset\n  const totalHeight = items.length * itemHeight\n  const offsetY = visibleRange.start * itemHeight\n\n  // Handle empty state\n  if (items.length === 0 && !loading) {\n    return (\n      <div \n        className={cn(\"flex items-center justify-center\", className)}\n        style={{ height: containerHeight }}\n      >\n        {emptyComponent || (\n          <div className=\"text-center text-muted-foreground\">\n            <p>No items to display</p>\n          </div>\n        )}\n      </div>\n    )\n  }\n\n  return (\n    <div\n      ref={scrollElementRef}\n      className={cn(\n        \"overflow-auto scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-gray-100\",\n        \"touch-manipulation overscroll-behavior-contain\",\n        className\n      )}\n      style={{ height: containerHeight }}\n      onScroll={handleScroll}\n    >\n      {/* Total height spacer */}\n      <div style={{ height: totalHeight, position: 'relative' }}>\n        {/* Visible items container */}\n        <div\n          style={{\n            transform: `translateY(${offsetY}px)`,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n          }}\n        >\n          {visibleItems.map((item, relativeIndex) => {\n            const absoluteIndex = visibleRange.start + relativeIndex\n            const key = keyExtractor(item, absoluteIndex)\n            \n            return (\n              <div\n                key={key}\n                style={{ height: itemHeight }}\n                className={cn(\n                  \"flex-shrink-0\",\n                  isScrolling && \"pointer-events-none\" // Disable interactions while scrolling\n                )}\n              >\n                {renderItem(item, absoluteIndex)}\n              </div>\n            )\n          })}\n        </div>\n\n        {/* Loading indicator */}\n        {loading && (\n          <div \n            className=\"absolute inset-x-0 bottom-0 flex items-center justify-center p-4\"\n            style={{ transform: `translateY(${totalHeight}px)` }}\n          >\n            {loadingComponent || (\n              <div className=\"flex items-center space-x-2 text-muted-foreground\">\n                <div className=\"w-4 h-4 border-2 border-current border-t-transparent rounded-full animate-spin\" />\n                <span>Loading more...</span>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\n// Hook for managing virtual list state\nexport const useVirtualList = <T,>(\n  items: T[],\n  dependencies: React.DependencyList = []\n) => {\n  const [loading, setLoading] = useState(false)\n  const [hasMore, setHasMore] = useState(true)\n\n  const loadMore = useCallback(() => {\n    if (loading || !hasMore) return\n\n    setLoading(true)\n    // Implement your load more logic here\n    // This is typically an async operation\n    \n    // Example:\n    setTimeout(() => {\n      setLoading(false)\n      // Update hasMore based on your logic\n    }, 1000)\n  }, [loading, hasMore])\n\n  const scrollToTop = useCallback(() => {\n    // This would be implemented by the parent component\n    // by passing a ref and calling scrollToItem(0)\n  }, [])\n\n  const refresh = useCallback(() => {\n    setLoading(true)\n    setHasMore(true)\n    // Implement refresh logic\n    setTimeout(() => {\n      setLoading(false)\n    }, 1000)\n  }, dependencies)\n\n  return {\n    loading,\n    hasMore,\n    loadMore,\n    scrollToTop,\n    refresh\n  }\n}\n\n// Performance optimized list item wrapper\nexport const VirtualListItem = React.memo(({\n  children,\n  className,\n  onClick\n}: {\n  children: React.ReactNode\n  className?: string\n  onClick?: () => void\n}) => {\n  return (\n    <div \n      className={cn(\n        \"w-full touch-manipulation select-none\",\n        onClick && \"cursor-pointer active:scale-[0.98] transition-transform duration-150\",\n        className\n      )}\n      onClick={onClick}\n    >\n      {children}\n    </div>\n  )\n})\n\nVirtualListItem.displayName = \"VirtualListItem\"\n\nexport default VirtualScrollList","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/advanced-mobile-experience.tsx",["2421","2422","2423","2424"],[],"\"use client\"\n\nimport * as React from \"react\"\nimport { motion, AnimatePresence, PanInfo, useDragControls } from \"framer-motion\"\nimport { \n  Home, \n  Search, \n  ShoppingCart, \n  User, \n  Plus, \n  Minus, \n  Heart,\n  CreditCard,\n  MapPin,\n  Clock,\n  CheckCircle,\n  XCircle,\n  Star,\n  Truck,\n  Wifi,\n  WifiOff,\n  MoreHorizontal,\n  ArrowLeft,\n  Filter,\n  Bell,\n  Settings,\n  LogOut,\n  Eye,\n  EyeOff,\n  Shield,\n  Smartphone,\n  Camera,\n  Share2\n} from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\nimport { formatCurrency, formatTime } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Progress } from \"@/components/ui/progress\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { Input } from \"@/components/ui/input\"\nimport { useToast } from \"@/hooks/use-toast\"\n\n// Types and Interfaces\ninterface MealItem {\n  id: string\n  name: string\n  description: string\n  price: number\n  image: string\n  category: string\n  rating: number\n  nutritionScore: 'A' | 'B' | 'C' | 'D' | 'E'\n  allergens: string[]\n  isVegetarian: boolean\n  isVegan: boolean\n  isGlutenFree: boolean\n  preparationTime: number\n  availability: number\n  isPopular: boolean\n}\n\ninterface CartItem extends MealItem {\n  quantity: number\n  customizations?: string[]\n}\n\ninterface Order {\n  id: string\n  items: CartItem[]\n  status: 'pending' | 'preparing' | 'ready' | 'delivered' | 'cancelled'\n  orderTime: Date\n  estimatedDelivery: Date\n  total: number\n  pickupLocation: string\n  studentInfo: {\n    name: string\n    class: string\n    rollNumber: string\n  }\n}\n\ninterface UserProfile {\n  id: string\n  name: string\n  email: string\n  phone: string\n  avatar: string\n  class: string\n  rollNumber: string\n  parentName: string\n  parentPhone: string\n  dietaryPreferences: string[]\n  allergens: string[]\n  balance: number\n  monthlyLimit: number\n  monthlySpent: number\n}\n\n// Mock Data\nconst mockMeals: MealItem[] = [\n  {\n    id: \"1\",\n    name: \"Rajma Chawal\",\n    description: \"Traditional red kidney beans curry with steamed basmati rice\",\n    price: 85,\n    image: \"/api/placeholder/300/200\",\n    category: \"Main Course\",\n    rating: 4.5,\n    nutritionScore: 'A',\n    allergens: [\"gluten\"],\n    isVegetarian: true,\n    isVegan: false,\n    isGlutenFree: false,\n    preparationTime: 15,\n    availability: 25,\n    isPopular: true\n  },\n  {\n    id: \"2\",\n    name: \"Paneer Butter Masala\",\n    description: \"Creamy tomato-based curry with cottage cheese and naan\",\n    price: 120,\n    image: \"/api/placeholder/300/200\",\n    category: \"Main Course\",\n    rating: 4.7,\n    nutritionScore: 'B',\n    allergens: [\"dairy\", \"gluten\"],\n    isVegetarian: true,\n    isVegan: false,\n    isGlutenFree: false,\n    preparationTime: 20,\n    availability: 18,\n    isPopular: true\n  },\n  {\n    id: \"3\",\n    name: \"Masala Dosa\",\n    description: \"Crispy fermented crepe with spiced potato filling and chutneys\",\n    price: 75,\n    image: \"/api/placeholder/300/200\",\n    category: \"South Indian\",\n    rating: 4.3,\n    nutritionScore: 'A',\n    allergens: [],\n    isVegetarian: true,\n    isVegan: true,\n    isGlutenFree: true,\n    preparationTime: 12,\n    availability: 30,\n    isPopular: false\n  }\n]\n\nconst mockUser: UserProfile = {\n  id: \"user-1\",\n  name: \"Arjun Sharma\",\n  email: \"arjun.sharma@student.school.edu\",\n  phone: \"+91 98765 43210\",\n  avatar: \"/api/placeholder/100/100\",\n  class: \"Class 10-A\",\n  rollNumber: \"2024001\",\n  parentName: \"Rajesh Sharma\",\n  parentPhone: \"+91 98765 43211\",\n  dietaryPreferences: [\"vegetarian\"],\n  allergens: [\"nuts\"],\n  balance: 2500,\n  monthlyLimit: 5000,\n  monthlySpent: 2100\n}\n\n// Utility Functions\nconst generateHapticFeedback = (type: 'light' | 'medium' | 'heavy' = 'light') => {\n  if ('vibrate' in navigator) {\n    const patterns = {\n      light: [10],\n      medium: [15],\n      heavy: [25]\n    }\n    navigator.vibrate(patterns[type])\n  }\n}\n\nconst useOnlineStatus = () => {\n  const [isOnline, setIsOnline] = React.useState(typeof navigator !== 'undefined' ? navigator.onLine : true)\n  \n  React.useEffect(() => {\n    const handleOnline = () => setIsOnline(true)\n    const handleOffline = () => setIsOnline(false)\n    \n    window.addEventListener('online', handleOnline)\n    window.addEventListener('offline', handleOffline)\n    \n    return () => {\n      window.removeEventListener('online', handleOnline)\n      window.removeEventListener('offline', handleOffline)\n    }\n  }, [])\n  \n  return isOnline\n}\n\n// Gesture Components\ninterface SwipeableCardProps {\n  children: React.ReactNode\n  onSwipeLeft?: () => void\n  onSwipeRight?: () => void\n  className?: string\n}\n\nconst SwipeableCard: React.FC<SwipeableCardProps> = ({ \n  children, \n  onSwipeLeft, \n  onSwipeRight, \n  className \n}) => {\n  const dragControls = useDragControls()\n  \n  return (\n    <motion.div\n      drag=\"x\"\n      dragConstraints={{ left: 0, right: 0 }}\n      dragElastic={0.2}\n      onDragEnd={(_, info: PanInfo) => {\n        if (info.offset.x > 100 && onSwipeRight) {\n          generateHapticFeedback('medium')\n          onSwipeRight()\n        } else if (info.offset.x < -100 && onSwipeLeft) {\n          generateHapticFeedback('medium')\n          onSwipeLeft()\n        }\n      }}\n      className={cn(\"cursor-grab active:cursor-grabbing\", className)}\n      whileTap={{ scale: 0.95 }}\n    >\n      {children}\n    </motion.div>\n  )\n}\n\n// Navigation Components\ninterface BottomNavigationProps {\n  activeTab: string\n  onTabChange: (tab: string) => void\n  cartItemCount: number\n}\n\nconst BottomNavigation: React.FC<BottomNavigationProps> = ({ \n  activeTab, \n  onTabChange, \n  cartItemCount \n}) => {\n  const tabs = [\n    { id: 'home', icon: Home, label: 'Home' },\n    { id: 'search', icon: Search, label: 'Search' },\n    { id: 'cart', icon: ShoppingCart, label: 'Cart', badge: cartItemCount },\n    { id: 'profile', icon: User, label: 'Profile' },\n  ]\n  \n  return (\n    <motion.nav \n      className=\"fixed bottom-0 left-0 right-0 bg-background border-t border-border z-50 safe-area-bottom\"\n      initial={{ y: 100 }}\n      animate={{ y: 0 }}\n      transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n    >\n      <div className=\"flex items-center justify-around px-2 py-1\">\n        {tabs.map((tab) => {\n          const Icon = tab.icon\n          const isActive = activeTab === tab.id\n          \n          return (\n            <Button\n              key={tab.id}\n              variant=\"ghost\"\n              size=\"touch\"\n              className={cn(\n                \"flex flex-col items-center gap-1 h-14 px-3 relative\",\n                isActive && \"text-primary\"\n              )}\n              onClick={() => {\n                generateHapticFeedback('light')\n                onTabChange(tab.id)\n              }}\n              aria-label={tab.label}\n            >\n              <div className=\"relative\">\n                <Icon className=\"h-5 w-5\" />\n                {tab.badge && tab.badge > 0 && (\n                  <Badge \n                    variant=\"destructive\" \n                    className=\"absolute -top-2 -right-2 h-5 w-5 rounded-full p-0 text-xs flex items-center justify-center\"\n                  >\n                    {tab.badge > 99 ? '99+' : tab.badge}\n                  </Badge>\n                )}\n              </div>\n              <span className=\"text-xs\">{tab.label}</span>\n              \n              {/* Active indicator */}\n              {isActive && (\n                <motion.div\n                  className=\"absolute bottom-0 left-1/2 transform -translate-x-1/2 w-1 h-1 bg-primary rounded-full\"\n                  layoutId=\"activeTab\"\n                  transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n                />\n              )}\n            </Button>\n          )\n        })}\n      </div>\n    </motion.nav>\n  )\n}\n\n// Meal Components\ninterface MealCardProps {\n  meal: MealItem\n  onAddToCart: (meal: MealItem) => void\n  onToggleFavorite: (mealId: string) => void\n  isFavorite: boolean\n}\n\nconst MealCard: React.FC<MealCardProps> = ({ \n  meal, \n  onAddToCart, \n  onToggleFavorite, \n  isFavorite \n}) => {\n  const [isAdding, setIsAdding] = React.useState(false)\n  \n  const handleAddToCart = async () => {\n    setIsAdding(true)\n    generateHapticFeedback('medium')\n    \n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 500))\n    \n    onAddToCart(meal)\n    setIsAdding(false)\n  }\n  \n  const nutritionColors = {\n    A: 'bg-green-500',\n    B: 'bg-lime-500', \n    C: 'bg-yellow-500',\n    D: 'bg-orange-500',\n    E: 'bg-red-500'\n  }\n  \n  return (\n    <SwipeableCard\n      onSwipeLeft={() => onToggleFavorite(meal.id)}\n      onSwipeRight={() => handleAddToCart()}\n      className=\"mb-4\"\n    >\n      <motion.div \n        className=\"bg-card rounded-lg border border-border overflow-hidden shadow-sm\"\n        whileHover={{ scale: 1.02 }}\n        transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n      >\n        {/* Image and badges */}\n        <div className=\"relative\">\n          <img \n            src={meal.image} \n            alt={meal.name}\n            className=\"w-full h-32 object-cover\"\n            loading=\"lazy\"\n          />\n          \n          {/* Badges overlay */}\n          <div className=\"absolute top-2 left-2 flex flex-wrap gap-1\">\n            {meal.isPopular && (\n              <Badge variant=\"destructive\" className=\"text-xs\">\n                Popular\n              </Badge>\n            )}\n            <Badge \n              className={cn(\"text-xs text-white\", nutritionColors[meal.nutritionScore])}\n            >\n              Nutri-Score {meal.nutritionScore}\n            </Badge>\n          </div>\n          \n          {/* Favorite button */}\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            className=\"absolute top-2 right-2 bg-white/80 backdrop-blur-sm\"\n            onClick={() => onToggleFavorite(meal.id)}\n          >\n            <Heart \n              className={cn(\"h-4 w-4\", isFavorite && \"fill-red-500 text-red-500\")} \n            />\n          </Button>\n          \n          {/* Availability indicator */}\n          <div className=\"absolute bottom-2 right-2 bg-black/50 text-white px-2 py-1 rounded text-xs\">\n            {meal.availability} left\n          </div>\n        </div>\n        \n        {/* Content */}\n        <div className=\"p-4\">\n          <div className=\"flex items-start justify-between mb-2\">\n            <div className=\"flex-1\">\n              <h3 className=\"font-semibold text-base mb-1\">{meal.name}</h3>\n              <p className=\"text-sm text-muted-foreground mb-2 line-clamp-2\">\n                {meal.description}\n              </p>\n            </div>\n          </div>\n          \n          {/* Rating and timing */}\n          <div className=\"flex items-center gap-4 mb-3 text-sm text-muted-foreground\">\n            <div className=\"flex items-center gap-1\">\n              <Star className=\"h-4 w-4 fill-yellow-400 text-yellow-400\" />\n              <span>{meal.rating}</span>\n            </div>\n            <div className=\"flex items-center gap-1\">\n              <Clock className=\"h-4 w-4\" />\n              <span>{meal.preparationTime}m</span>\n            </div>\n          </div>\n          \n          {/* Dietary indicators */}\n          <div className=\"flex items-center gap-2 mb-3\">\n            {meal.isVegetarian && (\n              <div className=\"w-3 h-3 border-2 border-green-600 rounded-sm bg-green-100 flex items-center justify-center\">\n                <div className=\"w-1 h-1 bg-green-600 rounded-full\" />\n              </div>\n            )}\n            {meal.isVegan && (\n              <Badge variant=\"outline\" className=\"text-xs\">Vegan</Badge>\n            )}\n            {meal.isGlutenFree && (\n              <Badge variant=\"outline\" className=\"text-xs\">Gluten-Free</Badge>\n            )}\n          </div>\n          \n          {/* Price and add to cart */}\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-lg font-bold\">{formatCurrency(meal.price)}</span>\n            <Button\n              onClick={handleAddToCart}\n              disabled={isAdding || meal.availability === 0}\n              className=\"min-w-[100px]\"\n              haptic\n            >\n              {isAdding ? (\n                <motion.div\n                  className=\"h-4 w-4 border-2 border-current border-t-transparent rounded-full animate-spin\"\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                />\n              ) : meal.availability === 0 ? (\n                'Sold Out'\n              ) : (\n                'Add to Cart'\n              )}\n            </Button>\n          </div>\n        </div>\n      </motion.div>\n    </SwipeableCard>\n  )\n}\n\n// Cart Components\ninterface CartItemCardProps {\n  item: CartItem\n  onUpdateQuantity: (itemId: string, quantity: number) => void\n  onRemove: (itemId: string) => void\n}\n\nconst CartItemCard: React.FC<CartItemCardProps> = ({ \n  item, \n  onUpdateQuantity, \n  onRemove \n}) => {\n  return (\n    <SwipeableCard\n      onSwipeLeft={() => onRemove(item.id)}\n      className=\"mb-3\"\n    >\n      <motion.div \n        className=\"bg-card rounded-lg border border-border p-4\"\n        layout\n        transition={{ type: \"spring\", stiffness: 300, damping: 25 }}\n      >\n        <div className=\"flex gap-3\">\n          <img \n            src={item.image} \n            alt={item.name}\n            className=\"w-16 h-16 object-cover rounded-md flex-shrink-0\"\n          />\n          \n          <div className=\"flex-1 min-w-0\">\n            <h4 className=\"font-medium text-sm mb-1 truncate\">{item.name}</h4>\n            <p className=\"text-xs text-muted-foreground mb-2\">\n              {formatCurrency(item.price)} each\n            </p>\n            \n            {/* Quantity controls */}\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2\">\n                <Button\n                  variant=\"outline\"\n                  size=\"icon\"\n                  className=\"h-8 w-8\"\n                  onClick={() => onUpdateQuantity(item.id, Math.max(0, item.quantity - 1))}\n                  disabled={item.quantity <= 1}\n                  haptic\n                >\n                  <Minus className=\"h-3 w-3\" />\n                </Button>\n                \n                <span className=\"w-8 text-center font-medium\">{item.quantity}</span>\n                \n                <Button\n                  variant=\"outline\"\n                  size=\"icon\"\n                  className=\"h-8 w-8\"\n                  onClick={() => onUpdateQuantity(item.id, item.quantity + 1)}\n                  disabled={item.quantity >= item.availability}\n                  haptic\n                >\n                  <Plus className=\"h-3 w-3\" />\n                </Button>\n              </div>\n              \n              <span className=\"font-semibold\">\n                {formatCurrency(item.price * item.quantity)}\n              </span>\n            </div>\n          </div>\n        </div>\n      </motion.div>\n    </SwipeableCard>\n  )\n}\n\n// Payment Components\ninterface PaymentMethodProps {\n  selectedMethod: string\n  onMethodChange: (method: string) => void\n  balance: number\n}\n\nconst PaymentMethod: React.FC<PaymentMethodProps> = ({ \n  selectedMethod, \n  onMethodChange, \n  balance \n}) => {\n  const [showBalance, setShowBalance] = React.useState(false)\n  const [useFingerprint, setUseFingerprint] = React.useState(false)\n  \n  const methods = [\n    {\n      id: 'wallet',\n      name: 'School Wallet',\n      description: `Balance: ${showBalance ? formatCurrency(balance) : '••••••'}`,\n      icon: CreditCard,\n      available: balance > 0\n    },\n    {\n      id: 'upi',\n      name: 'UPI Payment',\n      description: 'Pay via PhonePe, GPay, Paytm',\n      icon: Smartphone,\n      available: true\n    },\n    {\n      id: 'card',\n      name: 'Debit/Credit Card',\n      description: 'Secure card payment',\n      icon: CreditCard,\n      available: true\n    }\n  ]\n  \n  return (\n    <div className=\"space-y-3\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"font-semibold\">Payment Method</h3>\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => setShowBalance(!showBalance)}\n          className=\"flex items-center gap-2\"\n        >\n          {showBalance ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n          {showBalance ? 'Hide' : 'Show'} Balance\n        </Button>\n      </div>\n      \n      {methods.map((method) => {\n        const Icon = method.icon\n        const isSelected = selectedMethod === method.id\n        \n        return (\n          <motion.div\n            key={method.id}\n            className={cn(\n              \"p-4 rounded-lg border border-border cursor-pointer transition-all\",\n              isSelected && \"border-primary bg-primary/5\",\n              !method.available && \"opacity-50 cursor-not-allowed\"\n            )}\n            onClick={() => method.available && onMethodChange(method.id)}\n            whileTap={{ scale: 0.98 }}\n          >\n            <div className=\"flex items-center gap-3\">\n              <Icon className=\"h-5 w-5\" />\n              <div className=\"flex-1\">\n                <div className=\"font-medium\">{method.name}</div>\n                <div className=\"text-sm text-muted-foreground\">{method.description}</div>\n              </div>\n              {isSelected && (\n                <CheckCircle className=\"h-5 w-5 text-primary\" />\n              )}\n            </div>\n          </motion.div>\n        )\n      })}\n      \n      {/* Security options */}\n      <div className=\"mt-6 space-y-3\">\n        <div className=\"flex items-center justify-between p-3 bg-muted/50 rounded-lg\">\n          <div className=\"flex items-center gap-3\">\n            <Shield className=\"h-5 w-5 text-primary\" />\n            <div>\n              <div className=\"font-medium text-sm\">Biometric Authentication</div>\n              <div className=\"text-xs text-muted-foreground\">\n                Use fingerprint for secure payments\n              </div>\n            </div>\n          </div>\n          <Switch\n            checked={useFingerprint}\n            onCheckedChange={setUseFingerprint}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\n// Order Tracking Components\ninterface OrderTrackingProps {\n  order: Order\n  onCancelOrder?: (orderId: string) => void\n}\n\nconst OrderTracking: React.FC<OrderTrackingProps> = ({ order, onCancelOrder }) => {\n  const statusSteps = [\n    { id: 'pending', label: 'Order Placed', icon: CheckCircle },\n    { id: 'preparing', label: 'Preparing', icon: Clock },\n    { id: 'ready', label: 'Ready for Pickup', icon: Bell },\n    { id: 'delivered', label: 'Delivered', icon: Truck },\n  ]\n  \n  const currentStepIndex = statusSteps.findIndex(step => step.id === order.status)\n  const canCancel = order.status === 'pending'\n  \n  return (\n    <motion.div \n      className=\"bg-card rounded-lg border border-border p-4 mb-4\"\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ delay: 0.1 }}\n    >\n      <div className=\"flex items-center justify-between mb-4\">\n        <div>\n          <h3 className=\"font-semibold\">Order #{order.id.slice(-6).toUpperCase()}</h3>\n          <p className=\"text-sm text-muted-foreground\">\n            Placed at {formatTime(order.orderTime)}\n          </p>\n        </div>\n        <Badge \n          variant={order.status === 'delivered' ? 'default' : 'secondary'}\n          className=\"capitalize\"\n        >\n          {order.status}\n        </Badge>\n      </div>\n      \n      {/* Progress steps */}\n      <div className=\"space-y-3 mb-4\">\n        {statusSteps.map((step, index) => {\n          const Icon = step.icon\n          const isCompleted = index <= currentStepIndex\n          const isCurrent = index === currentStepIndex\n          \n          return (\n            <div key={step.id} className=\"flex items-center gap-3\">\n              <div className={cn(\n                \"w-8 h-8 rounded-full flex items-center justify-center border-2 transition-all\",\n                isCompleted \n                  ? \"border-primary bg-primary text-primary-foreground\" \n                  : \"border-muted-foreground/30\"\n              )}>\n                <Icon className=\"h-4 w-4\" />\n              </div>\n              \n              <div className=\"flex-1\">\n                <div className={cn(\n                  \"font-medium text-sm\",\n                  isCompleted ? \"text-foreground\" : \"text-muted-foreground\"\n                )}>\n                  {step.label}\n                </div>\n                {isCurrent && order.status === 'preparing' && (\n                  <div className=\"text-xs text-muted-foreground\">\n                    Est. {formatTime(order.estimatedDelivery)}\n                  </div>\n                )}\n              </div>\n              \n              {isCurrent && (\n                <motion.div\n                  className=\"w-2 h-2 bg-primary rounded-full\"\n                  animate={{ scale: [1, 1.2, 1] }}\n                  transition={{ repeat: Infinity, duration: 1.5 }}\n                />\n              )}\n            </div>\n          )\n        })}\n      </div>\n      \n      {/* Order details */}\n      <div className=\"border-t border-border pt-3 mb-3\">\n        <div className=\"flex justify-between text-sm mb-1\">\n          <span>Items:</span>\n          <span>{order.items.reduce((sum, item) => sum + item.quantity, 0)}</span>\n        </div>\n        <div className=\"flex justify-between text-sm mb-1\">\n          <span>Total:</span>\n          <span className=\"font-semibold\">{formatCurrency(order.total)}</span>\n        </div>\n        <div className=\"flex justify-between text-sm\">\n          <span>Pickup:</span>\n          <span className=\"text-muted-foreground\">{order.pickupLocation}</span>\n        </div>\n      </div>\n      \n      {/* Actions */}\n      <div className=\"flex gap-2\">\n        <Button variant=\"outline\" size=\"sm\" className=\"flex-1\">\n          <Share2 className=\"h-4 w-4 mr-2\" />\n          Share Order\n        </Button>\n        \n        {canCancel && onCancelOrder && (\n          <Button \n            variant=\"destructive\" \n            size=\"sm\"\n            onClick={() => onCancelOrder(order.id)}\n            haptic\n          >\n            Cancel Order\n          </Button>\n        )}\n      </div>\n    </motion.div>\n  )\n}\n\n// Profile Components\ninterface ProfileSectionProps {\n  user: UserProfile\n  onLogout: () => void\n}\n\nconst ProfileSection: React.FC<ProfileSectionProps> = ({ user, onLogout }) => {\n  const spendingPercentage = (user.monthlySpent / user.monthlyLimit) * 100\n  \n  return (\n    <div className=\"space-y-6\">\n      {/* Profile header */}\n      <div className=\"flex items-center gap-4 p-4 bg-gradient-to-r from-primary/10 to-primary/5 rounded-lg\">\n        <Avatar className=\"h-16 w-16\">\n          <AvatarImage src={user.avatar} alt={user.name} />\n          <AvatarFallback>{user.name.split(' ').map(n => n[0]).join('')}</AvatarFallback>\n        </Avatar>\n        \n        <div className=\"flex-1\">\n          <h2 className=\"font-semibold text-lg\">{user.name}</h2>\n          <p className=\"text-sm text-muted-foreground\">{user.class}</p>\n          <p className=\"text-sm text-muted-foreground\">Roll: {user.rollNumber}</p>\n        </div>\n        \n        <Button variant=\"ghost\" size=\"icon\" onClick={onLogout}>\n          <LogOut className=\"h-5 w-5\" />\n        </Button>\n      </div>\n      \n      {/* Balance card */}\n      <motion.div \n        className=\"bg-gradient-to-r from-green-500 to-emerald-600 text-white rounded-lg p-4\"\n        whileHover={{ scale: 1.02 }}\n        transition={{ type: \"spring\", stiffness: 300 }}\n      >\n        <div className=\"flex items-center justify-between mb-2\">\n          <span className=\"text-sm opacity-90\">Available Balance</span>\n          <CreditCard className=\"h-5 w-5 opacity-90\" />\n        </div>\n        <div className=\"text-2xl font-bold mb-1\">{formatCurrency(user.balance)}</div>\n        <div className=\"text-sm opacity-90\">\n          Monthly spent: {formatCurrency(user.monthlySpent)} / {formatCurrency(user.monthlyLimit)}\n        </div>\n        <Progress \n          value={spendingPercentage} \n          className=\"mt-2 h-2 bg-white/20\"\n        />\n      </motion.div>\n      \n      {/* Quick actions */}\n      <div className=\"grid grid-cols-2 gap-3\">\n        {[\n          { icon: Plus, label: 'Add Money', action: () => {} },\n          { icon: Clock, label: 'Order History', action: () => {} },\n          { icon: Settings, label: 'Settings', action: () => {} },\n          { icon: Bell, label: 'Notifications', action: () => {} },\n        ].map((item, index) => {\n          const Icon = item.icon\n          return (\n            <Button\n              key={index}\n              variant=\"outline\"\n              className=\"h-16 flex flex-col gap-2\"\n              onClick={item.action}\n              haptic\n            >\n              <Icon className=\"h-5 w-5\" />\n              <span className=\"text-xs\">{item.label}</span>\n            </Button>\n          )\n        })}\n      </div>\n      \n      {/* Dietary preferences */}\n      <div className=\"space-y-3\">\n        <h3 className=\"font-semibold\">Dietary Preferences</h3>\n        <div className=\"flex flex-wrap gap-2\">\n          {user.dietaryPreferences.map((pref, index) => (\n            <Badge key={index} variant=\"secondary\" className=\"capitalize\">\n              {pref}\n            </Badge>\n          ))}\n        </div>\n        \n        {user.allergens.length > 0 && (\n          <div>\n            <h4 className=\"font-medium text-sm mb-2\">Allergens to Avoid</h4>\n            <div className=\"flex flex-wrap gap-2\">\n              {user.allergens.map((allergen, index) => (\n                <Badge key={index} variant=\"destructive\" className=\"capitalize\">\n                  {allergen}\n                </Badge>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Parent contact */}\n      <div className=\"bg-muted/50 rounded-lg p-4\">\n        <h3 className=\"font-semibold mb-2\">Parent Contact</h3>\n        <div className=\"space-y-1 text-sm\">\n          <div className=\"flex justify-between\">\n            <span className=\"text-muted-foreground\">Name:</span>\n            <span>{user.parentName}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span className=\"text-muted-foreground\">Phone:</span>\n            <span>{user.parentPhone}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n// Main Component\nexport const AdvancedMobileExperience: React.FC = () => {\n  // State management\n  const [activeTab, setActiveTab] = React.useState('home')\n  const [meals] = React.useState<MealItem[]>(mockMeals)\n  const [cart, setCart] = React.useState<CartItem[]>([])\n  const [favorites, setFavorites] = React.useState<Set<string>>(new Set())\n  const [orders, setOrders] = React.useState<Order[]>([])\n  const [user] = React.useState<UserProfile>(mockUser)\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = React.useState('wallet')\n  const [searchQuery, setSearchQuery] = React.useState('')\n  const [isCheckingOut, setIsCheckingOut] = React.useState(false)\n  \n  // Hooks\n  const isOnline = useOnlineStatus()\n  const { toast } = useToast()\n  \n  // Cart functions\n  const addToCart = React.useCallback((meal: MealItem) => {\n    setCart(prevCart => {\n      const existingItem = prevCart.find(item => item.id === meal.id)\n      if (existingItem) {\n        return prevCart.map(item =>\n          item.id === meal.id\n            ? { ...item, quantity: item.quantity + 1 }\n            : item\n        )\n      }\n      return [...prevCart, { ...meal, quantity: 1 }]\n    })\n    \n    toast({\n      title: \"Added to cart\",\n      description: `${meal.name} has been added to your cart`,\n      duration: 2000,\n    })\n  }, [toast])\n  \n  const updateCartQuantity = React.useCallback((itemId: string, quantity: number) => {\n    if (quantity === 0) {\n      setCart(prevCart => prevCart.filter(item => item.id !== itemId))\n    } else {\n      setCart(prevCart =>\n        prevCart.map(item =>\n          item.id === itemId ? { ...item, quantity } : item\n        )\n      )\n    }\n    generateHapticFeedback('light')\n  }, [])\n  \n  const removeFromCart = React.useCallback((itemId: string) => {\n    setCart(prevCart => prevCart.filter(item => item.id !== itemId))\n    generateHapticFeedback('medium')\n    toast({\n      title: \"Item removed\",\n      description: \"Item has been removed from your cart\",\n      duration: 2000,\n    })\n  }, [toast])\n  \n  const toggleFavorite = React.useCallback((mealId: string) => {\n    setFavorites(prevFavorites => {\n      const newFavorites = new Set(prevFavorites)\n      if (newFavorites.has(mealId)) {\n        newFavorites.delete(mealId)\n        toast({\n          title: \"Removed from favorites\",\n          duration: 2000,\n        })\n      } else {\n        newFavorites.add(mealId)\n        toast({\n          title: \"Added to favorites\",\n          duration: 2000,\n        })\n      }\n      return newFavorites\n    })\n    generateHapticFeedback('light')\n  }, [toast])\n  \n  // Checkout function\n  const handleCheckout = React.useCallback(async () => {\n    if (cart.length === 0) return\n    \n    setIsCheckingOut(true)\n    generateHapticFeedback('medium')\n    \n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 2000))\n      \n      const newOrder: Order = {\n        id: `order-${Date.now()}`,\n        items: [...cart],\n        status: 'pending',\n        orderTime: new Date(),\n        estimatedDelivery: new Date(Date.now() + 20 * 60 * 1000), // 20 minutes\n        total: cart.reduce((sum, item) => sum + (item.price * item.quantity), 0),\n        pickupLocation: 'School Cafeteria',\n        studentInfo: {\n          name: user.name,\n          class: user.class,\n          rollNumber: user.rollNumber\n        }\n      }\n      \n      setOrders(prevOrders => [newOrder, ...prevOrders])\n      setCart([])\n      \n      toast({\n        title: \"Order placed successfully!\",\n        description: `Order #${newOrder.id.slice(-6).toUpperCase()} will be ready in 20 minutes`,\n        duration: 5000,\n      })\n      \n      setActiveTab('profile') // Switch to show order tracking\n    } catch (error) {\n      toast({\n        title: \"Order failed\",\n        description: \"Please try again\",\n        variant: \"destructive\",\n        duration: 3000,\n      })\n    } finally {\n      setIsCheckingOut(false)\n    }\n  }, [cart, user, toast])\n  \n  // Filter meals based on search\n  const filteredMeals = React.useMemo(() => {\n    if (!searchQuery) return meals\n    return meals.filter(meal =>\n      meal.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      meal.category.toLowerCase().includes(searchQuery.toLowerCase())\n    )\n  }, [meals, searchQuery])\n  \n  // Calculate cart total\n  const cartTotal = React.useMemo(() => {\n    return cart.reduce((sum, item) => sum + (item.price * item.quantity), 0)\n  }, [cart])\n  \n  const cartItemCount = React.useMemo(() => {\n    return cart.reduce((sum, item) => sum + item.quantity, 0)\n  }, [cart])\n  \n  // Render tab content\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 'home':\n        return (\n          <div className=\"space-y-6\">\n            {/* Online status indicator */}\n            <motion.div \n              className={cn(\n                \"flex items-center gap-2 p-3 rounded-lg text-sm\",\n                isOnline \n                  ? \"bg-green-50 text-green-700 border border-green-200\" \n                  : \"bg-red-50 text-red-700 border border-red-200\"\n              )}\n              initial={{ opacity: 0, y: -20 }}\n              animate={{ opacity: 1, y: 0 }}\n            >\n              {isOnline ? <Wifi className=\"h-4 w-4\" /> : <WifiOff className=\"h-4 w-4\" />}\n              {isOnline ? 'Connected - Real-time updates' : 'Offline - Some features limited'}\n            </motion.div>\n            \n            {/* Active orders */}\n            {orders.filter(order => order.status !== 'delivered').map(order => (\n              <OrderTracking \n                key={order.id} \n                order={order}\n                onCancelOrder={(orderId) => {\n                  setOrders(prevOrders => \n                    prevOrders.filter(o => o.id !== orderId)\n                  )\n                  toast({\n                    title: \"Order cancelled\",\n                    description: \"Your order has been cancelled successfully\",\n                    duration: 3000,\n                  })\n                }}\n              />\n            ))}\n            \n            {/* Featured meals */}\n            <div>\n              <div className=\"flex items-center justify-between mb-4\">\n                <h2 className=\"text-xl font-bold\">Today's Menu</h2>\n                <Button variant=\"ghost\" size=\"sm\">\n                  <Filter className=\"h-4 w-4 mr-2\" />\n                  Filter\n                </Button>\n              </div>\n              \n              <div className=\"space-y-4\">\n                {meals.map(meal => (\n                  <MealCard\n                    key={meal.id}\n                    meal={meal}\n                    onAddToCart={addToCart}\n                    onToggleFavorite={toggleFavorite}\n                    isFavorite={favorites.has(meal.id)}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        )\n        \n      case 'search':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"sticky top-0 bg-background/95 backdrop-blur-sm z-10 pb-4\">\n              <Input\n                placeholder=\"Search meals, categories...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"w-full\"\n              />\n            </div>\n            \n            <div className=\"space-y-4\">\n              {filteredMeals.map(meal => (\n                <MealCard\n                  key={meal.id}\n                  meal={meal}\n                  onAddToCart={addToCart}\n                  onToggleFavorite={toggleFavorite}\n                  isFavorite={favorites.has(meal.id)}\n                />\n              ))}\n              \n              {filteredMeals.length === 0 && searchQuery && (\n                <div className=\"text-center py-12 text-muted-foreground\">\n                  <Search className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                  <p>No meals found for \"{searchQuery}\"</p>\n                </div>\n              )}\n            </div>\n          </div>\n        )\n        \n      case 'cart':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <h2 className=\"text-xl font-bold\">Your Cart</h2>\n              {cart.length > 0 && (\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => setCart([])}\n                  className=\"text-destructive\"\n                >\n                  Clear All\n                </Button>\n              )}\n            </div>\n            \n            {cart.length === 0 ? (\n              <div className=\"text-center py-12 text-muted-foreground\">\n                <ShoppingCart className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                <p>Your cart is empty</p>\n                <Button \n                  variant=\"outline\" \n                  className=\"mt-4\"\n                  onClick={() => setActiveTab('home')}\n                >\n                  Browse Menu\n                </Button>\n              </div>\n            ) : (\n              <>\n                <div className=\"space-y-3\">\n                  {cart.map(item => (\n                    <CartItemCard\n                      key={item.id}\n                      item={item}\n                      onUpdateQuantity={updateCartQuantity}\n                      onRemove={removeFromCart}\n                    />\n                  ))}\n                </div>\n                \n                {/* Order summary */}\n                <div className=\"bg-muted/50 rounded-lg p-4 space-y-3\">\n                  <div className=\"flex justify-between text-sm\">\n                    <span>Subtotal ({cartItemCount} items)</span>\n                    <span>{formatCurrency(cartTotal)}</span>\n                  </div>\n                  <div className=\"flex justify-between text-sm\">\n                    <span>Service charge</span>\n                    <span>{formatCurrency(5)}</span>\n                  </div>\n                  <div className=\"border-t border-border pt-2 flex justify-between font-semibold\">\n                    <span>Total</span>\n                    <span>{formatCurrency(cartTotal + 5)}</span>\n                  </div>\n                </div>\n                \n                {/* Payment method */}\n                <PaymentMethod\n                  selectedMethod={selectedPaymentMethod}\n                  onMethodChange={setSelectedPaymentMethod}\n                  balance={user.balance}\n                />\n                \n                {/* Checkout button */}\n                <Button\n                  className=\"w-full h-12 text-base font-semibold\"\n                  onClick={handleCheckout}\n                  disabled={isCheckingOut || cartTotal + 5 > user.balance}\n                  haptic\n                >\n                  {isCheckingOut ? (\n                    <motion.div\n                      className=\"h-5 w-5 border-2 border-current border-t-transparent rounded-full animate-spin mr-2\"\n                      initial={{ opacity: 0 }}\n                      animate={{ opacity: 1 }}\n                    />\n                  ) : null}\n                  {isCheckingOut \n                    ? 'Processing...' \n                    : `Place Order • ${formatCurrency(cartTotal + 5)}`\n                  }\n                </Button>\n                \n                {cartTotal + 5 > user.balance && (\n                  <p className=\"text-destructive text-sm text-center\">\n                    Insufficient balance. Please add money to your wallet.\n                  </p>\n                )}\n              </>\n            )}\n          </div>\n        )\n        \n      case 'profile':\n        return (\n          <ProfileSection \n            user={user} \n            onLogout={() => {\n              toast({\n                title: \"Logged out\",\n                description: \"You have been logged out successfully\",\n                duration: 3000,\n              })\n            }}\n          />\n        )\n        \n      default:\n        return null\n    }\n  }\n  \n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Header */}\n      <motion.header \n        className=\"sticky top-0 bg-background/95 backdrop-blur-sm border-b border-border z-40 safe-area-top\"\n        initial={{ y: -100 }}\n        animate={{ y: 0 }}\n        transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n      >\n        <div className=\"flex items-center justify-between p-4\">\n          <div className=\"flex items-center gap-3\">\n            {activeTab !== 'home' && (\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={() => setActiveTab('home')}\n                haptic\n              >\n                <ArrowLeft className=\"h-5 w-5\" />\n              </Button>\n            )}\n            <div>\n              <h1 className=\"font-bold text-lg\">\n                {activeTab === 'home' && 'HASIVU'}\n                {activeTab === 'search' && 'Search Menu'}\n                {activeTab === 'cart' && 'Cart'}\n                {activeTab === 'profile' && 'Profile'}\n              </h1>\n              {activeTab === 'home' && (\n                <p className=\"text-sm text-muted-foreground\">\n                  Good appetite, {user.name.split(' ')[0]}!\n                </p>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"flex items-center gap-2\">\n            {activeTab === 'home' && (\n              <Button variant=\"ghost\" size=\"icon\" haptic>\n                <Bell className=\"h-5 w-5\" />\n              </Button>\n            )}\n            \n            {activeTab === 'search' && (\n              <Button variant=\"ghost\" size=\"icon\" haptic>\n                <Camera className=\"h-5 w-5\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </motion.header>\n      \n      {/* Main content */}\n      <main className=\"px-4 py-6 pb-20\">\n        <AnimatePresence mode=\"wait\">\n          <motion.div\n            key={activeTab}\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            exit={{ opacity: 0, x: -20 }}\n            transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n          >\n            {renderTabContent()}\n          </motion.div>\n        </AnimatePresence>\n      </main>\n      \n      {/* Bottom Navigation */}\n      <BottomNavigation\n        activeTab={activeTab}\n        onTabChange={setActiveTab}\n        cartItemCount={cartItemCount}\n      />\n      \n      {/* PWA install prompt would go here */}\n      {/* Offline toast notifications would be handled by the toast system */}\n    </div>\n  )\n}\n\nexport default AdvancedMobileExperience","/Users/mahesha/Downloads/hasivu-platform/web/src/components/mobile/index.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/notifications/RealTimeNotifications.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/orders/OrderTracker.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/providers/redux-provider.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/providers/theme-provider.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/rfid/RFIDVerificationSystem.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/rfid/__tests__/RFIDVerificationSystem.test.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/staff/StaffManagementSystem.tsx",["2425"],[],"\"use client\";\n\nimport React, { useState, useMemo } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport {\n  Users,\n  Calendar,\n  Clock,\n  CheckCircle,\n  AlertTriangle,\n  TrendingUp,\n  TrendingDown,\n  MapPin,\n  Phone,\n  Mail,\n  Star,\n  Award,\n  Activity,\n  BarChart3,\n  Settings,\n  Plus,\n  Edit,\n  Trash2,\n  Search,\n  Filter,\n  Download,\n  Upload,\n  Eye,\n  UserPlus,\n  UserMinus,\n  Target,\n  Zap,\n  Loader2\n} from 'lucide-react';\n\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Input } from '@/components/ui/input';\n\n// API hooks\nimport { useStaffMembers, useStaffMetrics } from '@/hooks/useApiIntegration';\n\n// TypeScript interfaces for Staff Management\ninterface StaffMember {\n  id: string;\n  employeeId: string;\n  name: string;\n  email: string;\n  phone: string;\n  role: 'chef' | 'assistant' | 'prep' | 'manager' | 'server' | 'cleaner';\n  department: 'kitchen' | 'service' | 'management' | 'maintenance';\n  status: 'active' | 'break' | 'offline' | 'sick' | 'vacation';\n  avatar?: string;\n  hireDate: string;\n  salary: number;\n  efficiency: number;\n  hoursWorked: number;\n  tasksCompleted: number;\n  currentTask?: string;\n  shift: Shift;\n  skills: string[];\n  certifications: string[];\n  performanceRating: number;\n  attendanceRate: number;\n  lastLogin: string;\n  location: string;\n}\n\ninterface Shift {\n  id: string;\n  name: string;\n  startTime: string;\n  endTime: string;\n  days: string[];\n  isActive: boolean;\n}\n\ninterface Task {\n  id: string;\n  title: string;\n  description: string;\n  assignedTo: string;\n  assignedBy: string;\n  priority: 'low' | 'medium' | 'high' | 'urgent';\n  status: 'pending' | 'in_progress' | 'completed' | 'overdue';\n  dueDate: string;\n  estimatedHours: number;\n  actualHours?: number;\n  category: string;\n  tags: string[];\n}\n\ninterface Schedule {\n  id: string;\n  staffId: string;\n  date: string;\n  shiftId: string;\n  status: 'scheduled' | 'confirmed' | 'absent' | 'sick';\n  checkIn?: string;\n  checkOut?: string;\n  hoursWorked?: number;\n  notes?: string;\n}\n\ninterface StaffMetrics {\n  totalStaff: number;\n  activeStaff: number;\n  averageEfficiency: number;\n  totalHoursWorked: number;\n  tasksCompleted: number;\n  attendanceRate: number;\n  turnoverRate: number;\n  averageSalary: number;\n}\n\n// Mock data for staff management\nconst mockShifts: Shift[] = [\n  {\n    id: 'shift-1',\n    name: 'Morning Shift',\n    startTime: '06:00',\n    endTime: '14:00',\n    days: ['monday', 'tuesday', 'wednesday', 'thursday', 'friday'],\n    isActive: true\n  },\n  {\n    id: 'shift-2',\n    name: 'Afternoon Shift',\n    startTime: '14:00',\n    endTime: '22:00',\n    days: ['monday', 'tuesday', 'wednesday', 'thursday', 'friday'],\n    isActive: true\n  },\n  {\n    id: 'shift-3',\n    name: 'Weekend Shift',\n    startTime: '08:00',\n    endTime: '16:00',\n    days: ['saturday', 'sunday'],\n    isActive: true\n  }\n];\n\nconst mockStaffMembers: StaffMember[] = [\n  {\n    id: 'staff-1',\n    employeeId: 'EMP001',\n    name: 'Rajesh Kumar',\n    email: 'rajesh.kumar@hasivu.com',\n    phone: '+91-9876543210',\n    role: 'chef',\n    department: 'kitchen',\n    status: 'active',\n    avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=100&h=100&fit=crop&crop=face',\n    hireDate: '2023-01-15',\n    salary: 45000,\n    efficiency: 92,\n    hoursWorked: 160,\n    tasksCompleted: 48,\n    currentTask: 'Preparing lunch orders',\n    shift: mockShifts[0],\n    skills: ['Indian Cuisine', 'Grilling', 'Food Safety', 'Team Leadership'],\n    certifications: ['Food Safety Certificate', 'Culinary Arts Diploma'],\n    performanceRating: 4.8,\n    attendanceRate: 96,\n    lastLogin: '2024-01-15T08:30:00Z',\n    location: 'Main Kitchen'\n  },\n  {\n    id: 'staff-2',\n    employeeId: 'EMP002',\n    name: 'Sunita Devi',\n    email: 'sunita.devi@hasivu.com',\n    phone: '+91-9876543211',\n    role: 'assistant',\n    department: 'kitchen',\n    status: 'active',\n    avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=100&h=100&fit=crop&crop=face',\n    hireDate: '2023-03-20',\n    salary: 28000,\n    efficiency: 88,\n    hoursWorked: 168,\n    tasksCompleted: 62,\n    currentTask: 'Cleaning prep station',\n    shift: mockShifts[0],\n    skills: ['Food Prep', 'Cleaning', 'Inventory Management'],\n    certifications: ['Hygiene Certificate'],\n    performanceRating: 4.5,\n    attendanceRate: 94,\n    lastLogin: '2024-01-15T07:45:00Z',\n    location: 'Prep Area'\n  },\n  {\n    id: 'staff-3',\n    employeeId: 'EMP003',\n    name: 'Mohammed Ali',\n    email: 'mohammed.ali@hasivu.com',\n    phone: '+91-9876543212',\n    role: 'prep',\n    department: 'kitchen',\n    status: 'break',\n    avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=100&h=100&fit=crop&crop=face',\n    hireDate: '2023-06-10',\n    salary: 25000,\n    efficiency: 85,\n    hoursWorked: 120,\n    tasksCompleted: 35,\n    shift: mockShifts[1],\n    skills: ['Vegetable Prep', 'Meat Processing', 'Stock Management'],\n    certifications: ['Food Handler Certificate'],\n    performanceRating: 4.2,\n    attendanceRate: 91,\n    lastLogin: '2024-01-15T14:15:00Z',\n    location: 'Storage Area'\n  },\n  {\n    id: 'staff-4',\n    employeeId: 'EMP004',\n    name: 'Priya Sharma',\n    email: 'priya.sharma@hasivu.com',\n    phone: '+91-9876543213',\n    role: 'manager',\n    department: 'management',\n    status: 'active',\n    avatar: 'https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=100&h=100&fit=crop&crop=face',\n    hireDate: '2022-09-01',\n    salary: 65000,\n    efficiency: 95,\n    hoursWorked: 180,\n    tasksCompleted: 28,\n    currentTask: 'Monthly performance review',\n    shift: mockShifts[0],\n    skills: ['Team Management', 'Operations', 'Analytics', 'Training'],\n    certifications: ['Management Certificate', 'HR Certification'],\n    performanceRating: 4.9,\n    attendanceRate: 98,\n    lastLogin: '2024-01-15T09:00:00Z',\n    location: 'Office'\n  }\n];\n\nconst mockTasks: Task[] = [\n  {\n    id: 'task-1',\n    title: 'Prepare lunch menu for 200 students',\n    description: 'Coordinate with team to prepare balanced lunch menu including main course, sides, and beverages',\n    assignedTo: 'staff-1',\n    assignedBy: 'staff-4',\n    priority: 'high',\n    status: 'in_progress',\n    dueDate: '2024-01-15T12:00:00Z',\n    estimatedHours: 4,\n    actualHours: 2.5,\n    category: 'Food Preparation',\n    tags: ['urgent', 'lunch', 'coordination']\n  },\n  {\n    id: 'task-2',\n    title: 'Inventory check for dry goods',\n    description: 'Complete inventory audit for all dry goods and update stock levels in system',\n    assignedTo: 'staff-2',\n    assignedBy: 'staff-4',\n    priority: 'medium',\n    status: 'completed',\n    dueDate: '2024-01-15T10:00:00Z',\n    estimatedHours: 2,\n    actualHours: 1.8,\n    category: 'Inventory',\n    tags: ['inventory', 'audit', 'stock']\n  },\n  {\n    id: 'task-3',\n    title: 'Deep clean prep area',\n    description: 'Thorough cleaning and sanitization of all prep surfaces and equipment',\n    assignedTo: 'staff-3',\n    assignedBy: 'staff-1',\n    priority: 'medium',\n    status: 'pending',\n    dueDate: '2024-01-15T16:00:00Z',\n    estimatedHours: 3,\n    category: 'Cleaning',\n    tags: ['cleaning', 'sanitization', 'maintenance']\n  }\n];\n\nconst mockMetrics: StaffMetrics = {\n  totalStaff: 12,\n  activeStaff: 8,\n  averageEfficiency: 89.5,\n  totalHoursWorked: 2840,\n  tasksCompleted: 173,\n  attendanceRate: 94.7,\n  turnoverRate: 8.3,\n  averageSalary: 38750\n};\n\n// Utility functions\nconst getStatusColor = (status: StaffMember['status']) => {\n  switch (status) {\n    case 'active': return 'bg-green-100 text-green-800 border-green-200';\n    case 'break': return 'bg-yellow-100 text-yellow-800 border-yellow-200';\n    case 'offline': return 'bg-gray-100 text-gray-800 border-gray-200';\n    case 'sick': return 'bg-red-100 text-red-800 border-red-200';\n    case 'vacation': return 'bg-blue-100 text-blue-800 border-blue-200';\n    default: return 'bg-gray-100 text-gray-800 border-gray-200';\n  }\n};\n\nconst getTaskStatusColor = (status: Task['status']) => {\n  switch (status) {\n    case 'completed': return 'bg-green-100 text-green-800 border-green-200';\n    case 'in_progress': return 'bg-blue-100 text-blue-800 border-blue-200';\n    case 'pending': return 'bg-yellow-100 text-yellow-800 border-yellow-200';\n    case 'overdue': return 'bg-red-100 text-red-800 border-red-200';\n    default: return 'bg-gray-100 text-gray-800 border-gray-200';\n  }\n};\n\nconst getRoleIcon = (role: StaffMember['role']) => {\n  switch (role) {\n    case 'chef': return '👨‍🍳';\n    case 'assistant': return '👩‍🍳';\n    case 'prep': return '🔪';\n    case 'manager': return '👔';\n    case 'server': return '🍽️';\n    case 'cleaner': return '🧹';\n    default: return '👤';\n  }\n};\n\n// Staff Member Card Component\nconst StaffMemberCard = ({ staff }: { staff: StaffMember }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <Card className=\"hover:shadow-lg transition-all duration-200\">\n      <CardContent className=\"pt-4\">\n        <div className=\"flex items-start space-x-4 mb-4\">\n          <div className=\"relative\">\n            <Avatar className=\"w-16 h-16\">\n              <AvatarImage src={staff.avatar} alt={staff.name} />\n              <AvatarFallback className=\"text-lg\">\n                {staff.name.split(' ').map(n => n[0]).join('')}\n              </AvatarFallback>\n            </Avatar>\n            <div className=\"absolute -bottom-1 -right-1 text-2xl\">\n              {getRoleIcon(staff.role)}\n            </div>\n            <div className={`absolute -top-1 -right-1 w-4 h-4 rounded-full border-2 border-white ${\n              staff.status === 'active' ? 'bg-green-500' :\n              staff.status === 'break' ? 'bg-yellow-500' :\n              staff.status === 'offline' ? 'bg-gray-500' :\n              staff.status === 'sick' ? 'bg-red-500' :\n              'bg-blue-500'\n            }`} />\n          </div>\n          \n          <div className=\"flex-1\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <div>\n                <h3 className=\"font-semibold text-lg text-gray-900\">{staff.name}</h3>\n                <p className=\"text-sm text-gray-600 capitalize\">{staff.role} • {staff.department}</p>\n                <p className=\"text-xs text-gray-500\">{staff.employeeId}</p>\n              </div>\n              <Badge className={`${getStatusColor(staff.status)} border`}>\n                {staff.status}\n              </Badge>\n            </div>\n            \n            <div className=\"grid grid-cols-2 gap-3 text-sm mb-3\">\n              <div>\n                <p className=\"text-gray-600\">Efficiency</p>\n                <div className=\"flex items-center space-x-2\">\n                  <Progress value={staff.efficiency} className=\"h-2 flex-1\" />\n                  <span className=\"font-semibold\">{staff.efficiency}%</span>\n                </div>\n              </div>\n              <div>\n                <p className=\"text-gray-600\">Rating</p>\n                <div className=\"flex items-center space-x-1\">\n                  <Star className=\"w-4 h-4 text-yellow-500 fill-current\" />\n                  <span className=\"font-semibold\">{staff.performanceRating}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {staff.currentTask && (\n          <div className=\"mb-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n            <div className=\"flex items-center space-x-2 mb-1\">\n              <Activity className=\"w-4 h-4 text-blue-600\" />\n              <span className=\"text-sm font-medium text-blue-800\">Current Task</span>\n            </div>\n            <p className=\"text-sm text-blue-700\">{staff.currentTask}</p>\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-3 gap-3 text-center mb-4\">\n          <div className=\"p-2 bg-gray-50 rounded-lg\">\n            <div className=\"text-lg font-bold text-gray-900\">{staff.hoursWorked}h</div>\n            <div className=\"text-xs text-gray-600\">Hours Worked</div>\n          </div>\n          <div className=\"p-2 bg-gray-50 rounded-lg\">\n            <div className=\"text-lg font-bold text-gray-900\">{staff.tasksCompleted}</div>\n            <div className=\"text-xs text-gray-600\">Tasks Done</div>\n          </div>\n          <div className=\"p-2 bg-gray-50 rounded-lg\">\n            <div className=\"text-lg font-bold text-gray-900\">{staff.attendanceRate}%</div>\n            <div className=\"text-xs text-gray-600\">Attendance</div>\n          </div>\n        </div>\n\n        <div className=\"flex items-center justify-between text-xs text-gray-500 mb-4\">\n          <span className=\"flex items-center\">\n            <MapPin className=\"w-3 h-3 mr-1\" />\n            {staff.location}\n          </span>\n          <span className=\"flex items-center\">\n            <Clock className=\"w-3 h-3 mr-1\" />\n            {staff.shift.name}\n          </span>\n        </div>\n\n        {isExpanded && (\n          <motion.div\n            initial={{ opacity: 0, height: 0 }}\n            animate={{ opacity: 1, height: 'auto' }}\n            className=\"space-y-3 pt-3 border-t\"\n          >\n            <div>\n              <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Contact</h4>\n              <div className=\"space-y-1 text-sm text-gray-600\">\n                <div className=\"flex items-center\">\n                  <Mail className=\"w-4 h-4 mr-2\" />\n                  {staff.email}\n                </div>\n                <div className=\"flex items-center\">\n                  <Phone className=\"w-4 h-4 mr-2\" />\n                  {staff.phone}\n                </div>\n              </div>\n            </div>\n            \n            <div>\n              <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Skills</h4>\n              <div className=\"flex flex-wrap gap-1\">\n                {staff.skills.map((skill, index) => (\n                  <Badge key={index} variant=\"secondary\" className=\"text-xs\">\n                    {skill}\n                  </Badge>\n                ))}\n              </div>\n            </div>\n            \n            <div>\n              <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Certifications</h4>\n              <div className=\"flex flex-wrap gap-1\">\n                {staff.certifications.map((cert, index) => (\n                  <Badge key={index} variant=\"outline\" className=\"text-xs\">\n                    <Award className=\"w-3 h-3 mr-1\" />\n                    {cert}\n                  </Badge>\n                ))}\n              </div>\n            </div>\n          </motion.div>\n        )}\n\n        <div className=\"flex space-x-2 mt-4\">\n          <Button size=\"sm\" variant=\"outline\" className=\"flex-1\">\n            <Edit className=\"w-3 h-3 mr-1\" />\n            Edit\n          </Button>\n          <Button \n            size=\"sm\" \n            variant=\"outline\" \n            onClick={() => setIsExpanded(!isExpanded)}\n          >\n            <Eye className=\"w-3 h-3 mr-1\" />\n            {isExpanded ? 'Less' : 'More'}\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\n// Task Card Component\nconst TaskCard = ({ task, staffMembers }: { task: Task; staffMembers: StaffMember[] }) => {\n  const assignedStaff = staffMembers.find(s => s.id === task.assignedTo);\n  const assignedByStaff = staffMembers.find(s => s.id === task.assignedBy);\n\n  return (\n    <Card className=\"hover:shadow-md transition-shadow\">\n      <CardContent className=\"pt-4\">\n        <div className=\"flex items-start justify-between mb-3\">\n          <div className=\"flex-1\">\n            <h4 className=\"font-semibold text-gray-900 mb-1\">{task.title}</h4>\n            <p className=\"text-sm text-gray-600 mb-2\">{task.description}</p>\n          </div>\n          <Badge className={`${getTaskStatusColor(task.status)} border ml-2`}>\n            {task.status.replace('_', ' ')}\n          </Badge>\n        </div>\n\n        <div className=\"grid grid-cols-2 gap-3 text-sm mb-3\">\n          <div>\n            <p className=\"text-gray-600\">Assigned to</p>\n            <div className=\"flex items-center space-x-2\">\n              {assignedStaff?.avatar && (\n                <Avatar className=\"w-6 h-6\">\n                  <AvatarImage src={assignedStaff.avatar} alt={assignedStaff.name} />\n                  <AvatarFallback className=\"text-xs\">\n                    {assignedStaff.name.split(' ').map(n => n[0]).join('')}\n                  </AvatarFallback>\n                </Avatar>\n              )}\n              <span className=\"font-medium\">{assignedStaff?.name}</span>\n            </div>\n          </div>\n          <div>\n            <p className=\"text-gray-600\">Priority</p>\n            <Badge className={`${\n              task.priority === 'urgent' ? 'bg-red-100 text-red-800' :\n              task.priority === 'high' ? 'bg-orange-100 text-orange-800' :\n              task.priority === 'medium' ? 'bg-blue-100 text-blue-800' :\n              'bg-gray-100 text-gray-800'\n            }`}>\n              {task.priority}\n            </Badge>\n          </div>\n        </div>\n\n        <div className=\"flex items-center justify-between text-xs text-gray-500 mb-3\">\n          <span className=\"flex items-center\">\n            <Clock className=\"w-3 h-3 mr-1\" />\n            Due: {new Date(task.dueDate).toLocaleString()}\n          </span>\n          <span>\n            {task.actualHours ? `${task.actualHours}h` : `Est: ${task.estimatedHours}h`}\n          </span>\n        </div>\n\n        <div className=\"flex flex-wrap gap-1 mb-3\">\n          {task.tags.map((tag, index) => (\n            <Badge key={index} variant=\"secondary\" className=\"text-xs\">\n              {tag}\n            </Badge>\n          ))}\n        </div>\n\n        <div className=\"flex space-x-2\">\n          <Button size=\"sm\" variant=\"outline\" className=\"flex-1\">\n            <Eye className=\"w-3 h-3 mr-1\" />\n            View\n          </Button>\n          <Button size=\"sm\" variant=\"outline\">\n            <Edit className=\"w-3 h-3 mr-1\" />\n            Edit\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\n// Main Staff Management System Component\nexport const StaffManagementSystem: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState('staff');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterRole, setFilterRole] = useState('all');\n  const [filterStatus, setFilterStatus] = useState('all');\n\n  // Live data\n  const { data: staffData, loading: staffLoading, error: staffError } = useStaffMembers();\n  const { data: metricsData, loading: metricsLoading, error: metricsError } = useStaffMetrics();\n\n  const staff: any[] = staffData || [];\n  const metrics: any = metricsData || {\n    totalStaff: staff.length,\n    activeStaff: staff.filter((s: any) => s.status === 'active').length,\n    averageEfficiency: 0,\n    totalHoursWorked: 0,\n    tasksCompleted: 0,\n    attendanceRate: 0,\n    turnoverRate: 0,\n    averageSalary: 0,\n  };\n\n  // Filter staff members\n  const filteredStaff = useMemo(() => {\n    return staff.filter((s: any) => {\n      const matchesSearch = (s.name || '').toLowerCase().includes(searchTerm.toLowerCase()) ||\n                            (s.email || '').toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesRole = filterRole === 'all' || (s.role || '').toLowerCase() === filterRole;\n      const matchesStatus = filterStatus === 'all' || (s.status || '').toLowerCase() === filterStatus;\n      return matchesSearch && matchesRole && matchesStatus;\n    });\n  }, [staff, searchTerm, filterRole, filterStatus]);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-6\">\n      <div className=\"max-w-7xl mx-auto space-y-6\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900\" data-testid=\"staff-header\">Staff Management</h1>\n            <p className=\"text-gray-600\">Manage staff scheduling, tasks, and performance tracking</p>\n            {(staffError || metricsError) && (\n              <div className=\"mt-2 p-3 rounded bg-red-50 border border-red-200 text-red-800\">Failed to load staff data.</div>\n            )}\n          </div>\n          <div className=\"flex items-center space-x-3\">\n            <Button variant=\"outline\">\n              <Download className=\"w-4 h-4 mr-2\" />\n              Export\n            </Button>\n            <Button variant=\"outline\">\n              <Upload className=\"w-4 h-4 mr-2\" />\n              Import\n            </Button>\n            <Button>\n              <UserPlus className=\"w-4 h-4 mr-2\" />\n              Add Staff\n            </Button>\n          </div>\n        </div>\n\n        {/* Metrics Overview */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <div className=\"flex items-center\">\n                <div className=\"p-2 bg-blue-100 rounded-full\">\n                  <Users className=\"w-6 h-6 text-blue-600\" />\n                </div>\n                <div className=\"ml-4\">\n                  <p className=\"text-2xl font-bold\">{metrics.totalStaff ?? '-'}</p>\n                  <p className=\"text-gray-600\">Total Staff</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card>\n            <CardContent className=\"pt-6\">\n              <div className=\"flex items-center\">\n                <div className=\"p-2 bg-green-100 rounded-full\">\n                  <Activity className=\"w-6 h-6 text-green-600\" />\n                </div>\n                <div className=\"ml-4\">\n                  <p className=\"text-2xl font-bold\">{metrics.activeStaff ?? 0}</p>\n                  <p className=\"text-gray-600\">Currently Active</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card>\n            <CardContent className=\"pt-6\">\n              <div className=\"flex items-center\">\n                <div className=\"p-2 bg-orange-100 rounded-full\">\n                  <Target className=\"w-6 h-6 text-orange-600\" />\n                </div>\n                <div className=\"ml-4\">\n                  <p className=\"text-2xl font-bold\">{metrics.averageEfficiency ?? 0}%</p>\n                  <p className=\"text-gray-600\">Avg Efficiency</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card>\n            <CardContent className=\"pt-6\">\n              <div className=\"flex items-center\">\n                <div className=\"p-2 bg-purple-100 rounded-full\">\n                  <CheckCircle className=\"w-6 h-6 text-purple-600\" />\n                </div>\n                <div className=\"ml-4\">\n                  <p className=\"text-2xl font-bold\">{metrics.attendanceRate ?? 0}%</p>\n                  <p className=\"text-gray-600\">Attendance Rate</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Main Content Tabs */}\n        <Tabs value={selectedTab} onValueChange={setSelectedTab} className=\"w-full\">\n          <TabsList className=\"grid w-full grid-cols-4\">\n            <TabsTrigger value=\"staff\">Staff Members</TabsTrigger>\n            <TabsTrigger value=\"tasks\">Tasks</TabsTrigger>\n            <TabsTrigger value=\"schedule\">Schedule</TabsTrigger>\n            <TabsTrigger value=\"analytics\">Analytics</TabsTrigger>\n          </TabsList>\n\n          {/* Staff Members Tab */}\n          <TabsContent value=\"staff\" className=\"space-y-6\">\n            <div className=\"flex items-center space-x-4 mb-6\">\n              <div className=\"flex-1\">\n                <Input\n                  placeholder=\"Search staff by name, ID, or email...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"w-full\"\n                />\n              </div>\n              <select\n                className=\"px-3 py-2 border border-gray-200 rounded-md\"\n                value={filterRole}\n                onChange={(e) => setFilterRole(e.target.value)}\n              >\n                <option value=\"all\">All Roles</option>\n                <option value=\"chef\">Chef</option>\n                <option value=\"assistant\">Assistant</option>\n                <option value=\"prep\">Prep Cook</option>\n                <option value=\"manager\">Manager</option>\n                <option value=\"server\">Server</option>\n                <option value=\"cleaner\">Cleaner</option>\n              </select>\n              <select\n                className=\"px-3 py-2 border border-gray-200 rounded-md\"\n                value={filterStatus}\n                onChange={(e) => setFilterStatus(e.target.value)}\n              >\n                <option value=\"all\">All Status</option>\n                <option value=\"active\">Active</option>\n                <option value=\"break\">On Break</option>\n                <option value=\"offline\">Offline</option>\n                <option value=\"sick\">Sick</option>\n                <option value=\"vacation\">Vacation</option>\n              </select>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {filteredStaff.map((s: any) => (\n                <div data-testid=\"staff-card\" key={s.id}>\n                  {/* Narrow mapping to StaffMember shape where possible */}\n                  <StaffMemberCard staff={{\n                    id: s.id,\n                    employeeId: s.employeeId || s.id,\n                    name: s.name || 'Staff',\n                    email: s.email || '-',\n                    phone: s.phone || '-',\n                    role: (s.role || 'chef') as any,\n                    department: (s.department || 'kitchen') as any,\n                    status: (s.status || 'active') as any,\n                    avatar: s.avatar,\n                    hireDate: s.hireDate || new Date().toISOString(),\n                    salary: s.salary || 0,\n                    efficiency: s.efficiency || 0,\n                    hoursWorked: s.hoursWorked || 0,\n                    tasksCompleted: s.tasksCompleted || 0,\n                    currentTask: s.currentTask,\n                    shift: { id: 'shift', name: 'Shift', startTime: '09:00', endTime: '17:00', days: [], isActive: true },\n                    skills: s.skills || [],\n                    certifications: s.certifications || [],\n                    performanceRating: s.performanceRating || 0,\n                    attendanceRate: s.attendanceRate || 0,\n                    lastLogin: s.lastLogin || new Date().toISOString(),\n                    location: s.location || 'Kitchen',\n                  }} />\n                </div>\n              ))}\n            </div>\n          </TabsContent>\n\n          {/* Tasks Tab */}\n          <TabsContent value=\"tasks\" className=\"space-y-6\">\n            <div className=\"flex justify-between items-center\">\n              <h2 className=\"text-xl font-semibold text-gray-900\">Task Management</h2>\n              <Button disabled>\n                <Plus className=\"w-4 h-4 mr-2\" />\n                Create Task\n              </Button>\n            </div>\n            <div className=\"p-3 rounded bg-gray-50 border border-gray-200 text-gray-700\">\n              Live tasks integration will appear here once backend endpoints are connected.\n            </div>\n          </TabsContent>\n\n          {/* Schedule Tab */}\n          <TabsContent value=\"schedule\" className=\"space-y-6\">\n            <div className=\"flex justify-between items-center\">\n              <h2 className=\"text-xl font-semibold text-gray-900\">Staff Schedule</h2>\n              <Button disabled>\n                <Calendar className=\"w-4 h-4 mr-2\" />\n                Create Schedule\n              </Button>\n            </div>\n            <div className=\"p-3 rounded bg-gray-50 border border-gray-200 text-gray-700\">\n              Live scheduling integration will appear here once backend endpoints are connected.\n            </div>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center\">\n                      <Clock className=\"w-5 h-5 mr-2 text-blue-600\" />\n                      {shift.name}\n                    </CardTitle>\n                    <CardDescription>\n                      {shift.startTime} - {shift.endTime}\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-3\">\n                      <div>\n                        <p className=\"text-sm font-medium text-gray-900 mb-2\">Days</p>\n                        <div className=\"flex flex-wrap gap-1\">\n                          {shift.days.map((day) => (\n                            <Badge key={day} variant=\"secondary\" className=\"text-xs capitalize\">\n                              {day.slice(0, 3)}\n                            </Badge>\n                          ))}\n                        </div>\n                      </div>\n                      \n                      <div>\n                        <p className=\"text-sm font-medium text-gray-900 mb-2\">\n                          Assigned Staff ({staffMembers.filter(s => s.shift.id === shift.id).length})\n                        </p>\n                        <div className=\"space-y-2\">\n                          {staffMembers\n                            .filter(s => s.shift.id === shift.id)\n                            .slice(0, 3)\n                            .map((staff) => (\n                              <div key={staff.id} className=\"flex items-center space-x-2\">\n                                <Avatar className=\"w-6 h-6\">\n                                  <AvatarImage src={staff.avatar} alt={staff.name} />\n                                  <AvatarFallback className=\"text-xs\">\n                                    {staff.name.split(' ').map(n => n[0]).join('')}\n                                  </AvatarFallback>\n                                </Avatar>\n                                <span className=\"text-sm\">{staff.name}</span>\n                                <Badge className={`${getStatusColor(staff.status)} text-xs`}>\n                                  {staff.status}\n                                </Badge>\n                              </div>\n                            ))}\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </TabsContent>\n\n          {/* Analytics Tab */}\n          <TabsContent value=\"analytics\" className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Performance Overview</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div>\n                      <div className=\"flex items-center justify-between text-sm mb-2\">\n                        <span>Average Efficiency</span>\n                        <span className=\"font-semibold\">{metrics.averageEfficiency ?? 0}%</span>\n                      </div>\n                      <Progress value={metrics.averageEfficiency ?? 0} className=\"h-3\" />\n                    </div>\n                    \n                    <div>\n                      <div className=\"flex items-center justify-between text-sm mb-2\">\n                        <span>Attendance Rate</span>\n                        <span className=\"font-semibold\">{metrics.attendanceRate ?? 0}%</span>\n                      </div>\n                      <Progress value={metrics.attendanceRate ?? 0} className=\"h-3\" />\n                    </div>\n                    \n                    <div className=\"grid grid-cols-2 gap-4 pt-4\">\n                      <div className=\"text-center\">\n                        <div className=\"text-2xl font-bold text-green-600\">{metrics.tasksCompleted}</div>\n                        <div className=\"text-sm text-gray-600\">Tasks Completed</div>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className=\"text-2xl font-bold text-blue-600\">{metrics.totalHoursWorked}h</div>\n                        <div className=\"text-sm text-gray-600\">Total Hours</div>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle>Financial Overview</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"text-center\">\n                      <div className=\"text-3xl font-bold text-purple-600\">\n                        Rs.{(metrics.averageSalary ?? 0).toLocaleString()}\n                      </div>\n                      <div className=\"text-sm text-gray-600\">Average Salary</div>\n                    </div>\n                    \n                    <div className=\"grid grid-cols-2 gap-4 pt-4\">\n                      <div className=\"text-center p-3 bg-gray-50 rounded-lg\">\n                        <div className=\"text-lg font-bold text-red-600\">{metrics.turnoverRate}%</div>\n                        <div className=\"text-xs text-gray-600\">Turnover Rate</div>\n                      </div>\n                      <div className=\"text-center p-3 bg-gray-50 rounded-lg\">\n                        <div className=\"text-lg font-bold text-green-600\">Rs.465K</div>\n                        <div className=\"text-xs text-gray-600\">Monthly Payroll</div>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  );\n};\n\nexport default StaffManagementSystem;\n","/Users/mahesha/Downloads/hasivu-platform/web/src/components/staff/StaffScheduling.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/staff/StaffTasksManagement.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/__tests__/command.test.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/__tests__/cross-browser.test.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/__tests__/drawer.test.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/__tests__/error-handling.test.tsx",["2426","2427","2428","2429"],[],"/**\n * Error Handling and Edge Case Tests for ShadCN UI Components\n * Tests component resilience, error boundaries, and edge case scenarios\n */\n\nimport React from 'react'\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\nimport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n} from '../command'\nimport {\n  Drawer,\n  DrawerTrigger,\n  DrawerContent,\n  DrawerHeader,\n  DrawerTitle,\n  DrawerClose,\n} from '../drawer'\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from '../tooltip'\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from '../popover'\nimport {\n  InputOTP,\n  InputOTPGroup,\n  InputOTPSlot,\n} from '../input-otp'\n\n// Error boundary component for testing\nclass TestErrorBoundary extends React.Component<\n  { children: React.ReactNode; onError?: (error: Error) => void },\n  { hasError: boolean; error?: Error }\n> {\n  constructor(props: { children: React.ReactNode; onError?: (error: Error) => void }) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    return { hasError: true, error }\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    this.props.onError?.(error)\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <div data-testid=\"error-fallback\">Something went wrong: {this.state.error?.message}</div>\n    }\n\n    return this.props.children\n  }\n}\n\n// Component that throws an error for testing\nconst ErrorThrowingComponent = ({ shouldThrow = false }: { shouldThrow?: boolean }) => {\n  if (shouldThrow) {\n    throw new Error('Test error')\n  }\n  return <div>No error</div>\n}\n\n// Network simulation utilities\nconst mockNetworkFailure = () => {\n  const originalFetch = global.fetch\n  global.fetch = jest.fn().mockRejectedValue(new Error('Network error'))\n  return () => {\n    global.fetch = originalFetch\n  }\n}\n\nconst mockSlowNetwork = (delay: number = 5000) => {\n  const originalFetch = global.fetch\n  global.fetch = jest.fn().mockImplementation(() => \n    new Promise((resolve) => setTimeout(resolve, delay))\n  )\n  return () => {\n    global.fetch = originalFetch\n  }\n}\n\ndescribe('Error Handling and Edge Cases', () => {\n  beforeEach(() => {\n    // Suppress console.error for error boundary tests\n    jest.spyOn(console, 'error').mockImplementation(() => {})\n  })\n\n  afterEach(() => {\n    jest.restoreAllMocks()\n  })\n\n  describe('Error Boundary Integration', () => {\n    it('handles component errors gracefully', () => {\n      const onError = jest.fn()\n      \n      render(\n        <TestErrorBoundary onError={onError}>\n          <Command>\n            <CommandInput />\n            <CommandList>\n              <ErrorThrowingComponent shouldThrow />\n            </CommandList>\n          </Command>\n        </TestErrorBoundary>\n      )\n\n      expect(screen.getByTestId('error-fallback')).toBeInTheDocument()\n      expect(onError).toHaveBeenCalledWith(expect.any(Error))\n    })\n\n    it('isolates errors to prevent component tree crashes', () => {\n      render(\n        <div>\n          <div data-testid=\"safe-component\">Safe Component</div>\n          <TestErrorBoundary>\n            <Command>\n              <CommandInput />\n              <CommandList>\n                <ErrorThrowingComponent shouldThrow />\n              </CommandList>\n            </Command>\n          </TestErrorBoundary>\n          <div data-testid=\"another-safe-component\">Another Safe Component</div>\n        </div>\n      )\n\n      expect(screen.getByTestId('safe-component')).toBeInTheDocument()\n      expect(screen.getByTestId('another-safe-component')).toBeInTheDocument()\n      expect(screen.getByTestId('error-fallback')).toBeInTheDocument()\n    })\n  })\n\n  describe('Command Component Error Handling', () => {\n    it('handles empty search results gracefully', async () => {\n      const user = userEvent.setup()\n      \n      render(\n        <Command>\n          <CommandInput placeholder=\"Search...\" />\n          <CommandList>\n            <CommandEmpty>No meals found matching your search.</CommandEmpty>\n            <CommandGroup>\n              <CommandItem value=\"biryani\">Chicken Biryani</CommandItem>\n              <CommandItem value=\"curry\">Paneer Curry</CommandItem>\n            </CommandGroup>\n          </CommandList>\n        </Command>\n      )\n\n      const input = screen.getByPlaceholderText('Search...')\n      await user.type(input, 'nonexistent meal')\n\n      await waitFor(() => {\n        expect(screen.getByText('No meals found matching your search.')).toBeInTheDocument()\n      })\n    })\n\n    it('handles extremely long search queries', async () => {\n      const user = userEvent.setup()\n      const longQuery = 'a'.repeat(1000)\n      \n      render(\n        <Command>\n          <CommandInput placeholder=\"Long query test...\" />\n          <CommandList>\n            <CommandEmpty>No results</CommandEmpty>\n            <CommandGroup>\n              <CommandItem value=\"test\">Test Item</CommandItem>\n            </CommandGroup>\n          </CommandList>\n        </Command>\n      )\n\n      const input = screen.getByPlaceholderText('Long query test...')\n      \n      // Should handle long input without crashing\n      await user.type(input, longQuery)\n      \n      expect(input).toHaveValue(longQuery)\n    })\n\n    it('handles rapid successive search queries', async () => {\n      const user = userEvent.setup()\n      \n      render(\n        <Command>\n          <CommandInput placeholder=\"Rapid search...\" />\n          <CommandList>\n            <CommandGroup>\n              <CommandItem value=\"item1\">Item 1</CommandItem>\n              <CommandItem value=\"item2\">Item 2</CommandItem>\n              <CommandItem value=\"item3\">Item 3</CommandItem>\n            </CommandGroup>\n          </CommandList>\n        </Command>\n      )\n\n      const input = screen.getByPlaceholderText('Rapid search...')\n      \n      // Rapid typing and clearing\n      for (let i = 0; i < 10; i++) {\n        await user.type(input, `query${i}`)\n        await user.clear(input)\n      }\n      \n      // Should still be functional\n      await user.type(input, 'item1')\n      expect(screen.getByText('Item 1')).toBeInTheDocument()\n    })\n\n    it('handles special characters in search', async () => {\n      const user = userEvent.setup()\n      \n      render(\n        <Command>\n          <CommandInput placeholder=\"Special chars...\" />\n          <CommandList>\n            <CommandGroup>\n              <CommandItem value=\"special!@#$%^&*()\">Special!@#$%^&*()</CommandItem>\n              <CommandItem value=\"unicode-🍛\">Unicode 🍛</CommandItem>\n              <CommandItem value=\"quotes'test&quot;\">Quotes'Test&quot;</CommandItem>\n            </CommandGroup>\n          </CommandList>\n        </Command>\n      )\n\n      const input = screen.getByPlaceholderText('Special chars...')\n      \n      // Test special characters\n      await user.type(input, '!@#$')\n      expect(screen.getByText('Special!@#$%^&*()')).toBeInTheDocument()\n      \n      await user.clear(input)\n      await user.type(input, '🍛')\n      expect(screen.getByText('Unicode 🍛')).toBeInTheDocument()\n      \n      await user.clear(input)\n      await user.type(input, '\"')\n      expect(screen.getByText('Quotes\\'Test\"')).toBeInTheDocument()\n    })\n  })\n\n  describe('Drawer Component Error Handling', () => {\n    it('handles drawer open/close state corruption', async () => {\n      const user = userEvent.setup()\n      \n      const TestDrawer = () => {\n        const [isOpen, setIsOpen] = React.useState(false)\n        \n        return (\n          <div>\n            <button onClick={() => setIsOpen(!isOpen)}>External Toggle</button>\n            <Drawer open={isOpen} onOpenChange={setIsOpen}>\n              <DrawerTrigger asChild>\n                <button>Open Drawer</button>\n              </DrawerTrigger>\n              <DrawerContent>\n                <DrawerHeader>\n                  <DrawerTitle>Test Drawer</DrawerTitle>\n                </DrawerHeader>\n                <div>Drawer content</div>\n                <DrawerClose asChild>\n                  <button>Close</button>\n                </DrawerClose>\n              </DrawerContent>\n            </Drawer>\n          </div>\n        )\n      }\n\n      render(<TestDrawer />)\n\n      const externalToggle = screen.getByText('External Toggle')\n      const drawerTrigger = screen.getByText('Open Drawer')\n      \n      // Create conflicting state by using both external and internal controls\n      await user.click(externalToggle) // Open externally\n      await user.click(drawerTrigger) // Try to open again\n      \n      // Should handle state conflicts gracefully\n      expect(screen.getByText('Test Drawer')).toBeInTheDocument()\n    })\n\n    it('handles rapid drawer open/close operations', async () => {\n      const user = userEvent.setup()\n      \n      render(\n        <Drawer>\n          <DrawerTrigger asChild>\n            <button>Rapid Toggle</button>\n          </DrawerTrigger>\n          <DrawerContent>\n            <DrawerHeader>\n              <DrawerTitle>Rapid Test</DrawerTitle>\n            </DrawerHeader>\n            <DrawerClose asChild>\n              <button>Close</button>\n            </DrawerClose>\n          </DrawerContent>\n        </Drawer>\n      )\n\n      const trigger = screen.getByText('Rapid Toggle')\n      \n      // Rapid toggling\n      for (let i = 0; i < 5; i++) {\n        await user.click(trigger)\n        const closeBtn = screen.queryByText('Close')\n        if (closeBtn) {\n          await user.click(closeBtn)\n        }\n      }\n      \n      // Should still be functional\n      await user.click(trigger)\n      expect(screen.getByText('Rapid Test')).toBeInTheDocument()\n    })\n\n    it('handles drawer content overflow', async () => {\n      const user = userEvent.setup()\n      \n      const largeContent = Array.from({ length: 100 }, (_, i) => (\n        <div key={i} style={{ height: '50px', padding: '10px' }}>\n          Very long content item {i} with lots of text that might cause overflow issues\n        </div>\n      ))\n\n      render(\n        <Drawer>\n          <DrawerTrigger asChild>\n            <button>Large Content Drawer</button>\n          </DrawerTrigger>\n          <DrawerContent>\n            <DrawerHeader>\n              <DrawerTitle>Large Content Test</DrawerTitle>\n            </DrawerHeader>\n            <div style={{ maxHeight: '400px', overflow: 'auto' }}>\n              {largeContent}\n            </div>\n          </DrawerContent>\n        </Drawer>\n      )\n\n      const trigger = screen.getByText('Large Content Drawer')\n      await user.click(trigger)\n      \n      await waitFor(() => {\n        expect(screen.getByText('Large Content Test')).toBeInTheDocument()\n        expect(screen.getByText('Very long content item 0 with lots of text that might cause overflow issues')).toBeInTheDocument()\n      })\n    })\n  })\n\n  describe('Tooltip Component Error Handling', () => {\n    it('handles tooltip triggers without content', async () => {\n      const user = userEvent.setup()\n      \n      render(\n        <TooltipProvider>\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <button>Empty Tooltip</button>\n            </TooltipTrigger>\n            <TooltipContent>\n              {/* Empty content */}\n            </TooltipContent>\n          </Tooltip>\n        </TooltipProvider>\n      )\n\n      const trigger = screen.getByText('Empty Tooltip')\n      await user.hover(trigger)\n      \n      // Should handle empty content gracefully\n      expect(trigger).toBeInTheDocument()\n    })\n\n    it('handles tooltips with dynamic content that might fail', async () => {\n      const user = userEvent.setup()\n      \n      const DynamicTooltip = () => {\n        const [data, setData] = React.useState<string | null>(null)\n        const [error, setError] = React.useState<string | null>(null)\n        \n        const fetchData = async () => {\n          try {\n            // Simulate data fetching that might fail\n            if (Math.random() > 0.5) {\n              throw new Error('Data fetch failed')\n            }\n            setData('Dynamic content loaded')\n          } catch (err) {\n            setError('Failed to load content')\n          }\n        }\n\n        React.useEffect(() => {\n          fetchData()\n        }, [])\n\n        return (\n          <TooltipProvider>\n            <Tooltip>\n              <TooltipTrigger asChild>\n                <button>Dynamic Tooltip</button>\n              </TooltipTrigger>\n              <TooltipContent>\n                {error ? (\n                  <p className=\"text-red-500\">{error}</p>\n                ) : (\n                  <p>{data || 'Loading...'}</p>\n                )}\n              </TooltipContent>\n            </Tooltip>\n          </TooltipProvider>\n        )\n      }\n\n      render(<DynamicTooltip />)\n\n      const trigger = screen.getByText('Dynamic Tooltip')\n      await user.hover(trigger)\n      \n      await waitFor(() => {\n        // Should show either content or error message\n        const tooltip = screen.queryByText('Dynamic content loaded') || \n                       screen.queryByText('Failed to load content') ||\n                       screen.queryByText('Loading...')\n        expect(tooltip).toBeInTheDocument()\n      })\n    })\n\n    it('handles tooltips with extremely long content', async () => {\n      const user = userEvent.setup()\n      const longContent = 'Very long tooltip content. '.repeat(100)\n      \n      render(\n        <TooltipProvider>\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <button>Long Content Tooltip</button>\n            </TooltipTrigger>\n            <TooltipContent>\n              <p style={{ maxWidth: '300px', wordWrap: 'break-word' }}>\n                {longContent}\n              </p>\n            </TooltipContent>\n          </Tooltip>\n        </TooltipProvider>\n      )\n\n      const trigger = screen.getByText('Long Content Tooltip')\n      await user.hover(trigger)\n      \n      await waitFor(() => {\n        // Should handle long content without breaking layout\n        expect(screen.getByText(/Very long tooltip content/)).toBeInTheDocument()\n      })\n    })\n  })\n\n  describe('Popover Component Error Handling', () => {\n    it('handles popover positioning edge cases', async () => {\n      const user = userEvent.setup()\n      \n      // Mock extreme viewport conditions\n      Object.defineProperty(window, 'innerWidth', {\n        writable: true,\n        configurable: true,\n        value: 100, // Very small width\n      })\n      Object.defineProperty(window, 'innerHeight', {\n        writable: true,\n        configurable: true,\n        value: 100, // Very small height\n      })\n\n      render(\n        <div style={{ position: 'absolute', top: '50px', right: '10px' }}>\n          <Popover>\n            <PopoverTrigger asChild>\n              <button>Edge Position</button>\n            </PopoverTrigger>\n            <PopoverContent>\n              <div>Popover near edge</div>\n            </PopoverContent>\n          </Popover>\n        </div>\n      )\n\n      const trigger = screen.getByText('Edge Position')\n      await user.click(trigger)\n      \n      await waitFor(() => {\n        expect(screen.getByText('Popover near edge')).toBeInTheDocument()\n      })\n    })\n\n    it('handles popover with failing async content', async () => {\n      const user = userEvent.setup()\n      \n      const AsyncPopover = () => {\n        const [content, setContent] = React.useState('Loading...')\n        const [isOpen, setIsOpen] = React.useState(false)\n        \n        React.useEffect(() => {\n          if (isOpen) {\n            // Simulate async operation that might fail\n            setTimeout(() => {\n              if (Math.random() > 0.5) {\n                setContent('Content loaded successfully')\n              } else {\n                setContent('Error: Failed to load content')\n              }\n            }, 100)\n          }\n        }, [isOpen])\n\n        return (\n          <Popover open={isOpen} onOpenChange={setIsOpen}>\n            <PopoverTrigger asChild>\n              <button>Async Popover</button>\n            </PopoverTrigger>\n            <PopoverContent>\n              <div>{content}</div>\n            </PopoverContent>\n          </Popover>\n        )\n      }\n\n      render(<AsyncPopover />)\n\n      const trigger = screen.getByText('Async Popover')\n      await user.click(trigger)\n      \n      // Should show loading state initially\n      await waitFor(() => {\n        expect(screen.getByText('Loading...')).toBeInTheDocument()\n      })\n      \n      // Should eventually show either success or error\n      await waitFor(() => {\n        const result = screen.queryByText('Content loaded successfully') || \n                      screen.queryByText('Error: Failed to load content')\n        expect(result).toBeInTheDocument()\n      }, { timeout: 3000 })\n    })\n  })\n\n  describe('InputOTP Component Error Handling', () => {\n    it('handles invalid OTP input patterns', async () => {\n      const user = userEvent.setup()\n      const onChange = jest.fn()\n      const onError = jest.fn()\n      \n      const ValidatingOTP = () => {\n        const [value, setValue] = React.useState('')\n        const [error, setError] = React.useState('')\n        \n        const handleChange = (newValue: string) => {\n          setValue(newValue)\n          onChange(newValue)\n          \n          // Validate input\n          if (newValue.length === 6) {\n            if (!/^\\d{6}$/.test(newValue)) {\n              const errorMsg = 'OTP must contain only numbers'\n              setError(errorMsg)\n              onError(errorMsg)\n            } else {\n              setError('')\n            }\n          } else {\n            setError('')\n          }\n        }\n\n        return (\n          <div>\n            <InputOTP maxLength={6} value={value} onChange={handleChange}>\n              <InputOTPGroup>\n                {Array.from({ length: 6 }, (_, i) => (\n                  <InputOTPSlot key={i} index={i} />\n                ))}\n              </InputOTPGroup>\n            </InputOTP>\n            {error && (\n              <div className=\"text-red-500\" role=\"alert\">\n                {error}\n              </div>\n            )}\n          </div>\n        )\n      }\n\n      render(<ValidatingOTP />)\n\n      const otpInput = screen.getByRole('textbox', { hidden: true })\n      \n      // Test invalid input (letters instead of numbers)\n      await user.type(otpInput, 'ABCDEF')\n      \n      await waitFor(() => {\n        expect(screen.getByText('OTP must contain only numbers')).toBeInTheDocument()\n        expect(onError).toHaveBeenCalledWith('OTP must contain only numbers')\n      })\n    })\n\n    it('handles OTP input with network verification failures', async () => {\n      const user = userEvent.setup()\n      const restoreNetwork = mockNetworkFailure()\n      \n      const NetworkOTP = () => {\n        const [value, setValue] = React.useState('')\n        const [status, setStatus] = React.useState<'idle' | 'verifying' | 'error' | 'success'>('idle')\n        \n        const handleChange = async (newValue: string) => {\n          setValue(newValue)\n          \n          if (newValue.length === 6) {\n            setStatus('verifying')\n            try {\n              // Simulate network verification\n              await fetch('/api/verify-otp', {\n                method: 'POST',\n                body: JSON.stringify({ otp: newValue }),\n              })\n              setStatus('success')\n            } catch (error) {\n              setStatus('error')\n            }\n          }\n        }\n\n        return (\n          <div>\n            <InputOTP maxLength={6} value={value} onChange={handleChange}>\n              <InputOTPGroup>\n                {Array.from({ length: 6 }, (_, i) => (\n                  <InputOTPSlot key={i} index={i} />\n                ))}\n              </InputOTPGroup>\n            </InputOTP>\n            \n            {status === 'verifying' && <div>Verifying...</div>}\n            {status === 'error' && (\n              <div className=\"text-red-500\" role=\"alert\">\n                Network error: Unable to verify OTP\n              </div>\n            )}\n            {status === 'success' && (\n              <div className=\"text-green-500\">OTP verified successfully</div>\n            )}\n          </div>\n        )\n      }\n\n      render(<NetworkOTP />)\n\n      const otpInput = screen.getByRole('textbox', { hidden: true })\n      await user.type(otpInput, '123456')\n      \n      await waitFor(() => {\n        expect(screen.getByText('Verifying...')).toBeInTheDocument()\n      })\n      \n      await waitFor(() => {\n        expect(screen.getByText('Network error: Unable to verify OTP')).toBeInTheDocument()\n      })\n      \n      restoreNetwork()\n    })\n\n    it('handles OTP input with slow network responses', async () => {\n      const user = userEvent.setup()\n      const restoreNetwork = mockSlowNetwork(1000)\n      \n      const SlowNetworkOTP = () => {\n        const [value, setValue] = React.useState('')\n        const [isVerifying, setIsVerifying] = React.useState(false)\n        \n        const handleChange = async (newValue: string) => {\n          setValue(newValue)\n          \n          if (newValue.length === 6) {\n            setIsVerifying(true)\n            try {\n              await fetch('/api/verify-otp')\n              setIsVerifying(false)\n            } catch (error) {\n              setIsVerifying(false)\n            }\n          }\n        }\n\n        return (\n          <div>\n            <InputOTP \n              maxLength={6} \n              value={value} \n              onChange={handleChange}\n              disabled={isVerifying}\n            >\n              <InputOTPGroup>\n                {Array.from({ length: 6 }, (_, i) => (\n                  <InputOTPSlot key={i} index={i} />\n                ))}\n              </InputOTPGroup>\n            </InputOTP>\n            \n            {isVerifying && (\n              <div>\n                Verifying OTP... This may take a moment.\n              </div>\n            )}\n          </div>\n        )\n      }\n\n      render(<SlowNetworkOTP />)\n\n      const otpInput = screen.getByRole('textbox', { hidden: true })\n      await user.type(otpInput, '123456')\n      \n      await waitFor(() => {\n        expect(screen.getByText('Verifying OTP... This may take a moment.')).toBeInTheDocument()\n        expect(otpInput).toBeDisabled()\n      })\n      \n      restoreNetwork()\n    })\n  })\n\n  describe('Memory Leak Prevention', () => {\n    it('cleans up event listeners on unmount', () => {\n      const addEventListenerSpy = jest.spyOn(document, 'addEventListener')\n      const removeEventListenerSpy = jest.spyOn(document, 'removeEventListener')\n      \n      const { unmount } = render(\n        <div>\n          <Command>\n            <CommandInput />\n            <CommandList>\n              <CommandItem value=\"test\">Test</CommandItem>\n            </CommandList>\n          </Command>\n          \n          <TooltipProvider>\n            <Tooltip>\n              <TooltipTrigger>Trigger</TooltipTrigger>\n              <TooltipContent>Content</TooltipContent>\n            </Tooltip>\n          </TooltipProvider>\n          \n          <Popover>\n            <PopoverTrigger>Trigger</PopoverTrigger>\n            <PopoverContent>Content</PopoverContent>\n          </Popover>\n        </div>\n      )\n\n      const initialListeners = addEventListenerSpy.mock.calls.length\n      \n      unmount()\n      \n      // Should have corresponding removeEventListener calls\n      expect(removeEventListenerSpy.mock.calls.length).toBeGreaterThan(0)\n      \n      addEventListenerSpy.mockRestore()\n      removeEventListenerSpy.mockRestore()\n    })\n\n    it('handles component unmounting during async operations', async () => {\n      const user = userEvent.setup()\n      \n      const AsyncComponent = () => {\n        const [isLoading, setIsLoading] = React.useState(false)\n        const mountedRef = React.useRef(true)\n        \n        React.useEffect(() => {\n          return () => {\n            mountedRef.current = false\n          }\n        }, [])\n        \n        const handleAsyncOperation = async () => {\n          setIsLoading(true)\n          \n          // Simulate async operation\n          await new Promise(resolve => setTimeout(resolve, 100))\n          \n          // Only update state if component is still mounted\n          if (mountedRef.current) {\n            setIsLoading(false)\n          }\n        }\n\n        return (\n          <div>\n            <button onClick={handleAsyncOperation}>Start Async</button>\n            {isLoading && <div>Loading...</div>}\n            <Command>\n              <CommandInput />\n              <CommandList>\n                <CommandItem value=\"test\">Test Item</CommandItem>\n              </CommandList>\n            </Command>\n          </div>\n        )\n      }\n\n      const { unmount } = render(<AsyncComponent />)\n\n      const button = screen.getByText('Start Async')\n      await user.click(button)\n      \n      // Unmount before async operation completes\n      unmount()\n      \n      // Should not cause errors or warnings\n      expect(screen.queryByText('Start Async')).not.toBeInTheDocument()\n    })\n  })\n\n  describe('Accessibility Error Handling', () => {\n    it('maintains accessibility during error states', async () => {\n      const user = userEvent.setup()\n      \n      const AccessibleErrorComponent = () => {\n        const [hasError, setHasError] = React.useState(false)\n        \n        return (\n          <div>\n            <button onClick={() => setHasError(!hasError)}>\n              Toggle Error\n            </button>\n            \n            {hasError ? (\n              <div role=\"alert\" aria-live=\"assertive\">\n                <p>An error occurred. Please try again.</p>\n              </div>\n            ) : (\n              <Command>\n                <CommandInput \n                  placeholder=\"Search...\" \n                  aria-label=\"Search meals\"\n                />\n                <CommandList>\n                  <CommandItem value=\"test\" role=\"option\">\n                    Test Item\n                  </CommandItem>\n                </CommandList>\n              </Command>\n            )}\n          </div>\n        )\n      }\n\n      render(<AccessibleErrorComponent />)\n\n      const toggleButton = screen.getByText('Toggle Error')\n      \n      // Initially should show Command component\n      expect(screen.getByLabelText('Search meals')).toBeInTheDocument()\n      \n      // Toggle to error state\n      await user.click(toggleButton)\n      \n      // Should show accessible error message\n      const errorAlert = screen.getByRole('alert')\n      expect(errorAlert).toBeInTheDocument()\n      expect(errorAlert).toHaveAttribute('aria-live', 'assertive')\n      \n      // Toggle back to normal state\n      await user.click(toggleButton)\n      \n      // Should restore Command component\n      expect(screen.getByLabelText('Search meals')).toBeInTheDocument()\n    })\n  })\n})","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/__tests__/input-otp.test.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/__tests__/performance.test.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/__tests__/popover.test.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/__tests__/simple.test.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/__tests__/tooltip.test.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/accordion.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/advanced-command.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/advanced-tooltip.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/alert-dialog.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/alert.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/avatar.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/badge.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/breadcrumb.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/button.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/calendar.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/card.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/carousel.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/chart.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/checkbox.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/collapsible.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/command.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/context-menu.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/dialog.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/drawer.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/dropdown-menu.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/form.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/hover-card.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/index.ts",["2430"],[],"// Export all UI components for easy importing\nexport { Button, buttonVariants } from './ button'\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent } from './card'\nexport { Input } from './i nput'\nexport { Textarea } from './textarea'\nexport { Label } from './ label'\nexport { Checkbox } from './checkbox'\n} from './ form'\nexport { Separator } from './separator'\nexport { Table, TableHeader, TableBody, TableFooter, TableHead, TableRow, TableCell, TableCaption } from './ table'\nexport { Badge, badgeVariants } from './badge'\nexport { Avatar, AvatarImage, AvatarFallback } from './ avatar'\nexport { Tabs, TabsList, TabsTrigger, TabsContent } from './tabs'\n} from './ dialog'\nexport { Alert, AlertTitle, AlertDescription } from './alert'\nexport { Progress } from './ progress'\n} from './select'\nexport { Calendar } from './ calendar'\nexport { Toast, ToastProvider, ToastViewport, ToastTitle, ToastDescription, ToastClose, ToastAction } from './toast'\n} from './ dropdown-menu'\n} from './navigation-menu'\nexport { Sheet, SheetPortal, SheetOverlay, SheetTrigger, SheetClose, SheetContent, SheetHeader, SheetFooter, SheetTitle, SheetDescription } from './ sheet'\nexport { Carousel, CarouselContent, CarouselItem, CarouselPrevious, CarouselNext } from './carousel'\nexport { Chart, ChartContainer, ChartTooltip, ChartTooltipContent, ChartLegend, ChartLegendContent } from './ chart'\nexport { Skeleton } from './skeleton'\nexport { ScrollArea, ScrollBar } from './ scroll-area'\nexport { Slider } from './slider'\nexport { Toaster } from './ sonner'\nexport { ToggleGroup, ToggleGroupItem } from './toggle-group'\nexport { HoverCard, HoverCardTrigger, HoverCardContent } from './ hover-card'\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator } from './input-otp'","/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/input-otp.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/input.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/label.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/loading-states.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/meal-order-drawer.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/menubar.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/navigation-menu.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/pagination.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/paper-shaders-background.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/popover.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/progress.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/radio-group.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/resizable.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/scroll-area.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/select.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/separator.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/sheet.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/sidebar.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/skeleton.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/slider.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/smart-popover.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/sonner.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/switch.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/table.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/tabs.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/textarea.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/toast.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/toggle-group.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/toggle.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/tooltip.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/contexts/AuthContext.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/contexts/SocketContext.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/contexts/auth-context.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/contexts/integration-provider.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/use-dashboard.ts",["2431"],[]," * HASIVU Platform - Dashboard Data Integration Hook\n * Real-time dashboard updates with analytics and live metrics;\nimport { useState, useCallback, useEffect, useMemo } from 'react';\nimport { api } from '../lib/api-client';\nimport { useAuth } from '../contexts/auth-context';\nimport { useLiveAnalytics } from './use-realtime';\n  }>;\n  }>;\n  recentOrders: any[];\n  notifications: any[];\n  isLoading: boolean;\n  lastUpdated: Date | null;\n// TODO: Refactor this function - it may be too long\n  const { user, hasRole } = useAuth();\n  const [dashboardData, setDashboardData] = useState<DashboardData>({}\n    orderTrends: { labels: [], datasets: [] },\n    revenueTrends: { labels: [], datasets: [] },\n    userEngagement: { labels: [], datasets: [] },\n    popularItems: [],\n    recentOrders: [],\n    notifications: [],\n    isLoading: false,\n    lastUpdated: null\n  const [refreshInterval, setRefreshInterval] = useState(30000);\n  const liveAnalytics = useLiveAnalytics(hasRole(['admin', 'teacher']) ? 'school' : 'user');\n  // Load dashboard data\n  const loadDashboardData = useCallback(async (\n      setDashboardData(prev => ({ ...prev, isLoading: true }));\n      const params = {}\n  // Load different data based on user role\n      const dataPromises = []\n];\n  // Add user engagement for admins/ teachers\n      if (hasRole(['admin', 'teacher'])) {}\n      const []\n] = await Promise.all(dataPromises);\n      // Process dashboard metrics\n      let metrics: DashboardMetrics = {}\n      if (dashboardResponse.success) {}\n        metrics = { ...metrics, ...dashboardResponse.data };\n  // Process chart data\n      let orderTrends: ChartData = { labels: [], datasets: [] };\n      if (orderStatsResponse.success) {}\n]\n      let revenueTrends: ChartData = { labels: [], datasets: [] };\n      if (revenueStatsResponse.success) {}\n]\n      let userEngagement: ChartData = { labels: [], datasets: [] };\n      if (userEngagementResponse?.success) {}\n]\n  // Process popular items\n      const popularItems = popularItemsResponse.success\n        ? popularItemsResponse.data.map((item: any) => ({}\n        : [];\n      setDashboardData({}\n      setDashboardData(prev => ({ ...prev, isLoading: false }));\n  }, [period, user, hasRole]);\n  // Apply live analytics updates\n  useEffect((\n        lastUpdated: new Date(value.timestamp)\n  }, [liveAnalytics.metrics]);\n  // Auto-refresh dashboard data\n  useEffect((\n  }, [loadDashboardData, refreshInterval]);\n  // Calculate percentage changes\n  const percentageChanges = useMemo((\n  }, [dashboardData.lastUpdated]);\n  // Export dashboard data\n  const exportDashboard = useCallback(async (format: 'pdf' | 'excel' = 'pdf'\n      if (response) {}\n        link.download = `dashboard-report-${period}.${format}``\n          { label: 'Total Revenue', value: `₹${dashboard.metrics.totalRevenue}``\n          { label: 'Customer Satisfaction', value: `${dashboard.metrics.customerSatisfaction}%``\n          { label: 'Today Revenue', value: `₹${dashboard.metrics.todayRevenue}``\n          { label: 'Today Revenue', value: `₹${dashboard.metrics.todayRevenue}``\n          { label: 'Avg Prep Time', value: `${dashboard.metrics.averageDeliveryTime}min``\n          { label: 'Fulfillment Rate', value: `${dashboard.metrics.orderFulfillmentRate}%``\n        { label: 'Wallet Balance', value: `₹${user?.wallet?.balance || 0}``\n        { label: 'This Month Spent', value: `₹${dashboard.metrics.monthlyRevenue}``\n        { label: 'Avg Order Value', value: `₹${dashboard.metrics.averageOrderValue}``","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/use-meal-ordering.ts",["2432"],[]," * HASIVU Platform - Meal Ordering Integration Hook\n * Complete meal ordering system with cart management, real-time updates, and payment integration;\nimport { useState, useCallback, useEffect, useReducer, useMemo } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { api, MealItem } from '../lib/api-client';\nimport { useAuth } from '../contexts/auth-context';\nimport { useOrderTracking } from './use-realtime';\nimport { usePaymentFlow } from './u se-payment';\ninterface CartItem extends MealItem {}\n  priceRange?: { min: number; max: number };\n  vendor?: string;\n  available?: boolean;\n  search?: string;\n// Cart reducer\ntype CartAction;\n  | { type: 'ADD_ITEM'; payload: { item: MealItem; quantity: number; notes?: string; customizations?: any } }\n  | { type: 'UPDATE_QUANTITY'; payload: { itemId: string; quantity: number } }\n  | { type: 'REMOVE_ITEM'; payload: { itemId: string } }\n  | { type: 'UPDATE_NOTES'; payload: { itemId: string; notes: string } }\n  | { type: 'UPDATE_CUSTOMIZATIONS'; payload: { itemId: string; customizations: any } }\n  | { type: 'CLEAR_CART' }\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'LOAD_CART'; payload: CartItem[] };\nfunction cartReducer(state: CartState, action: CartAction): CartState {}\n      const { item, quantity, notes, customizations } = action.payload;\n      const existingItemIndex = state.items.findIndex(cartItem;\n        cartItem.id === item.id;\n        JSON.stringify(cartItem.customizations) === JSON.stringify(customizations)\n      let newItems: CartItem[];\n      if (existingItemIndex >= 0) {}\n            : cartItem\n        newItems = [...state.items, cartItem];\n      const total = newItems.reduce((sum, item) => sum + item.subtotal, 0);\n      const itemCount = newItems.reduce((sum, item) => sum + item.quantity, 0);\n      return {}\n    case 'UPDATE_QUANTITY': {}\n      const { itemId, quantity } = action.payload;\n      if (quantity <= 0) {}\n        return cartReducer(state, { type: 'REMOVE_ITEM', payload: { itemId } });\n      const newItems = state.items.map(item;\n        item.id === itemId\n          ? { ...item, quantity, subtotal: quantity * item.price }\n          : item\n      const total = newItems.reduce((sum, item) => sum + item.subtotal, 0);\n      const itemCount = newItems.reduce((sum, item) => sum + item.quantity, 0);\n      return {}\n    case 'REMOVE_ITEM': {}\n      const { itemId } = action.payload;\n      const newItems = state.items.filter(item => item.id !== itemId);\n      const total = newItems.reduce((sum, item) => sum + item.subtotal, 0);\n      const itemCount = newItems.reduce((sum, item) => sum + item.quantity, 0);\n      return {}\n    case 'UPDATE_NOTES': {}\n      const { itemId, notes } = action.payload;\n      const newItems = state.items.map(item;\n        item.id === itemId ? { ...item, notes } : item\n      return {}\n    case 'UPDATE_CUSTOMIZATIONS': {}\n      const { itemId, customizations } = action.payload;\n      const newItems = state.items.map(item;\n        item.id === itemId ? { ...item, customizations } : item\n      return {}\n    case 'CLEAR_CART'\n    case 'SET_LOADING'\n    case 'LOAD_CART'\n    default: undefined\n      return state;\n// TODO: Refactor this function - it may be too long\n  const { user, hasWalletBalance } = useAuth();\n  const [cart, dispatch] = useReducer(cartReducer, {}\n  const [meals, setMeals] = useState<MealItem[]>([]);\n  const [categories, setCategories] = useState<any[]>([]);\n  const [vendors, setVendors] = useState<any[]>([]);\n  const [filters, setFilters] = useState<MealFilters>({});\n  const [orderPreferences, setOrderPreferences] = useState<OrderPreferences>({}\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentOrder, setCurrentOrder] = useState<string | null>(null);\n  const orderTracking = useOrderTracking(currentOrder || undefined);\n  const paymentFlow = usePaymentFlow(currentOrder || undefined);\n  // Load cart from localStorage on mount\n  useEffect((\n        dispatch({ type: 'LOAD_CART', payload: cartData.items || [] });\n  }, []);\n  // Save cart to localStorage whenever it changes\n  useEffect((\n  }, [cart]);\n  // Load meals and categories\n  const loadMeals = useCallback(async (newFilters?: MealFilters\n      const filterParams = { ...filters, ...newFilters };\n      const [mealsResponse, categoriesResponse, vendorsResponse] = await Promise.all([]\n]);\n      if (mealsResponse.success) {}\n      if (categoriesResponse.success) {}\n      if (vendorsResponse.success) {}\n  }, [filters]);\n  // Search meals\n  const searchMeals = useCallback(async (query: string\n  }, [filters]);\n  // Get meal recommendations\n  const loadRecommendations = useCallback(async (\n    return [];\n  }, [user?.id]);\n  // Cart management\n  const addToCart = useCallback((item: MealItem, quantity: number = 1, notes?: string, customizations?: any\n    dispatch({}\n      payload: { item, quantity, notes, customizations }\n    toast.success(`${item.name} added to cart``\n            description: `Food order #${orderId.slice(-8)}``\n              name: `${user?.firstName} ${user?.lastName}``\n              toast.error(`Payment failed: ${error.message}``","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/use-payment.ts",["2433"],[]," * HASIVU Platform - Payment Integration Hook\n * Comprehensive payment processing with Razorpay integration and wallet management;\nimport { useState, useCallback, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { api } from '../lib/api-client';\nimport { useAuth } from '../contexts/auth-context';\nimport { usePaymentTracking } from './use-realtime';\n  // Extend Window interface for Razorpay\ndeclare global {}\n  theme?: {}\n  onSuccess?: (response: RazorpayResponse) => void;\n  onFailure?: (error: any) => void;\n  isDefault: boolean;\n// TODO: Refactor this function - it may be too long\n  const { user, getWalletBalance } = useAuth();\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [paymentMethods, setPaymentMethods] = useState<PaymentMethod[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  // Load Razorpay script dynamically\n  const loadRazorpayScript = useCallback((): Promise<boolean> => {}\n      const script = document.createElement('script');\n      script.src = 'https://checkout.razorpay.com/ v1/checkout.js';\n      script.onload = () => resolve(true);\n      script.onerror = () => resolve(false);\n      document.head.appendChild(script);\n  }, []);\n  // Initialize payment with Razorpay\n  const initializePayment = useCallback(async (options: PaymentOptions\n  // Create payment order on backend\n      const response = await api.payments.initialize({}\n      if (!response.success) {}\n      const { razorpayOrderId, amount, currency, key } = response.data;\n  // Configure Razorpay options\n      const razorpayOptions = {}\n        theme: {}\n        handler: async (response: RazorpayResponse\n            if (verificationResponse.success) {}\n        modal\n  // Open Razorpay checkout\n      const razorpay = new window.Razorpay(razorpayOptions);\n      razorpay.open();\n  }, [user, loadRazorpayScript]);\n  // Process wallet payment\n  const processWalletPayment = useCallback(async (orderId: string, amount: number\n        razorpay_payment_id: `wallet_${Date.now()}``","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/use-realtime.ts",["2434"],[]," * HASIVU Platform - Real-time Features Hook\n * Provides comprehensive real-time functionality for orders, payments, and notifications;\nimport { useEffect, useState, useCallback, useRef } from 'react';\nimport { socketClient, SocketEventName, SocketEvents } from '../lib/socket-client';\nimport { useAuth } from '../contexts/auth-context';\nimport { toast } from 'react-hot-toast';\nexport // TODO: Refactor this function - it may be too long\n  const { autoConnect = true, events = [], rooms = [] } = options;\n  const { user, isAuthenticated } = useAuth();\n  const [connectionState, setConnectionState] = useState<ConnectionState>({}\n  const unsubscribeRefs = useRef<Array<() => void>>([]);\n  // Connection management\n  useEffect((\n    return (\n  }, [autoConnect, isAuthenticated, user?.id]);\n  // Subscribe to connection status updates\n  useEffect((\n  // Update connection state with current status\n    const stats = socketClient.getConnectionStats();\n    setConnectionState({}\n    return unsubscribe;\n  }, []);\n  // Join rooms when connected\n  useEffect((\n  }, [connectionState.isConnected, rooms]);\n  const connect = useCallback((\n      setConnectionState(prev => ({ ...prev, isConnecting: true }));\n      socketClient.connect(token, user.id);\n  }, [user]);\n  const disconnect = useCallback((\n  }, []);\n  const subscribe = useCallback(<T extends SocketEventName>(\n    eventName: T,\n    callback: SocketEvents[T]\n  }, []);\n  const emit = useCallback((eventName: string, data?: any\n  }, []);\n  const joinRoom = useCallback((roomId: string\n  }, []);\n  const leaveRoom = useCallback((roomId: string\n  }, []);\n  return {}\n  // Hook for order tracking with real-time updates\n    rooms: orderId ? [`order_${orderId}``\n        toast.error(`Delivery delayed: ${data.reason}``\n    rooms: orderId ? [`payment_${orderId}``\n        toast.error(`Payment failed: ${data.error}``\n      const message = `RFID ${data.action}: ${data.success ? 'Success' : 'Failed'}``\n        `System maintenance scheduled: ${data.message}``","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/use-rfid.ts",["2435"],[]," * HASIVU Platform - RFID Integration Hook\n * Comprehensive RFID functionality for meal verification and access control;\nimport { useState, useCallback, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { api } from '../lib/api-client';\nimport { useAuth } from '../contexts/auth-context';\nimport { useRFIDScanning } from './use-realtime';\n// TODO: Refactor this function - it may be too long\n  const { user, hasRole, hasPermission } = useAuth();\n  const [cards, setCards] = useState<RFIDCard[]>([]);\n  const [devices, setDevices] = useState<RFIDDevice[]>([]);\n  const [scanHistory, setScanHistory] = useState<any[]>([]);\n  const [stats, setStats] = useState<RFIDStats>({}\n  const [isLoading, setIsLoading] = useState(false);\n  const rfidScanning = useRFIDScanning();\n  // Load RFID cards\n  const loadCards = useCallback(async (filters?: {}\n  }, []);\n  // Load RFID devices\n  const loadDevices = useCallback(async (\n    try {}\n  }, [hasPermission]);\n  // Load scan history\n  const loadScanHistory = useCallback(async (filters?: {}\n  }, []);\n  // Verify RFID card\n  const verifyCard = useCallback(async (cardId: string): Promise<ScanResult> => {}\n            ? `Verified: ${response.data.student?.name}``\n          ? `Meal verified for ${result.studentName}``\n          `✅ Meal verified for ${result.studentName}``\n        toast.error(`❌ ${result.message}``\n      toast.error(`❌ ${error.message || 'Verification failed'}``","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/use-toast.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useAccessibility.ts",["2436"],[]," * Accessibility Hooks\n * Custom hooks for managing accessibility features and user preferences;\nimport { useState, useEffect, useCallback } from 'react';\n * Hook for managing user accessibility preferences;\nexport const // TODO: Refactor this function - it may be too long\nuseAccessibilityPreferences = (\n  useEffect((\n      setPreferences(prev => ({ ...prev, reducedMotion: mediaQuery.matches }));\n    updateReducedMotion();\n    mediaQuery.addEventListener('change', updateReducedMotion);\n  // Check for high contrast preference\n    const contrastQuery = window.matchMedia('(prefers-contrast: high)');\n    const updateHighContrast = (\n      setPreferences(prev => ({ ...prev, highContrast: contrastQuery.matches }));\n    updateHighContrast();\n    contrastQuery.addEventListener('change', updateHighContrast);\n  // Check for screen reader\n    const hasScreenReader = 'speechSynthesis' in window;\n                           navigator.userAgent.includes('NVDA');\n                           navigator.userAgent.includes('JAWS');\n                           navigator.userAgent.includes('VoiceOver');\n    setPreferences(prev => ({ ...prev, screenReader: hasScreenReader }));\n  // Load user preferences from localStorage\n    const stored = localStorage.getItem('accessibility-preferences');\n    if (stored) {}\n        setPreferences(prev => ({ ...prev, ...parsed }));\n    return (\n  }, []);\n  const updatePreference = useCallback(<K extends keyof AccessibilityPreferences>(\n    key: K,\n    value: AccessibilityPreferences[K]\n      const updated = { ...prev, [key]: value };\n      localStorage.setItem('accessibility-preferences', JSON.stringify(updated));\n      return updated;\n  }, []);\n  return { preferences, updatePreference };\n * Hook for managing keyboard navigation;\nexport const useKeyboardNavigation = (\n  containerRef: React.RefObject<HTMLElement>,\n  options: {}\n  } = options;\n  const handleKeyDown = useCallback((event: KeyboardEvent\n        break;\n      case 'ArrowUp': undefined\n        if (orientation === 'vertical' || orientation === 'both') {}\n        break;\n      case 'ArrowRight': undefined\n        if (orientation === 'horizontal' || orientation === 'both') {}\n        break;\n      case 'ArrowLeft': undefined\n        if (orientation === 'horizontal' || orientation === 'both') {}\n        break;\n      case 'Home': undefined\n        event.preventDefault();\n        nextIndex = 0;\n        break;\n      case 'End': undefined\n        event.preventDefault();\n        nextIndex = focusableElements.length - 1;\n        break;\n      default: undefined\n        return;\n    if (nextIndex !== currentIndex && focusableElements[nextIndex]) {}\n  }, [containerRef, orientation, loop, selector]);\n  useEffect((\n  }, [handleKeyDown]);\n * Hook for managing announcements to screen readers;\nexport const useAnnouncements = (\n    }, 1000);\n  }, []);\n  return { announcements, announce };\n * Hook for managing focus trapping;\nexport const useFocusTrap = (\n  isActive: boolean,\n  containerRef: React.RefObject<HTMLElement;\n    const handleKeyDown = (event: KeyboardEvent\n      const firstElement = focusableElements[0];\n      const lastElement = focusableElements[focusableElements.length - 1];\n      if (event.shiftKey) {}\n  // Focus the first focusable element\n    const focusableElements = getFocusableElements();\n    if (focusableElements.length > 0) {}\n    document.addEventListener('keydown', handleKeyDown);\n    return (\n  }, [isActive, containerRef]);\n * Hook for detecting if user prefers reduced motion;\nexport const useReducedMotion = (\n  }, []);\n  return reducedMotion;\n * Hook for managing high contrast mode;\nexport const useHighContrast = (\n  }, []);\n  return highContrast;\n * Hook for managing roving focus (useful for menus, toolbars);\nexport const useRovingFocus = (\n  items: HTMLElement[],\n  currentIndex: number,\n  onChange: (index: number) => void,\n  orientation: 'horizontal' | 'vertical' = 'vertical'\n        break;\n      case 'ArrowUp': undefined\n        if (orientation === 'vertical') {}\n        break;\n      case 'ArrowRight': undefined\n        if (orientation === 'horizontal') {}\n        break;\n      case 'ArrowLeft': undefined\n        if (orientation === 'horizontal') {}\n        break;\n      case 'Home': undefined\n        event.preventDefault();\n        nextIndex = 0;\n        break;\n      case 'End': undefined\n        event.preventDefault();\n        nextIndex = items.length - 1;\n        break;\n      default: undefined\n        return;\n    if (nextIndex !== currentIndex) {}\n  }, [currentIndex, items, onChange, orientation]);\n  useEffect((\n  }, [currentIndex, items, handleKeyDown]);","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useApiIntegration.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useAuth.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useMobileAnalytics.ts",["2437"],[],"\"use client\"\nimport { useEffect, useCallback, useRef, useState } from 'react'\n// Types for mobile analytics\n  position?: { x: number; y: number }\n  duration?: number\n  force?: number\n  touchPoints?: number\n  // Mobile Analytics Hook\n// TODO: Refactor this function - it may be too long\nexport const\nuseMobileAnalytics = (\n  // Add network information if available\n  // @ts-ignore\n    const connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection\n    if (connection) {}\n  // Add battery information if available\n    try {}\n  // Add memory information if available\n  // @ts-ignore\n    if (navigator.deviceMemory) {}\n  // Get performance metrics\n    const navigation = performance.getEntriesByType(\"secure-configuration-value\")[0] as PerformanceNavigationTiming\n    const performanceMetrics: PerformanceMetrics = {}\n  // Get paint timings\n    const paintEntries = performance.getEntriesByType('paint')\n    paintEntries.forEach(entry => {}\n  // Check PWA status\n    const isStandalone = window.matchMedia('(display-mode: standalone)').matches\n    const isPWAInstalled = isStandalone;\n      (window.navigator as any).standalone === true;\n      document.referrer.includes('android-app://')\n  // Check notification permission\n    const notificationsEnabled = 'Notification' in window && Notification.permission === 'granted'\n  // Create session\n    sessionRef.current = {}\n    setIsInitialized(true)\n  }, [])\n  // Generate session ID\n  const generateSessionId = (\n    return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}``\n        message: `Unhandled Promise Rejection: ${event.reason}``","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useMobileLayout-clean.ts",["2438"],[],"import { useState, useEffect, useCallback } from 'react'\nexport interface UseMobileLayoutReturn extends MobileLayoutState, MobileLayoutActions {}\n// Breakpoints matching Tailwind CSS defaults\nconst BREAKPOINTS = {}\n} as const\nexport function useMobileLayout(): UseMobileLayoutReturn {}\n    screenSize: { width: 1024, height: 768 }\n  // Update screen dimensions and device type\n  const updateLayoutState = useCallback((\n      screenSize: { width, height }\n  }, [])\n  useEffect((\n  }, [updateLayoutState])\n  const enableFullscreen = useCallback(async (): Promise<void> => {}\n  }, [])\n  const exitFullscreen = useCallback(async (): Promise<void> => {}\n  }, [])\n  const vibrate = useCallback((pattern: number | number[]): boolean => {}\n    return false\n  }, [])\n  return {}","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useMobileLayout.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/usePWA.ts",["2439"],[],"import { useState, useEffect, useCallback } from 'react'\n// PWA installation hook\n// TODO: Refactor this function - it may be too long\nexport const\nusePWAInstall = (\n    const handleAppInstalled = (\n  // Check if already installed\n    if (window.matchMedia('(display-mode: standalone)').matches;\n        (window.navigator as any).standalone === true) {}\n    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt)\n    window.addEventListener('appinstalled', handleAppInstalled)\n    return (\n  }, [])\n  const installApp = useCallback(async (\n      const { outcome } = await deferredPrompt.userChoice\n      if (outcome === 'accepted') {}\n      return false\n  }, [deferredPrompt])\n  return {}\n  // Network status hook with connection quality\nexport const useNetworkStatus = (\n    updateConnectionInfo()\n    window.addEventListener('online', updateOnlineStatus)\n    window.addEventListener('offline', updateOnlineStatus)\n  // Listen for connection changes\n    const connection = (navigator as any).connection\n    if (connection) {}\n    return (\n  }, [])\n  const getConnectionQuality = useCallback((\n  }, [isOnline, effectiveType])\n  return {}\n  // Push notifications hook\nexport const usePushNotifications = (\n  // Get existing subscription\n    if ('serviceWorker' in navigator) {}\n  }, [])\n  const requestPermission = useCallback(async (\n  }, [isSupported])\n  const subscribe = useCallback(async (vapidKey: string\n      setSubscription(sub)\n      return sub\n  }, [isSupported, permission])\n  const unsubscribe = useCallback(async (\n  }, [subscription])\n  const showNotification = useCallback((title: string, options?: NotificationOptions\n    return null\n  }, [permission])\n  return {}\n  // Background sync hook for offline actions\nexport const useBackgroundSync = (\n  }>>([])\n  const [isSupported] = useState(\n    'serviceWorker' in navigator && 'sync' in window.ServiceWorkerRegistration.prototype\n  // Add action to pending queue\n  const queueAction = useCallback((type: string, data: any\n      id: `${type}-${Date.now()}``\n        registration.sync.register(`sync-${action.type}``","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useRealTimeIntegration.ts",["2440"],[]," * HASIVU Platform - Real-time Integration Hook\n * Comprehensive hook for managing real-time features across all components;\nimport { useEffect, useCallback, useRef, useState } from 'react';\nimport { useSocket } from '@/contexts/SocketContext';\nimport { useAppDispatch, useAppSelector } from '@/store';\nimport { updateOrder, addOrder } from '@/ store/slices/orderSlice';\nimport { addNotification } from '@/store/slices/notificationSlice';\nimport { updateRFIDStatus } from '@/ store/slices/rfidSlice';\nimport { updatePaymentStatus } from '@/store/slices/paymentSlice';\nimport { toast } from 'react-hot-toast';\n * Comprehensive real-time integration hook\nexport const\nuseRealTimeIntegration = (options: RealTimeOptions = {}\n  } = options;\n  const dispatch = useAppDispatch();\n  const { subscribe, isConnected, sendMessage, getConnectionStats } = useSocket();\n  // Local state\n  const [lastUpdate, setLastUpdate] = useState<Date | null>(null);\n  const [liveMetrics, setLiveMetrics] = useState<LiveMetrics>({}\n  const subscriptionsRef = useRef<(() => void)[]>([]);\n  const metricsIntervalRef = useRef<NodeJS.Timeout | null>(null);\n   * Handle order status updates;\n  const handleOrderUpdate = useCallback((orderData: any\n  // Custom callback\n    onOrderUpdate?.(orderData);\n  // Show toast notification\n    const statusMessages: Record<string, string> = {}\n    if (statusMessages[orderData.status]) {}\n  }, [dispatch, onOrderUpdate]);\n   * Handle payment updates;\n  const handlePaymentUpdate = useCallback((paymentData: any\n  // Custom callback\n    onPaymentUpdate?.(paymentData);\n  // Show toast notification\n    if (paymentData.status === 'success') {}\n  }, [dispatch, onPaymentUpdate]);\n   * Handle RFID scan events;\n  const handleRFIDScan = useCallback((scanData: any\n  // Custom callback\n    onRFIDScan?.(scanData);\n  // Show toast notification\n    const actionMessages: Record<string, string> = {}\n    if (actionMessages[scanData.action]) {}\n      toast.success(`RFID: ${actionMessages[scanData.action]}``\n      activeSubscriptions: subscriptionsRef.current.map((_, index) => `subscription_${index}``","/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useSocket.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useTouchOptimization.ts",["2441"],[],"import { useState, useEffect, useCallback, useRef } from 'react'\n// Touch optimization hook with haptic feedback and gesture support\nconst defaultConfig: TouchOptimizationConfig = {}\nexport const useTouchOptimization = (\n  elementRef: React.RefObject<HTMLElement>,\n  handlers: TouchGestureHandlers = {},\n  config: Partial<TouchOptimizationConfig> = {}\n  const fullConfig = { ...defaultConfig, ...config }\n  const [isPressed, setIsPressed] = useState(false)\n  const [touchCount, setTouchCount] = useState(0)\n  const touchState = useRef({}\n  // Haptic feedback utility\n  const triggerHaptic = useCallback((pattern: number | number[] = 10\n  }, [fullConfig.hapticFeedback])\n  // Calculate distance between two touches\n  const getDistance = useCallback((touch1: Touch, touch2: Touch\n  }, [])\n  // Calculate angle between two touches\n  const getAngle = useCallback((touch1: Touch, touch2: Touch\n  }, [])\n  // Handle touch start\n  const handleTouchStart = useCallback((e: TouchEvent\n  // Start long press timer\n    if (handlers.onLongPress && e.touches.length === 1) {}\n      }, fullConfig.longPressDelay)\n  // Prevent zoom if configured\n    if (fullConfig.preventZoom && e.touches.length > 1) {}\n  }, [handlers.onLongPress, fullConfig.longPressDelay, fullConfig.preventZoom, triggerHaptic, getDistance, getAngle])\n  // Handle touch move\n  const handleTouchMove = useCallback((e: TouchEvent\n    touchState.current.lastMoveTime = now\n  // Handle pinch gesture\n    if (e.touches.length === 2 && handlers.onPinch) {}\n    // Handle rotation gesture\n    if (e.touches.length === 2 && handlers.onRotate) {}\n  // Cancel long press on move\n    if (touchState.current.longPressTimer) {}\n  }, [fullConfig.touchDebounce, handlers.onPinch, handlers.onRotate, getDistance, getAngle])\n  // Handle touch end\n  const handleTouchEnd = useCallback((e: TouchEvent\n    if (!touchState.current.startTouch) return\n    const deltaX = touch.clientX - touchState.current.startTouch.clientX\n    const deltaY = touch.clientY - touchState.current.startTouch.clientY\n    const deltaTime = now - touchState.current.startTime\n    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY)\n  // Handle tap gestures\n    if (distance < 10 && deltaTime < 300) {}\n  // Single tap\n      touchState.current.lastTap = now\n      setTimeout((\n      }, fullConfig.doubleTapDelay)\n      return\n  // Handle swipe gestures\n    if (distance > fullConfig.swipeThreshold) {}\n  }, [handlers, fullConfig.doubleTapDelay, fullConfig.swipeThreshold, triggerHaptic])\n  // Attach event listeners\n  useEffect((\n    const options = { passive: false }\n    element.addEventListener('touchstart', handleTouchStart, options)\n    element.addEventListener('touchmove', handleTouchMove, options)\n    element.addEventListener('touchend', handleTouchEnd, options)\n    element.addEventListener('touchcancel', handleTouchEnd, options)\n    return (\n  }, [elementRef, handleTouchStart, handleTouchMove, handleTouchEnd])\n  return {}\n  // Hook for managing touch interactions with visual feedback\n// TODO: Refactor this function - it may be too long\nexport const useTouchFeedback = (\n  const [pressPosition, setPressPosition] = useState({ x: 0, y: 0 })\n  const pressTimer = useRef<NodeJS.Timeout | null>(null)\n  const handleTouchStart = useCallback((e: React.TouchEvent | React.MouseEvent\n    setIsPressed(true)\n  // Auto release after timeout\n    pressTimer.current = setTimeout((\n    }, 200)\n  }, [])\n  const handleTouchEnd = useCallback((\n  // Delayed release for visual feedback\n    setTimeout(() => setIsPressed(false), 100)\n  }, [])\n  useEffect((\n  }, [])\n  return {}\n  // Hook for scroll optimization on mobile\nexport const useScrollOptimization = (\n  elementRef: React.RefObject<HTMLElement>,\n  options: {}\n  const { momentum = true, overscroll = 'auto', direction = 'vertical' } = options\n  useEffect((\n  // Smooth scrolling\n    element.style.scrollBehavior = 'smooth'\n    return (\n  }, [elementRef, momentum, overscroll, direction])\n  // Hook for managing focus states on touch devices\nexport const useTouchFocus = (\n    detectTouch()\n    const handleTouchStart = () => setLastInteraction('touch')\n    const handleMouseDown = () => setLastInteraction('mouse')\n    document.addEventListener('touchstart', handleTouchStart, { passive: true })\n    document.addEventListener('mousedown', handleMouseDown)\n    return (\n  }, [])\n  // CSS class to apply focus styles only for keyboard navigation\n  const focusVisibleClass = lastInteraction === 'mouse' ? 'focus-visible:ring-0 focus-visible:ring-offset-0' : ''\n  return {}\nexport default useTouchOptimization","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/accessibility-testing.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/lib/api-client.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/lib/demo-data.ts",["2442"],[]," * Demo data for HASIVU Platform dashboards\n * This file contains comprehensive mock data for testing all dashboard functionalities\nexport const demoSchool = {}\n  // Student demo data\nexport const demoStudents = []\n];\n  // Parent demo data\nexport const demoParents = []\n    ]\n];\n  // Admin demo data\nexport const demoAdmins = []\n];\n  // Kitchen staff demo data\nexport const demoKitchenStaff = []\n];\n  // Meal categories and items\nexport const demoMealCategories = []\n];\nexport const demoMealItems = []\n    ingredients: ['Basmati Rice', 'Mixed Vegetables', 'Spices', 'Ghee'],\n    preparationTime: 15,\n    isPopular: true\n    ingredients: ['Chicken Breast', 'Rice', 'Salad', 'Herbs'],\n    preparationTime: 18,\n    isPopular: true\n];\n  // Order statuses and types\nexport const orderStatuses = []\n] as const;\nexport const orderPriorities = []\n] as const;\n  // Nutrition targets by age group\nexport const nutritionTargets = {}\n  '9-13': {}\n  '14-18': {}\n  // Kitchen stations configuration\nexport const kitchenStations = []\n];\n  // Achievement categories and badges\nexport const achievementCategories = []\n] as const;\nexport const demoAchievements = []\n];\n  // Helper functions for demo data\nexport const getCurrentDate = () => new Date().toISOString().split('T')[0];\nexport const getRandomElement = <T>(array: T[]): T => {}\n// TODO: Refactor this function - it may be too long\nexport const\ngenerateOrderId = (\n  return `ORD-${Math.random().toString(36).substr(2, 6).toUpperCase()}``","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/design-system.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/lib/enhanced-api-client.ts",["2443"],[]," * HASIVU Platform - Enhanced API Client with Full ShadCN Integration\n * Production-ready API integration layer that connects all ShadCN components\n * with backend services, real-time updates, and optimistic UI patterns;\nimport axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { toast } from 'react-hot-toast';\nimport { socketClient } from './socket-client';\n  // Enhanced types for component integration\ninterface ApiResponse<T = any> {}\nconst config: ApiConfig = {}\n  }> = [];\n  private optimisticUpdates: Map<string, OptimisticUpdate> = new Map();\n  private realTimeSubscriptions: Map<string, RealTimeSubscription> = new Map();\n  private componentStates: Map<string, ComponentState> = new Map();\n  private requestQueue: Array<() => Promise<any>> = [];\n  private isOffline = false;\n    this.setupInterceptors();\n  private setupInterceptors() {}\n          config.headers.Authorization = `Bearer ${token}``\n          console.log(`✅ ${response.config.method?.toUpperCase()} ${response.config.url}``\n                  originalRequest.headers.Authorization = `Bearer ${token}``\n            originalRequest.headers.Authorization = `Bearer ${newToken}``\n      `${config.baseURL}/ auth/refresh``\n      const redirectUrl = `/ auth/login?redirect=${encodeURIComponent(currentPath)}&reason=session_expired``\n        code: data?.code || `HTTP_${status}``\n    return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}``\n    getItem: (id: string) => apiClient.get(`/meals/items/${id}``\n    getNutrition: (id: string) => apiClient.get(`/m eals/nutrition/${id}``\n    getById: (id: string) => apiClient.get(`/ orders/${id}``\n    track: (id: string) => apiClient.get(`/ orders/track/${id}``\n    cancel: (id: string) => apiClient.patch(`/orders/${id}/cancel``\n    markAsRead: (id: string) => apiClient.patch(`/notifications/${id}/read``","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/performance/adaptive-rate-limiter.ts",["2444"],[]," * HASIVU Platform - Adaptive Rate Limiting Service\n * Intelligent rate limiting based on user behavior, system load, and threat detection\n * Implements sliding window algorithm with Redis for distributed rate limiting;\nimport { RedisService } from '../services/redis.service';\nimport { logger } from '../utils/logger';\nimport { APIGatewayProxyEvent, APIGatewayProxyResult } from 'aws-lambda';\n  private systemLoadCache: { value: number; timestamp: number } | null = null;\n  // User tier definitions\n  private readonly userTiers: Record<string, UserTier> = {}\n    free: { name: 'free', multiplier: 1, burstAllowance: 1.2, priority: 1 },\n    premium: { name: 'premium', multiplier: 3, burstAllowance: 1.5, priority: 2 },\n    admin: { name: 'admin', multiplier: 10, burstAllowance: 2.0, priority: 3 },\n    super_admin: { name: 'super_admin', multiplier: 50, burstAllowance: 3.0, priority: 4 }\n  // Endpoint-specific base limits (requests per 15 minutes)\n  private readonly endpointLimits: Record<string, number> = {}\n   * Check rate limit for a request;\n  async checkRateLimit(\n    event: APIGatewayProxyEvent,\n    options: RateLimitOptions,\n    userTier: string = 'free',\n    userId?: string\n  ): Promise<RateLimitResult> {}\n      // Use sliding window algorithm\n      const result = await this.slidingWindowRateLimit(\n        key,\n        adjustedLimit,\n        options.windowMs,\n        options.skipSuccessful,\n        options.skipFailed\n      // Log rate limiting metrics\n      this.logRateLimitMetrics(event, result, systemLoad, userTier, Date.now() - startTime);\n      return result;\n      // Fail open - allow request on rate limiter error\n      return {}\n   * Sliding window rate limiting implementation;\n  private async slidingWindowRateLimit(\n    key: string,\n    limit: number,\n    windowMs: number,\n    skipSuccessful?: boolean,\n    skipFailed?: boolean\n  ): Promise<RateLimitResult> {}\n    const requestId = `${now}-${Math.random()}``\n      return `rl:${options.keyGenerator(event)}``\n      return `rl:user:${userId}:${method}:${endpoint}``\n    return `rl:ip:${ip}:${method}:${endpoint}``\n    const key = `rapid:${clientIP}``\n    const patternKey = `pattern:${clientIP}``\n      await this.redis.sadd(patternKey, `${method}:${path}``","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/performance/cache-service.ts",["2445"],[]," * HASIVU Platform - Enhanced Multi-Layer Caching Service\n * Implements L1 (in-memory), L2 (Redis), L3 (CDN) caching strategy\n * with intelligent cache warming and invalidation patterns;\nimport { RedisService } from '../services/redis.service';\nimport { logger } from '../utils/logger';\ninterface CacheEntry<T> {}\n    hits: { l1: 0, l2: 0, total: 0 },\n    misses: 0,\n    sets: 0,\n    invalidations: 0\n  private\n  static getInstance(): CacheService {}\n    return CacheService.instance;\n   * Get value from cache with fallback execution;\n  async get<T>(\n    key: string,\n    fallback?: () => Promise<T>,\n    options: CacheOptions = {}\n  ): Promise<T | null> {}\n    const { ttl = 300, tags = [], version, compress = false, warmup = false } = options;\n    try {}\n        logger.debug('Cache hit L1', { key, ttl: localEntry.expires - Date.now() });\n        return localEntry.data;\n      // L2: Check Redis cache\n      const redisData = await this.redis.get(key);\n      if (redisData) {}\n            this.stats.hits.l2++;\n            this.stats.hits.total++;\n            logger.debug('Cache hit L2', { key, version: entry.version });\n            return entry.data;\n          logger.warn('Failed to parse Redis cache entry', { key, error: parseError.message });\n      // Cache miss - execute fallback\n      this.stats.misses++;\n      if (fallback) {}\n        await this.set(key, result, { ttl, tags, version, compress });\n        // Trigger warmup if enabled\n        if (warmup) {}\n        return result;\n      return null;\n      logger.error('Cache get operation failed', { key, error: error.message });\n      // Execute fallback on cache failure\n      if (fallback) {}\n          logger.error('Fallback execution failed', { key, error: fallbackError.message });\n          throw fallbackError;\n      return null;\n   * Set value in cache;\n  async set<T>(\n    key: string,\n    value: T,\n    options: CacheOptions = {}\n  ): Promise<void> {}\n    const { ttl = 300, tags = [], version, compress = false } = options;\n    try {}\n      // Set in L1 cache\n      this.localCache.set(key, entry);\n      // Set in L2 cache (Redis)\n      const serialized = compress ? this.compress(entry) : JSON.stringify(entry);\n      await this.redis.setex(key, ttl, serialized);\n      // Store tags for invalidation\n      if (tags.length > 0) {}\n      this.stats.sets++;\n      logger.debug('Cache set successful', { key, ttl, tags, compressed: compress });\n      logger.error('Cache set operation failed', { key, error: error.message });\n      throw error;\n   * Delete specific key from cache;\n  async delete(key: string): Promise<void> {}\n      logger.debug('Cache key deleted', { key });\n      logger.error('Cache delete operation failed', { key, error: error.message });\n   * Invalidate cache by pattern;\n  async invalidatePattern(pattern: string): Promise<void> {}\n      keysToDelete.forEach(key => this.localCache.delete(key));\n      // Invalidate L2 cache\n      const redisKeys = await this.redis.client.keys(pattern);\n      if (redisKeys.length > 0) {}\n      this.stats.invalidations += keysToDelete.length + redisKeys.length;\n      logger.info('Cache pattern invalidated', {}\n      logger.error('Cache pattern invalidation failed', { pattern, error: error.message });\n   * Invalidate cache by tags;\n  async invalidateByTags(tags: string[]): Promise<void> {}\n        const tagKeys = await this.redis.smembers(`cache:tag:${tag}``\n          this.redis.del(`cache:tag:${tag}``\n        return `gzip:${compressed.toString('base64')}``\n          this.redis.sadd(`cache:tag:${tag}``","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/performance/lambda-optimizer.ts",["2446"],[]," * HASIVU Platform - Lambda Performance Optimizer\n * Cold start elimination, connection pooling, and memory optimization for serverless functions;\nimport { APIGatewayProxyEvent, APIGatewayProxyResult, Context } from 'aws-lambda';\nimport { PrismaClient } from '@prisma/client';\nimport { logger } from '../utils/logger';\ninterface ConnectionPool<T> {}\n  static getInstance(): LambdaOptimizer {}\n    return LambdaOptimizer.instance;\n   * High-order function to wrap Lambda handlers with optimizations;\n  static optimizeHandler<T = APIGatewayProxyResult>(\n    handler: (event: APIGatewayProxyEvent, context: Context) => Promise<T;\n        // Pre-execution optimizations\n        await LambdaOptimizer.preExecutionOptimization(context);\n        // Execute the actual handler\n        const result = await handler(event, context);\n        // Post-execution cleanup and metrics\n        const metrics = LambdaOptimizer.calculateMetrics(startTime, initialMemory);\n        LambdaOptimizer.logPerformanceMetrics(context, metrics);\n        // Add performance headers to response\n        if (LambdaOptimizer.isAPIGatewayResponse(result)) {}\n        return result;\n        throw error;\n   * Get or create optimized database connection;\n  static async getDatabaseConnection(): Promise<PrismaClient> {}\n    const pool = LambdaOptimizer.connectionPools.get(poolKey)!;\n    // Try to get an available connection\n    const availableConnection = pool.connections.find(conn => !pool.inUse.has(conn));\n    if (availableConnection) {}\n    // Create new connection if under limit\n    if (pool.connections.length < pool.maxConnections) {}\n        log: process.env.NODE_ENV === 'development' ? ['error', 'warn'] : ['error']\n      pool.connections.push(newConnection);\n      pool.inUse.add(newConnection);\n      logger.debug('Created new database connection', {}\n      return newConnection;\n    // Wait for available connection\n    return new Promise((resolve, reject\n      }, 100);\n      // Timeout after acquireTimeout\n      setTimeout((\n      }, pool.acquireTimeout);\n   * Release database connection back to pool;\n  static releaseDatabaseConnection(connection: PrismaClient): void {}\n   * Optimize memory usage;\n  static async optimizeMemory(): Promise<void> {}\n      // Clear require cache for non-essential modules\n      LambdaOptimizer.clearRequireCache();\n      // Force garbage collection if available\n      if (global.gc) {}\n   * Preload critical dependencies to avoid cold start overhead;\n  static async preloadDependencies(): Promise<void> {}\n      // Initialize database connection pool\n      await LambdaOptimizer.getDatabaseConnection();\n      logger.debug('Dependencies preloaded successfully');\n      logger.warn('Failed to preload some dependencies', { error: error.message });\n   * Create optimized error response;\n  static createErrorResponse(\n    statusCode: number,\n    error: string,\n    details?: any\n  ): APIGatewayProxyResult {}\n      body: JSON.stringify({}\n        ...(details && { details }),\n        timestamp: new Date().toISOString()\n   * Create optimized success response with compression;\n  static createSuccessResponse(\n    data: any,\n    statusCode: number = 200,\n    compress: boolean = true\n  ): APIGatewayProxyResult {}\n    const headers: Record<string, string> = {}\n    // Compress response if it's large enough and compression is enabled\n    if (compress && body.length > 1024) {}\n        logger.warn('Response compression failed', { error: error.message });\n    return {}\n  // Private helper methods\n  private static isWarmupRequest(event: APIGatewayProxyEvent): boolean {}\n  private static handleWarmupRequest(context: Context): APIGatewayProxyResult {}\n    return {}\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({}\n  private static async preExecutionOptimization(context: Context): Promise<void> {}\n    process.on('uncaughtException', (error\n    // Optimize memory if needed\n    await LambdaOptimizer.optimizeMemory();\n  private static calculateMetrics(\n    startTime: number,\n    initialMemory: NodeJS.MemoryUsage\n  ): PerformanceMetrics {}\n  private static getConnectionPoolStats(): Record<string, number> {}\n    const stats: Record<string, number> = {};\n    for (const [poolName, pool] of LambdaOptimizer.connectionPools.entries()) {}\n      stats[`${poolName}_total``\n      stats[`${poolName}_in_use``\n      stats[`${poolName}_available``\n    response.headers['X-Execution-Time'] = `${metrics.executionTime}ms``\n    response.headers['X-Memory-Used'] = `${Math.round(metrics.memoryUsed / 1024 / 1024)}MB``\n      response.headers['X-Init-Time'] = `${metrics.initTime}ms``","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/performance.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/lib/seo.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/lib/socket-client.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/lib/test-polyfills.ts",["2447"],[]," * Test Polyfills for Mobile and PWA Testing\n * Provides browser APIs and polyfills needed for comprehensive testing\nimport { TextEncoder, TextDecoder } from 'util'\nif (typeof global.TextEncoder === 'undefined') {}\nif (typeof global.TextDecoder === 'undefined') {}\n// Mock crypto.randomUUID for Node.js environments\nif (typeof global.crypto === 'undefined') {}\n} as any\n  // Mock performance API\nif (typeof global.performance === 'undefined') {}\n} as any\n  // Mock requestAnimationFrame\nif (typeof global.requestAnimationFrame === 'undefined') {}\nif (typeof global.cancelAnimationFrame === 'undefined') {}\n  // Mock requestIdleCallback for performance testing\nif (typeof global.requestIdleCallback === 'undefined') {}\n    }), 1)\nif (typeof global.cancelIdleCallback === 'undefined') {}\n  // Mock vibration API for mobile testing\nif (typeof navigator !== 'undefined' && !navigator.vibrate) {}\n  // Mock geolocation API\nif (typeof navigator !== 'undefined' && !navigator.geolocation) {}\n  // Mock share API for PWA testing\nif (typeof navigator !== 'undefined' && !navigator.share) {}\n  // Mock network information API\nif (typeof navigator !== 'undefined' && !navigator.connection) {}\n  // Mock clipboard API\nif (typeof navigator !== 'undefined' && !navigator.clipboard) {}\n  // Mock media devices for camera/mi crophone testing\nif (typeof navigator !== 'undefined' && !navigator.mediaDevices) {}\n      enumerateDevices: jest.fn().mockResolvedValue([]),\n      getSupportedConstraints: jest.fn().mockReturnValue({})\n// Mock user agent for mobile detection\nObject.defineProperty(navigator, 'userAgent', {}\n// Mock touch support\nObject.defineProperty(navigator, 'maxTouchPoints', {}\n  // Mock device memory for performance testing\nif (typeof navigator !== 'undefined' && !navigator.deviceMemory) {}\n  // Mock hardware concurrency\nif (typeof navigator !== 'undefined' && navigator.hardwareConcurrency === undefined) {}\n  // Mock screen API for mobile testing\nif (typeof screen !== 'undefined') {}\n  // Mock window.screen properties for responsive testing\nif (typeof window !== 'undefined' && typeof window.screen !== 'undefined') {}\n  Object.defineProperty(window.screen, 'height', {}\n  // Mock CSS custom properties support\nif (typeof CSS !== 'undefined' && !CSS.supports) {}\n  // Mock CSS.escape\nif (typeof CSS !== 'undefined' && !CSS.escape) {}\n    value: (cssid: string) => cssid.replace(/ [!\"#$%&'()*+,.\\/:;<=>?@[\\\\\\]^``","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/test-setup.ts",["2448"],[]," * Jest Test Setup Configuration\n * Enhanced setup for React Testing Library, ShadCN UI, and accessibility testing;\nimport '@testing-library/jest-dom'\nimport { cleanup } from '@testing-library/ react'\nimport { afterEach, beforeAll, afterAll } from '@jest/globals'\n  // Mock Next.js router\njest.mock('next/ router', () => ({}\n      query: {},\n      asPath: '/',\n      push: jest.fn(),\n      pop: jest.fn(),\n      reload: jest.fn(),\n      back: jest.fn(),\n      prefetch: jest.fn(),\n      beforePopState: jest.fn(),\n      events: {}\n      isFallback: false,\n      isReady: true\n  // Mock Next.js navigation (App Router)\njest.mock('next/ navigation', () => ({}\n  useSearchParams() {}\n  usePathname() {}\n  // Mock framer-motion\njest.mock('framer-motion', () => ({}\n  AnimatePresence: ({ children }: { children: React.ReactNode }) => children,\n  useAnimation: () => ({}\n  useMotionValue: () => ({}\n  // Mock Intersection Observer\nglobal.IntersectionObserver = jest.fn().mockImplementation(() => ({}\n  // Mock ResizeObserver\nglobal.ResizeObserver = jest.fn().mockImplementation(() => ({}\n  // Mock matchMedia for responsive components\nObject.defineProperty(window, 'matchMedia', {}\n  // Mock HTMLElement methods for touch/g esture testing\nObject.defineProperty(HTMLElement.prototype, 'scrollIntoView', {}\nObject.defineProperty(HTMLElement.prototype, 'scroll', {}\nObject.defineProperty(HTMLElement.prototype, 'scrollTo', {}\n// Mock touch events for mobile testing\nconst // TODO: Refactor this function - it may be too long\nmockTouchEvent = (type: string, touches: any[] = []\n  // Extend global with touch event mock\nglobal.TouchEvent = TouchEvent as any\nglobal.mockTouchEvent = mockTouchEvent\n  // Mock Web APIs for PWA testing\nObject.defineProperty(navigator, 'serviceWorker', {}\n      addEventListener: jest.fn(),\n      removeEventListener: jest.fn(),\n      update: jest.fn(),\n      unregister: jest.fn()\n    ready: Promise.resolve({}\n      addEventListener: jest.fn(),\n      removeEventListener: jest.fn(),\n      update: jest.fn(),\n      unregister: jest.fn()\n    controller: null,\n    addEventListener: jest.fn(),\n    removeEventListener: jest.fn()\n  // Mock Notification API\nObject.defineProperty(global, 'Notification', {}\n  // Mock Clipboard API for userEvent\nObject.defineProperty(navigator, 'clipboard', {}\n  // Mock localStorage\nconst localStorageMock = {}\nObject.defineProperty(window, 'localStorage', {}\n  // Mock sessionStorage\nconst sessionStorageMock = {}\nObject.defineProperty(window, 'sessionStorage', {}\n  // Mock URL.createObjectURL for file handling\nObject.defineProperty(URL, 'createObjectURL', {}\nObject.defineProperty(URL, 'revokeObjectURL', {}\n  // Mock canvas for chart components\nHTMLCanvasElement.prototype.getContext = jest.fn(() => ({}\n  getImageData: jest.fn(() => ({ data: new Array(4) })),\n  putImageData: jest.fn(),\n  createImageData: jest.fn(() => []),\n  setTransform: jest.fn(),\n  drawImage: jest.fn(),\n  save: jest.fn(),\n  fillText: jest.fn(),\n  restore: jest.fn(),\n  beginPath: jest.fn(),\n  moveTo: jest.fn(),\n  lineTo: jest.fn(),\n  closePath: jest.fn(),\n  stroke: jest.fn(),\n  translate: jest.fn(),\n  scale: jest.fn(),\n  rotate: jest.fn(),\n  arc: jest.fn(),\n  fill: jest.fn(),\n  measureText: jest.fn(() => ({ width: 0 })),\n  transform: jest.fn(),\n  rect: jest.fn(),\n  clip: jest.fn()\n})) as any\n  // Mock fetch for API testing\nglobal.fetch = jest.fn()\n  // Mock WebSocket for real-time features\nglobal.WebSocket = jest.fn().mockImplementation(() => ({}\n})) as any\n  // Setup/ Teardown\nbeforeAll((\nafterEach((\nafterAll((\n  // Suppress console warnings during tests (except errors)\nconst originalConsoleWarn = console.warn\nconst originalConsoleError = console.error\nbeforeAll((\nafterAll((\n  // Custom matchers for accessibility testing\nexpect.extend({}\n  // Declare custom matcher type\ndeclare global {}","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/utils-backup.ts",["2449"],[],"import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n * Combines clsx and tailwind-merge for optimal class merging\n * This is the recommended utility function for ShadCN/UI components;\n * Format currency values for display;\nexport function formatCurrency(value: number, currency = 'INR'): string {}\n}).format(value)\n * Format date values;\nexport function formatDate(date: Date | string, format: 'short' | 'medium' | 'long' = 'medium'): string {}\n    short: { dateStyle: 'short' },\n    medium: { dateStyle: 'medium' },\n    long: { dateStyle: 'long' }\n  }[format]\n  return new Intl.DateTimeFormat('en-IN', options).format(dateObj)\n * Format time values;\nexport function formatTime(date: Date | string): string {}\n  }).format(dateObj)\n * Debounce function for search and input handling;\nexport function debounce<T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): (...args: Parameters<T>) => void {}\n * Throttle function for scroll and resize handlers;\nexport function throttle<T extends (...args: any[]) => any>(\n  func: T,\n  limit: number\n): (...args: Parameters<T>) => void {}\n * Sleep utility for async operations;\nexport function sleep(ms: number): Promise<void> {}\n * Generate initials from name;\nexport function getInitials(name: string): string {}\n * Truncate text with ellipsis;\nexport function truncate(text: string, length: number): string {}\n * Generate random ID;\nexport function generateId(prefix = 'id'): string {}\n  return `${prefix}_${Math.random().toString(36).substr(2, 9)}``","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/utils.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/pages-backup/_app.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/pages-backup/integration-demo.tsx",["2450"],[],"/**\\n * HASIVU Platform - Integration Demo Page\\n * Demonstrates complete API integration with all ShadCN components\\n */\\n\\n'use client';\\n\\nimport React, { useState, useEffect } from 'react';\\nimport { NextPage } from 'next';\\nimport Head from 'next/head';\\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\\nimport { Button } from '@/components/ui/button';\\nimport { Badge } from '@/components/ui/badge';\\nimport { Separator } from '@/components/ui/separator';\\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\\nimport {\\n  Activity,\\n  ShoppingCart,\\n  BarChart3,\\n  Radio,\\n  Bell,\\n  Wifi,\\n  CheckCircle,\\n  AlertTriangle,\\n  Info\\n} from 'lucide-react';\\n\\n// Import our enhanced components\\nimport { OrderCard } from '@/components/enhanced/OrderCard';\\nimport { MealOrderingForm } from '@/components/enhanced/MealOrderingForm';\\nimport { RealTimeDashboard } from '@/components/enhanced/RealTimeDashboard';\\nimport { RFIDVerificationPanel } from '@/components/enhanced/RFIDVerificationPanel';\\n\\n// Import hooks\\nimport { useAuth, useOrders, useConnectionStatus, useNotifications } from '@/hooks/useApiIntegration';\\nimport { toast } from 'react-hot-toast';\\n\\nconst IntegrationDemoPage: NextPage = () => {\\n  const { user, authenticated } = useAuth();\\n  const { orders, loading: ordersLoading } = useOrders({ limit: 5 });\\n  const { notifications, loading: notificationsLoading } = useNotifications();\\n  const connectionStatus = useConnectionStatus();\\n  \\n  const [activeTab, setActiveTab] = useState('overview');\\n  const [demoStats, setDemoStats] = useState({\\n    totalOrders: 142,\\n    activeUsers: 89,\\n    realTimeEvents: 15,\\n    systemHealth: 98.5,\\n  });\\n  \\n  useEffect(() => {\\n    // Simulate real-time stats updates\\n    const interval = setInterval(() => {\\n      setDemoStats(prev => ({\\n        ...prev,\\n        realTimeEvents: prev.realTimeEvents + Math.floor(Math.random() * 3),\\n        activeUsers: prev.activeUsers + Math.floor(Math.random() * 5) - 2,\\n      }));\\n    }, 5000);\\n    \\n    return () => clearInterval(interval);\\n  }, []);\\n  \\n  const handleOrderComplete = (orderId: string) => {\\n    toast.success(`Order ${orderId.slice(-8)} placed successfully!`);\\n    // In a real app, this would trigger a refetch of orders\\n  };\\n  \\n  const handleOrderUpdate = (order: any) => {\\n    // Handle real-time order updates\\n    console.log('Order updated:', order);\\n  };\\n  \\n  const handleRFIDVerification = (result: any) => {\\n    if (result.verified) {\\n      toast.success(`RFID verified for ${result.studentName}`);\\n    } else {\\n      toast.error('RFID verification failed');\\n    }\\n  };\\n  \\n  return (\\n    <>\\n      <Head>\\n        <title>HASIVU Platform - Integration Demo</title>\\n        <meta name=\\\"description\\\" content=\\\"Complete API integration demonstration with ShadCN components\\\" />\\n        <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n      </Head>\\n      \\n      <div className=\\\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100\\\">\\n        <div className=\\\"container mx-auto px-4 py-8\\\">\\n          {/* Header */}\\n          <div className=\\\"mb-8\\\">\\n            <div className=\\\"flex items-center justify-between mb-4\\\">\\n              <div>\\n                <h1 className=\\\"text-4xl font-bold text-gray-900\\\">\\n                  HASIVU Integration Demo\\n                </h1>\\n                <p className=\\\"text-lg text-gray-600 mt-2\\\">\\n                  Complete ShadCN + API integration showcase\\n                </p>\\n              </div>\\n              \\n              {/* Connection Status */}\\n              <div className=\\\"flex items-center space-x-4\\\">\\n                <div className=\\\"flex items-center space-x-2\\\">\\n                  {connectionStatus.isConnected ? (\\n                    <>\\n                      <Wifi className=\\\"h-5 w-5 text-green-500\\\" />\\n                      <Badge className=\\\"bg-green-100 text-green-800\\\">\\n                        Connected\\n                      </Badge>\\n                    </>\\n                  ) : (\\n                    <>\\n                      <Wifi className=\\\"h-5 w-5 text-red-500\\\" />\\n                      <Badge variant=\\\"destructive\\\">\\n                        Disconnected\\n                      </Badge>\\n                    </>\\n                  )}\\n                </div>\\n                \\n                {authenticated && user && (\\n                  <div className=\\\"text-sm text-gray-600\\\">\\n                    Welcome, {user.firstName}!\\n                  </div>\\n                )}\\n              </div>\\n            </div>\\n            \\n            {/* Integration Status */}\\n            <div className=\\\"grid grid-cols-1 md:grid-cols-4 gap-4\\\">\\n              <Card>\\n                <CardHeader className=\\\"pb-3\\\">\\n                  <CardTitle className=\\\"text-sm font-medium flex items-center\\\">\\n                    <Activity className=\\\"mr-2 h-4 w-4\\\" />\\n                    Real-time Events\\n                  </CardTitle>\\n                </CardHeader>\\n                <CardContent>\\n                  <div className=\\\"text-2xl font-bold\\\">{demoStats.realTimeEvents}</div>\\n                  <p className=\\\"text-xs text-gray-600\\\">Live updates</p>\\n                </CardContent>\\n              </Card>\\n              \\n              <Card>\\n                <CardHeader className=\\\"pb-3\\\">\\n                  <CardTitle className=\\\"text-sm font-medium flex items-center\\\">\\n                    <ShoppingCart className=\\\"mr-2 h-4 w-4\\\" />\\n                    Total Orders\\n                  </CardTitle>\\n                </CardHeader>\\n                <CardContent>\\n                  <div className=\\\"text-2xl font-bold\\\">{demoStats.totalOrders}</div>\\n                  <p className=\\\"text-xs text-gray-600\\\">Platform wide</p>\\n                </CardContent>\\n              </Card>\\n              \\n              <Card>\\n                <CardHeader className=\\\"pb-3\\\">\\n                  <CardTitle className=\\\"text-sm font-medium flex items-center\\\">\\n                    <BarChart3 className=\\\"mr-2 h-4 w-4\\\" />\\n                    Active Users\\n                  </CardTitle>\\n                </CardHeader>\\n                <CardContent>\\n                  <div className=\\\"text-2xl font-bold\\\">{demoStats.activeUsers}</div>\\n                  <p className=\\\"text-xs text-gray-600\\\">Currently online</p>\\n                </CardContent>\\n              </Card>\\n              \\n              <Card>\\n                <CardHeader className=\\\"pb-3\\\">\\n                  <CardTitle className=\\\"text-sm font-medium flex items-center\\\">\\n                    <CheckCircle className=\\\"mr-2 h-4 w-4\\\" />\\n                    System Health\\n                  </CardTitle>\\n                </CardHeader>\\n                <CardContent>\\n                  <div className=\\\"text-2xl font-bold\\\">{demoStats.systemHealth}%</div>\\n                  <p className=\\\"text-xs text-gray-600\\\">All systems operational</p>\\n                </CardContent>\\n              </Card>\\n            </div>\\n          </div>\\n          \\n          {/* Integration Demo Tabs */}\\n          <Tabs value={activeTab} onValueChange={setActiveTab} className=\\\"space-y-6\\\">\\n            <TabsList className=\\\"grid w-full grid-cols-5\\\">\\n              <TabsTrigger value=\\\"overview\\\">Overview</TabsTrigger>\\n              <TabsTrigger value=\\\"ordering\\\">Meal Ordering</TabsTrigger>\\n              <TabsTrigger value=\\\"dashboard\\\">Dashboard</TabsTrigger>\\n              <TabsTrigger value=\\\"rfid\\\">RFID System</TabsTrigger>\\n              <TabsTrigger value=\\\"orders\\\">Order Management</TabsTrigger>\\n            </TabsList>\\n            \\n            {/* Overview Tab */}\\n            <TabsContent value=\\\"overview\\\" className=\\\"space-y-6\\\">\\n              <div className=\\\"grid gap-6 md:grid-cols-2\\\">\\n                {/* Integration Features */}\\n                <Card>\\n                  <CardHeader>\\n                    <CardTitle>🚀 Integration Features</CardTitle>\\n                    <CardDescription>\\n                      Complete API integration capabilities demonstrated\\n                    </CardDescription>\\n                  </CardHeader>\\n                  <CardContent className=\\\"space-y-4\\\">\\n                    <div className=\\\"flex items-center space-x-2\\\">\\n                      <CheckCircle className=\\\"h-4 w-4 text-green-500\\\" />\\n                      <span className=\\\"text-sm\\\">Real-time WebSocket connections</span>\\n                    </div>\\n                    <div className=\\\"flex items-center space-x-2\\\">\\n                      <CheckCircle className=\\\"h-4 w-4 text-green-500\\\" />\\n                      <span className=\\\"text-sm\\\">Optimistic UI updates</span>\\n                    </div>\\n                    <div className=\\\"flex items-center space-x-2\\\">\\n                      <CheckCircle className=\\\"h-4 w-4 text-green-500\\\" />\\n                      <span className=\\\"text-sm\\\">Automatic token refresh</span>\\n                    </div>\\n                    <div className=\\\"flex items-center space-x-2\\\">\\n                      <CheckCircle className=\\\"h-4 w-4 text-green-500\\\" />\\n                      <span className=\\\"text-sm\\\">Error handling & retry logic</span>\\n                    </div>\\n                    <div className=\\\"flex items-center space-x-2\\\">\\n                      <CheckCircle className=\\\"h-4 w-4 text-green-500\\\" />\\n                      <span className=\\\"text-sm\\\">Offline-first capabilities</span>\\n                    </div>\\n                    <div className=\\\"flex items-center space-x-2\\\">\\n                      <CheckCircle className=\\\"h-4 w-4 text-green-500\\\" />\\n                      <span className=\\\"text-sm\\\">Component-level state management</span>\\n                    </div>\\n                    <div className=\\\"flex items-center space-x-2\\\">\\n                      <CheckCircle className=\\\"h-4 w-4 text-green-500\\\" />\\n                      <span className=\\\"text-sm\\\">File upload with progress tracking</span>\\n                    </div>\\n                    <div className=\\\"flex items-center space-x-2\\\">\\n                      <CheckCircle className=\\\"h-4 w-4 text-green-500\\\" />\\n                      <span className=\\\"text-sm\\\">Caching & performance optimization</span>\\n                    </div>\\n                  </CardContent>\\n                </Card>\\n                \\n                {/* API Endpoints */}\\n                <Card>\\n                  <CardHeader>\\n                    <CardTitle>🔗 API Endpoints Integrated</CardTitle>\\n                    <CardDescription>\\n                      All major backend services connected\\n                    </CardDescription>\\n                  </CardHeader>\\n                  <CardContent className=\\\"space-y-4\\\">\\n                    <div className=\\\"grid grid-cols-2 gap-2 text-sm\\\">\\n                      <Badge variant=\\\"outline\\\">Authentication</Badge>\\n                      <Badge variant=\\\"outline\\\">User Management</Badge>\\n                      <Badge variant=\\\"outline\\\">Meal Ordering</Badge>\\n                      <Badge variant=\\\"outline\\\">Order Tracking</Badge>\\n                      <Badge variant=\\\"outline\\\">Payment Processing</Badge>\\n                      <Badge variant=\\\"outline\\\">RFID Verification</Badge>\\n                      <Badge variant=\\\"outline\\\">Notifications</Badge>\\n                      <Badge variant=\\\"outline\\\">Analytics</Badge>\\n                      <Badge variant=\\\"outline\\\">File Uploads</Badge>\\n                      <Badge variant=\\\"outline\\\">Real-time Updates</Badge>\\n                    </div>\\n                  </CardContent>\\n                </Card>\\n              </div>\\n              \\n              {/* Recent Activity */}\\n              <Card>\\n                <CardHeader>\\n                  <CardTitle className=\\\"flex items-center\\\">\\n                    <Bell className=\\\"mr-2 h-5 w-5\\\" />\\n                    Recent Activity & Notifications\\n                  </CardTitle>\\n                </CardHeader>\\n                <CardContent>\\n                  {notificationsLoading ? (\\n                    <div className=\\\"space-y-3\\\">\\n                      {[...Array(3)].map((_, i) => (\\n                        <div key={i} className=\\\"h-12 bg-gray-100 rounded animate-pulse\\\" />\\n                      ))}\\n                    </div>\\n                  ) : notifications && notifications.length > 0 ? (\\n                    <div className=\\\"space-y-3\\\">\\n                      {notifications.slice(0, 5).map((notification: any) => (\\n                        <Alert key={notification.id}>\\n                          <Info className=\\\"h-4 w-4\\\" />\\n                          <AlertTitle>{notification.title}</AlertTitle>\\n                          <AlertDescription className=\\\"text-sm\\\">\\n                            {notification.message}\\n                          </AlertDescription>\\n                        </Alert>\\n                      ))}\\n                    </div>\\n                  ) : (\\n                    <p className=\\\"text-sm text-gray-500 text-center py-4\\\">\\n                      No recent notifications\\n                    </p>\\n                  )}\\n                </CardContent>\\n              </Card>\\n            </TabsContent>\\n            \\n            {/* Meal Ordering Tab */}\\n            <TabsContent value=\\\"ordering\\\" className=\\\"space-y-6\\\">\\n              <Alert>\\n                <Info className=\\\"h-4 w-4\\\" />\\n                <AlertTitle>Live Meal Ordering System</AlertTitle>\\n                <AlertDescription>\\n                  This component demonstrates real-time menu updates, cart management, \\n                  optimistic UI updates, and complete order flow integration.\\n                </AlertDescription>\\n              </Alert>\\n              \\n              <MealOrderingForm \\n                onOrderComplete={handleOrderComplete}\\n                className=\\\"w-full\\\"\\n              />\\n            </TabsContent>\\n            \\n            {/* Dashboard Tab */}\\n            <TabsContent value=\\\"dashboard\\\" className=\\\"space-y-6\\\">\\n              <Alert>\\n                <BarChart3 className=\\\"h-4 w-4\\\" />\\n                <AlertTitle>Real-time Analytics Dashboard</AlertTitle>\\n                <AlertDescription>\\n                  Live dashboard with WebSocket integration, real-time charts, \\n                  and comprehensive analytics from multiple data sources.\\n                </AlertDescription>\\n              </Alert>\\n              \\n              <RealTimeDashboard \\n                userRole={user?.role || 'admin'}\\n                className=\\\"w-full\\\"\\n              />\\n            </TabsContent>\\n            \\n            {/* RFID Tab */}\\n            <TabsContent value=\\\"rfid\\\" className=\\\"space-y-6\\\">\\n              <Alert>\\n                <Radio className=\\\"h-4 w-4\\\" />\\n                <AlertTitle>RFID Verification System</AlertTitle>\\n                <AlertDescription>\\n                  Real-time RFID scanning, verification, and card management \\n                  with live device status monitoring.\\n                </AlertDescription>\\n              </Alert>\\n              \\n              <RFIDVerificationPanel \\n                mode=\\\"verification\\\"\\n                onVerificationComplete={handleRFIDVerification}\\n                className=\\\"w-full\\\"\\n              />\\n            </TabsContent>\\n            \\n            {/* Orders Tab */}\\n            <TabsContent value=\\\"orders\\\" className=\\\"space-y-6\\\">\\n              <Alert>\\n                <ShoppingCart className=\\\"h-4 w-4\\\" />\\n                <AlertTitle>Order Management System</AlertTitle>\\n                <AlertDescription>\\n                  Real-time order tracking, status updates, and comprehensive \\n                  order management with WebSocket integration.\\n                </AlertDescription>\\n              </Alert>\\n              \\n              <div className=\\\"space-y-6\\\">\\n                {ordersLoading ? (\\n                  <div className=\\\"space-y-4\\\">\\n                    {[...Array(3)].map((_, i) => (\\n                      <div key={i} className=\\\"h-64 bg-gray-100 rounded animate-pulse\\\" />\\n                    ))}\\n                  </div>\\n                ) : orders && orders.length > 0 ? (\\n                  <div className=\\\"space-y-4\\\">\\n                    {orders.map((order: any) => (\\n                      <OrderCard\\n                        key={order.id}\\n                        order={order}\\n                        onOrderUpdate={handleOrderUpdate}\\n                        showActions={true}\\n                        className=\\\"w-full\\\"\\n                      />\\n                    ))}\\n                  </div>\\n                ) : (\\n                  <Card>\\n                    <CardContent className=\\\"flex items-center justify-center py-12\\\">\\n                      <div className=\\\"text-center\\\">\\n                        <ShoppingCart className=\\\"h-12 w-12 text-gray-400 mx-auto mb-4\\\" />\\n                        <h3 className=\\\"text-lg font-semibold mb-2\\\">No Orders Found</h3>\\n                        <p className=\\\"text-gray-600\\\">\\n                          Place an order using the Meal Ordering tab to see it here\\n                        </p>\\n                        <Button \\n                          onClick={() => setActiveTab('ordering')}\\n                          className=\\\"mt-4\\\"\\n                        >\\n                          Order Meals\\n                        </Button>\\n                      </div>\\n                    </CardContent>\\n                  </Card>\\n                )}\\n              </div>\\n            </TabsContent>\\n          </Tabs>\\n          \\n          {/* Footer */}\\n          <Separator className=\\\"my-8\\\" />\\n          <div className=\\\"text-center text-sm text-gray-500\\\">\\n            <p>\\n              HASIVU Platform Integration Demo • \\n              Powered by Next.js, ShadCN UI, and comprehensive API integration\\n            </p>\\n            <p className=\\\"mt-2\\\">\\n              Features: Real-time updates • Optimistic UI • Offline support • \\n              Error handling • Performance optimization\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n    </>\\n  );\\n};\\n\\nexport default IntegrationDemoPage;","/Users/mahesha/Downloads/hasivu-platform/web/src/pages-backup/mobile-demo.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/pages-backup/mobile-features-demo.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/pages-backup/offline.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/pages-backup/test-auth-components.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/pages-backup/test-components.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/services/api/hasivu-api.service.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/services/api.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/store/index.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/store/slices/analyticsSlice.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/store/slices/authSlice.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/store/slices/menuSlice.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/store/slices/notificationSlice.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/store/slices/orderSlice.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/store/slices/paymentSlice.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/store/slices/rfidSlice.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/store/slices/uiSlice.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/styles/theme.ts",["2451"],[]," * HASIVU Platform - Material-UI Theme Configuration\n * Comprehensive theme with school-friendly branding and accessibility features\n * Generated by SuperClaude Wave 3: Frontend Implementation;\nimport { createTheme, Theme, PaletteOptions } from '@mui/material/styles';\nimport { alpha } from '@mui/material/styles';\n// Custom color palette for school food delivery platform\nconst colors = {}\n  // Secondary colors - Warm oranges for energy/ appetite\n  secondary: {}\n  // Accent colors for notifications and highlights\n  accent: {}\n  // Neutral grays for UI elements\n  neutral: {}\n  // Background variations\n  background: {}\n  // Text colors with high contrast for accessibility\n  text: {}\n  // Typography system optimized for readability\nconst typography = {}\n  h2\n  h3\n  h4\n  h5\n  h6\n  // Body text styles\n  body1: {}\n  body2: {}\n  // UI text styles\n  button: {}\n  caption: {}\n  overline: {}\n  subtitle1: {}\n  subtitle2: {}\n  // Spacing system (8px base unit)\nconst spacing = {}\n  // Breakpoints for responsive design\nconst breakpoints = {}\n  // Shadow system\nconst shadows = []\n] as any;\n  // Light theme palette\nconst lightPalette: PaletteOptions = {}\n  secondary: {}\n  error: {}\n  warning: {}\n  info: {}\n  success: {}\n  background: {}\n  text: {}\n  divider: colors.neutral[300],\n  grey: colors.neutral\n  // Dark theme palette\nconst darkPalette: PaletteOptions = {}\n  secondary: {}\n  error: {}\n  warning: {}\n  info: {}\n  success: {}\n  background: {}\n  text: {}\n  divider: 'rgba(255, 255, 255, 0.12)'\n  // Base theme configuration\nconst baseTheme = createTheme({}\n  shadows\n  // Component overrides for consistent styling\nconst componentOverrides = {}\n        '&:focus': {}\n      contained\n      outlined\n      sizeLarge: {}\n      sizeSmall: {}\n  // Card overrides\n  MuiCard\n  // Paper overrides\n  MuiPaper\n      elevation1: {}\n      elevation2: {}\n  // TextField overrides\n  MuiTextField\n          '&.Mui-focused .MuiOutlinedInput-notchedOutline': {}\n  // Chip overrides\n  MuiChip\n      filled\n  // AppBar overrides\n  MuiAppBar\n  // Dialog overrides\n  MuiDialog\n  // Menu overrides\n  MuiMenu\n        border: `1px solid ${colors.neutral[200]}``","/Users/mahesha/Downloads/hasivu-platform/web/src/types/auth.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/types/dashboard.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/types/navigation.ts",["2452"],[],"export type UserRole = 'student' | 'parent' | 'admin' | 'kitchen' | 'teacher';\n  icon?: React.ComponentType<{ className?: string }>;\n  badge?: number;\n  roles: UserRole[];\n  children?: NavigationItem[];\n  icon: React.ComponentType<{ className?: string }>;\n  badge?: number;\n  active?: boolean;","/Users/mahesha/Downloads/hasivu-platform/web/src/utils/accessibility.ts",["2453"],[]," * Accessibility Utilities\n * Helper functions for WCAG compliance and accessibility testing;\n * Color contrast calculation utilities;\n * Convert hex color to RGB;\nexport const hexToRgb = (hex: string): [number, number, number] | null => {}\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i .exec(hex);\n  return result\n    ? []\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16)\n      ]\n    : null;\n * Calculate relative luminance of a color;\nexport const getRelativeLuminance = (rgb: [number, number, number]): number => {}\n  return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n * Calculate contrast ratio between two colors;\nexport const getContrastRatio = (color1: string, color2: string): number => {}\n * Check if color combination meets WCAG contrast requirements;\nexport const checkColorContrast = (\n  foreground: string,\n  background: string,\n  isLargeText: boolean = false\n): ColorContrastResult => {}\n  return { ratio, AA, AAA, level };\n * Generate accessibility-compliant color palette;\nexport const // TODO: Refactor this function - it may be too long\ngenerateAccessibleColors = (baseColor: string\n  // Validate all color combinations\n  const validations = Object.entries(colors).map(([name, color]) => ({}\n  return { colors, validations };\n * ARIA utilities;\nexport const generateAriaId = (prefix: string = 'aria'): string => {}\n  return `${prefix}-${Math.random().toString(36).substr(2, 9)}``\n          const label = id ? document.querySelector(`label[for=\"${id}\"]``\n      console.error(`Accessibility test \"${test.name}\" failed with error:``\n  element.style.fontSize = `${scaledFontSize}px``","/Users/mahesha/Downloads/hasivu-platform/web/src/utils/analytics.ts",["2454"],[]," * HASIVU Platform - Analytics Utilities\n * Event tracking, user analytics, and performance monitoring\n * Integrates with Google Analytics and custom analytics solutions;\nimport { ANALYTICS_EVENTS, AnalyticsEvent } from './constants';\n * Analytics event interface;\n * User properties for analytics;\n * E-commerce tracking data;\n * Performance metrics interface;\n * Analytics configuration;\n * Analytics manager class;\n    this.sessionId = this.generateSessionId();\n   * Initialize analytics services;\n  async initialize(): Promise<void> {}\n  // Initialize Hotjar\n      if (this.config.hotjarId) {}\n  // Initialize Mixpanel\n      if (this.config.mixpanelToken) {}\n  // Set up auto-tracking\n      if (this.config.enableAutoTracking) {}\n  // Set up performance tracking\n      if (this.config.enablePerformanceTracking) {}\n  // Set up error tracking\n      if (this.config.enableErrorTracking) {}\n      this.isInitialized = true;\n  // Process queued events\n      this.processEventQueue();\n      if (this.config.debugMode) {}\n   * Track custom event;\n  track(eventData: Partial<AnalyticsEventData>): void {}\n    if (this.config.debugMode) {}\n    if (!this.isInitialized) {}\n  // Send to Google Analytics\n    if (this.config.googleAnalyticsId && typeof gtag !== 'undefined') {}\n  // Send to Mixpanel\n    if (this.config.mixpanelToken && typeof mixpanel !== 'undefined') {}\n  // Send to custom endpoint\n    if (this.config.customEndpoint) {}\n   * Track page view;\n  trackPageView(path: string, title?: string): void {}\n  // Update Google Analytics page view\n    if (this.config.googleAnalyticsId && typeof gtag !== 'undefined') {}\n   * Track user authentication;\n  trackAuth(action: 'login' | 'logout' | 'signup', userId?: string, userProperties?: UserProperties): void {}\n    this.track({}\n   * Track e-commerce events;\n  trackEcommerce(action: 'purchase' | 'add_to_cart' | 'remove_from_cart', data: EcommerceData): void {}\n  // Send to Google Analytics Enhanced Ecommerce\n    if (this.config.googleAnalyticsId && typeof gtag !== 'undefined') {}\n   * Track search events;\n  trackSearch(query: string, results?: number): void {}\n   * Track errors;\n  trackError(error: Error, context?: string): void {}\n   * Track performance metrics;\n  trackPerformance(metrics: PerformanceMetrics): void {}\n  // Send to Google Analytics as custom metrics\n    if (this.config.googleAnalyticsId && typeof gtag !== 'undefined') {}\n   * Set user ID;\n  setUserId(userId?: string): void {}\n    if (this.config.mixpanelToken && typeof mixpanel !== 'undefined' && userId) {}\n   * Clear user ID;\n  clearUserId(): void {}\n   * Set user properties;\n  setUserProperties(properties: UserProperties): void {}\n    if (this.config.mixpanelToken && typeof mixpanel !== 'undefined') {}\n   * Initialize Google Analytics;\n  private async initializeGoogleAnalytics(): Promise<void> {}\n    script1.src = `https://www.googletagmanager.com/g tag/js?id=${this.config.googleAnalyticsId}``\n    script2.innerHTML = ``\n    ``\n    ``\n    return `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}``","/Users/mahesha/Downloads/hasivu-platform/web/src/utils/api.ts",["2455"],[]," * HASIVU Platform - API Utilities\n * Centralized API client with authentication, error handling, and response transformation\n * Built on Axios with interceptors for consistent behavior across the application;\nimport axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse, AxiosError, InternalAxiosRequestConfig } from 'axios';\nimport { getSession } from 'next-auth/react';\nimport toast from 'react-hot-toast';\n * Extended session interface with access token;\n * Extended axios request config with custom properties;\ninterface ExtendedAxiosRequestConfig extends InternalAxiosRequestConfig {}\n * API configuration and constants;\nexport const API_CONFIG = {}\n} as const\n * API response types;\nexport interface ApiResponse<T = any> {}\n * Request configuration interfaces;\nexport interface ApiRequestConfig extends AxiosRequestConfig {}\n * Create and configure the main API client;\n    this.setupInterceptors();\n   * Setup request and response interceptors;\n  private setupInterceptors(): void {}\n  // Add authentication token\n        const session = await getSession() as ExtendedSession;\n        if (session?.accessToken) {}\n          config.headers.Authorization = `Bearer ${session.accessToken}``\n          console.log(`API Request: ${config.method?.toUpperCase()} ${config.url}``\n          console.log(`API Response: ${response.config.method?.toUpperCase()} ${response.config.url}``\n      code: errorData?.code || `HTTP_${status}``\n    return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}``\n        `${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.REFRESH_TOKEN}``\n    getById: (id: string) => apiClient.get(`${API_CONFIG.ENDPOINTS.STUDENTS}/ ${id}``\n    update: (id: string, data: any) => apiClient.put(`${API_CONFIG.ENDPOINTS.STUDENTS}/${id}``\n    delete: (id: string) => apiClient.delete(`${API_CONFIG.ENDPOINTS.STUDENTS}/ ${id}``\n    linkRFID: (studentId: string, rfidData: any) => apiClient.post(`${API_CONFIG.ENDPOINTS.STUDENTS}/${studentId}/ rfid``\n    getById: (id: string) => apiClient.get(`${API_CONFIG.ENDPOINTS.ORDERS}/ ${id}``\n    update: (id: string, data: any) => apiClient.put(`${API_CONFIG.ENDPOINTS.ORDERS}/${id}``\n    cancel: (id: string) => apiClient.patch(`${API_CONFIG.ENDPOINTS.ORDERS}/ ${id}/cancel``\n    track: (id: string) => apiClient.get(`${API_CONFIG.ENDPOINTS.ORDER_TRACKING}/ ${id}``\n    getItemById: (id: string) => apiClient.get(`${API_CONFIG.ENDPOINTS.MENU_ITEMS}/ ${id}``\n    topUpWallet: (amount: number) => apiClient.post(`${API_CONFIG.ENDPOINTS.WALLET}/ topup``\n    getReports: (type: string, params?: any) => apiClient.get(`${API_CONFIG.ENDPOINTS.REPORTS}/ ${type}``\n    markAsRead: (id: string) => apiClient.patch(`${API_CONFIG.ENDPOINTS.NOTIFICATIONS}/ ${id}/read``","/Users/mahesha/Downloads/hasivu-platform/web/src/utils/constants.ts",["2456"],[]," * HASIVU Platform - Application Constants\n * Centralized configuration, constants, and enums for the entire application\n * Provides type-safe constants and configuration management;\n * Application metadata and configuration;\nexport const APP_CONFIG = {}\n  // Feature flags\n  FEATURES: {}\n} as const;\n * User roles and permissions;\nexport const USER_ROLES = {}\n} as const;\nexport type UserRole = typeof USER_ROLES[keyof typeof USER_ROLES];\n * User permissions for role-based access control;\nexport const PERMISSIONS = {}\n} as const;\nexport type Permission = typeof PERMISSIONS[keyof typeof PERMISSIONS];\n * Role-permission mapping;\nexport const ROLE_PERMISSIONS: Record<UserRole, Permission[]> = {}\n * Order status definitions;\nexport const ORDER_STATUS = {}\n} as const;\nexport type OrderStatus = typeof ORDER_STATUS[keyof typeof ORDER_STATUS];\n * Order status labels and colors;\nexport const ORDER_STATUS_CONFIG = {}\n  [ORDER_STATUS.DRAFT]: { label: 'Draft', color: '#757575' },\n  [ORDER_STATUS.PENDING]: { label: 'Pending', color: '#FF9800' },\n  [ORDER_STATUS.CONFIRMED]: { label: \"secure-configuration-value\", color: '#2196F3' },\n  [ORDER_STATUS.PREPARING]: { label: 'Preparing', color: '#FF5722' },\n  [ORDER_STATUS.READY]: { label: 'Ready for Pickup', color: '#9C27B0' },\n  [ORDER_STATUS.PICKED_UP]: { label: 'Picked Up', color: '#3F51B5' },\n  [ORDER_STATUS.DELIVERED]: { label: 'Delivered', color: '#4CAF50' },\n  [ORDER_STATUS.CANCELLED]: { label: 'Cancelled', color: '#F44336' },\n  [ORDER_STATUS.REFUNDED]: { label: 'Refunded', color: '#607D8B' }\n} as const;\n * Payment status definitions;\nexport const PAYMENT_STATUS = {}\n} as const;\nexport type PaymentStatus = typeof PAYMENT_STATUS[keyof typeof PAYMENT_STATUS];\n * Payment method definitions;\nexport const PAYMENT_METHODS = {}\n} as const;\nexport type PaymentMethod = typeof PAYMENT_METHODS[keyof typeof PAYMENT_METHODS];\n * Meal types and timing;\nexport const MEAL_TYPES = {}\n} as const;\nexport type MealType = typeof MEAL_TYPES[keyof typeof MEAL_TYPES];\n * Default meal timings;\nexport const MEAL_TIMINGS = {}\n  [MEAL_TYPES.BREAKFAST]: { start: '07:00', end: '09:00' },\n  [MEAL_TYPES.LUNCH]: { start: '12:00', end: '14:00' },\n  [MEAL_TYPES.DINNER]: { start: '18:00', end: '20:00' },\n  [MEAL_TYPES.SNACKS]: { start: '15:00', end: '17:00' }\n} as const;\n * Dietary preferences and restrictions;\nexport const DIETARY_PREFERENCES = {}\n} as const;\nexport type DietaryPreference = typeof DIETARY_PREFERENCES[keyof typeof DIETARY_PREFERENCES];\n * Common allergies and dietary restrictions;\nexport const ALLERGIES = {}\n} as const;\nexport type Allergy = typeof ALLERGIES[keyof typeof ALLERGIES];\n * Spice levels;\nexport const SPICE_LEVELS = {}\n} as const;\nexport type SpiceLevel = typeof SPICE_LEVELS[keyof typeof SPICE_LEVELS];\n * Business configuration constants;\nexport const BUSINESS_CONFIG = {}\n} as const;\n * API response codes;\nexport const API_CODES = {}\n} as const;\nexport type ApiCode = typeof API_CODES[keyof typeof API_CODES];\n * Notification types;\nexport const NOTIFICATION_TYPES = {}\n} as const;\nexport type NotificationType = typeof NOTIFICATION_TYPES[keyof typeof NOTIFICATION_TYPES];\n * Analytics event types;\nexport const ANALYTICS_EVENTS = {}\n} as const;\nexport type AnalyticsEvent = typeof ANALYTICS_EVENTS[keyof typeof ANALYTICS_EVENTS];\n * Local storage keys;\nexport const STORAGE_KEYS = {}\n} as const;\nexport type StorageKey = typeof STORAGE_KEYS[keyof typeof STORAGE_KEYS];\n * Date and time formats;\nexport const DATE_FORMATS = {}\n} as const;\n * Currency configuration;\nexport const CURRENCY_CONFIG = {}\n} as const;\n * Error messages;\nexport const ERROR_MESSAGES = {}\n} as const;\n * Success messages;\nexport const SUCCESS_MESSAGES = {}\n} as const;\n * Regular expressions for validation;\nexport const REGEX_PATTERNS = {}\n  PHONE_INDIAN: / ^[6-9]\\d{9}$/,\n  RFID_CARD: / ^[A-Fa-f0-9]{8,16}$/,\n  STRONG_PASSWORD: / ^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{}\n}$/,\n  PIN_CODE: / ^[1-9][0-9]{5}$/,\n  STUDENT_ID: / ^[A-Za-z0-9]{6,12}$/,\n  SCHOOL_CODE: / ^[A-Z0-9]{4,8}$/,\n  GST_NUMBER: / ^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$/,\n  IFSC_CODE: / ^[A-Z]{4}0[A-Z0-9]{6}$/,\n  UPI_ID: / ^[\\w.-]+@[\\w.-]+$/,\n  CARD_NUMBER: / ^[0-9]{13,19}$/,\n  CVV: / ^[0-9]{3,4}$;\n} as const;\n * Theme constants;\nexport const THEME_CONFIG = {}\n  // Z-index values\n  Z_INDEX: {}\n} as const;\n * Export all constants as default;\nexport default {}","/Users/mahesha/Downloads/hasivu-platform/web/src/utils/createEmotionCache.ts",["2457"],[]," * HASIVU Platform - Emotion Cache Utility\n * Creates client-side and server-side emotion cache for Material-UI SSR\n * Ensures consistent styling across SSR and client-side rendering;\nimport createCache, { EmotionCache } from '@emotion/cache';\n * Create client-side emotion cache\n * Configures cache for Material-UI components with proper key and insertion point;\n * @returns EmotionCache configured for client-side rendering;\nexport function createEmotionCache(): EmotionCache {}\n  return createCache({}\n * Create server-side emotion cache\n * Used during SSR to collect and serialize emotion styles;\n * @returns EmotionCache configured for server-side rendering;\nexport function createEmotionSsrCache(): EmotionCache {}\n * Extract critical styles from emotion cache\n * Used in _document.tsx to inline critical CSS for better performance;\n * @param cache - Emotion cache instance\n * @returns String of critical CSS styles;\nexport function extractCriticalStyles(cache: EmotionCache): string {}\n * Default emotion cache instance\n * Pre-configured cache for common usage patterns;\nexport const defaultEmotionCache = createEmotionCache();\n * Type definitions for emotion cache utilities;\n * Advanced emotion cache configuration\n * For custom styling requirements or performance optimizations;\n * @param config - Custom emotion cache configuration\n * @returns Configured EmotionCache instance;\nexport function createCustomEmotionCache(config: Partial<EmotionCacheConfig>): EmotionCache {}\n  return createCache({ ...defaultConfig, ...config });\n * Emotion cache utilities for development\n * Debugging helpers and development-specific configurations;\nexport const emotionDevUtils = {}\n   * Clear emotion cache\n   * Useful for hot reloading and development;\n  clearCache: (cache: EmotionCache\n      cache.inserted = {};\n      cache.registered = {};\n * Export types for external usage;\nexport type { EmotionCache };","/Users/mahesha/Downloads/hasivu-platform/web/src/utils/dataMigration.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/utils/formatCurrency.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/utils/helpers.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/utils/index.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/utils/validators.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/blend/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/sprrrint/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/startwell/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/landing/HybridLandingPage.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/landing/SprrrintInspiredLandingPage.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/landing/StartwellInspiredLandingPage.tsx",["2458"],[],"\"use client\";\n\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport {\n  Play,\n  Utensils,\n  Clock,\n  Repeat,\n  Leaf,\n  GraduationCap,\n  ChefHat,\n  Phone,\n  Mail,\n  MapPin,\n  Instagram,\n  Twitter,\n  Linkedin,\n  ArrowRight\n} from 'lucide-react';\n\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';\nimport { Star } from 'lucide-react';\nimport { events } from '@/lib/analytics';\n\n// Startwell-inspired, but original design and copy for HASIVU\n// Bright, friendly, trustworthy, with clear CTAs\n\nconst FeatureItem = ({ icon: Icon, title, description }: { icon: any; title: string; description: string }) => (\n  <div className=\"flex items-start space-x-4\">\n    <div className=\"flex h-12 w-12 shrink-0 items-center justify-center rounded-xl bg-gradient-to-br from-emerald-100 to-emerald-200 text-emerald-700\">\n      <Icon className=\"h-6 w-6\" />\n    </div>\n    <div>\n<h3 className=\"text-lg font-semibold text-ink-900\">{title}</h3>\n<p className=\"text-ink-700\">{description}</p>\n    </div>\n  </div>\n);\n\nconst Pill = ({ children }: { children: React.ReactNode }) => (\n<span className=\"inline-flex items-center rounded-full bg-slate-100 text-ink-700 px-3 py-1 text-xs font-medium border border-slate-200\">\n    {children}\n  </span>\n);\n\nconst testimonials = [\n  {\n    quote: \"HASIVU made school lunches stress-free. My child gets warm meals on time and I can change plans easily!\",\n    author: \"Shalini K.\",\n    title: \"Parent, Grade 4\"\n  },\n  {\n    quote: \"The flexibility to pause or swap meals the night before is a game changer for busy families.\",\n    author: \"Rahul S.\",\n    title: \"Parent, Grade 7\"\n  },\n  {\n    quote: \"Great variety and nutrition. The ordering flow is simple and transparent — love it!\",\n    author: \"Meera R.\",\n    title: \"Parent, Grade 2\"\n  }\n];\n\nexport default function StartwellInspiredLandingPage() {\n  const [videoOpen, setVideoOpen] = useState(false);\n\n  const instagramUrl = process.env.NEXT_PUBLIC_SOCIAL_INSTAGRAM || 'https://instagram.com/hasivu';\n  const twitterUrl = process.env.NEXT_PUBLIC_SOCIAL_TWITTER || 'https://twitter.com/hasivu_official';\n  const linkedinUrl = process.env.NEXT_PUBLIC_SOCIAL_LINKEDIN || 'https://linkedin.com/company/hasivu';\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-white to-slate-50\">\n      {/* Header */}\n      <header className=\"sticky top-0 z-40 w-full border-b border-slate-200/80 bg-white/80 backdrop-blur-xl\">\n        <div className=\"mx-auto max-w-7xl px-4 py-3 flex items-center justify-between\">\n          <Link href=\"/\" className=\"flex items-center space-x-3\">\n            <div className=\"w-10 h-10 rounded-xl bg-gradient-to-br from-emerald-500 to-cyan-500 text-white font-bold grid place-items-center shadow-soft\">H</div>\n            <div className=\"leading-tight\">\n              <div className=\"text-xl font-extrabold tracking-tight bg-gradient-to-r from-emerald-600 via-cyan-600 to-blue-600 bg-clip-text text-transparent\">\n                HASIVU\n              </div>\n<div className=\"text-[11px] text-ink-500 -mt-1\">School Meals Done Right</div>\n            </div>\n          </Link>\n\n          <nav className=\"hidden md:flex items-center space-x-8\">\n<Link href=\"#how\" className=\"text-ink-600 hover:text-ink-900 font-medium\">How it works</Link>\n<Link href=\"#reasons\" className=\"text-ink-600 hover:text-ink-900 font-medium\">Why HASIVU</Link>\n<Link href=\"#faqs\" className=\"text-ink-600 hover:text-ink-900 font-medium\">FAQs</Link>\n<Link href=\"/auth/login\" className=\"text-ink-600 hover:text-ink-900 font-medium\">Login</Link>\n          </nav>\n\n          <div className=\"hidden md:flex items-center space-x-3\">\n<Link href=\"/menu\">\n              <Button\n                variant=\"outline\"\n                className=\"rounded-xl border-emerald-200 text-emerald-700 hover:bg-emerald-50\"\n                onClick={() => events.ctaClick('header_order_online', { location: 'header' })}\n              >\n                Order Online\n              </Button>\n            </Link>\n<Link href=\"/orders\">\n              <Button\n                className=\"rounded-xl bg-gradient-to-r from-emerald-500 to-cyan-500 hover:from-emerald-600 hover:to-cyan-600 shadow-soft\"\n                onClick={() => events.ctaClick('header_manage_subscription', { location: 'header' })}\n              >\n                Manage Subscription\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </header>\n\n      {/* Hero */}\n      <section className=\"relative overflow-hidden\">\n        <div className=\"absolute -top-24 -right-24 h-72 w-72 rounded-full bg-emerald-100 blur-3xl\" />\n        <div className=\"absolute -bottom-24 -left-24 h-72 w-72 rounded-full bg-cyan-100 blur-3xl\" />\n\n        <div className=\"mx-auto max-w-7xl px-4 py-16 md:py-24 grid md:grid-cols-2 gap-10 items-center\">\n          <div>\n            <Badge className=\"mb-4 bg-emerald-100 text-emerald-700 border-emerald-200\">Warm meals at school, on time</Badge>\n<h1 className=\"text-4xl md:text-6xl font-black tracking-tight text-ink-900\">\n              School meals done right\n            </h1>\n<p className=\"mt-4 text-lg md:text-xl text-ink-700 max-w-xl\">\n              Opt for a single meal or subscribe and save. Change, pause or cancel by midnight — full control for busy parents.\n            </p>\n\n            <div className=\"mt-8 flex flex-col sm:flex-row gap-3\">\n<Link href=\"/menu\">\n              <Button\n                size=\"lg\"\n                className=\"rounded-xl px-7 bg-gradient-to-r from-emerald-500 to-cyan-500 hover:from-emerald-600 hover:to-cyan-600 shadow-soft\"\n                onClick={() => events.ctaClick('hero_order_now', { location: 'hero' })}\n              >\n                  Order Now\n                  <ArrowRight className=\"ml-2 h-5 w-5\" />\n                </Button>\n              </Link>\n<Button\n                size=\"lg\"\n                variant=\"outline\"\n                className=\"rounded-xl border-slate-300\"\n                onClick={() => {\n                  events.videoOpen({ location: 'hero' });\n                  setVideoOpen(true);\n                }}\n              >\n                <Play className=\"mr-2 h-5 w-5\" /> Guided Video — How to Order\n              </Button>\n            </div>\n\n            <div className=\"mt-6 flex flex-wrap gap-3\">\n              <Pill>\n                <Utensils className=\"mr-2 h-4 w-4 text-emerald-600\" /> Meals delivered warm to classroom\n              </Pill>\n              <Pill>\n                <Clock className=\"mr-2 h-4 w-4 text-cyan-600\" /> Arrives during recess\n              </Pill>\n              <Pill>\n                <Repeat className=\"mr-2 h-4 w-4 text-blue-600\" /> Pause/cancel until midnight\n              </Pill>\n            </div>\n          </div>\n\n          <div>\n            <Card className=\"rounded-2xl border-slate-200 shadow-medium\">\n              <CardHeader>\n<CardTitle className=\"text-ink-900\">Parents love the flexibility</CardTitle>\n              </CardHeader>\n              <CardContent className=\"grid grid-cols-2 gap-4\">\n                <div className=\"p-4 rounded-xl bg-slate-50 border border-slate-200\">\n                  <div className=\"text-3xl font-black text-emerald-600 mb-1\">4.9★</div>\n<p className=\"text-ink-700 text-sm\">Average parent rating</p>\n                </div>\n                <div className=\"p-4 rounded-xl bg-slate-50 border border-slate-200\">\n                  <div className=\"text-3xl font-black text-cyan-600 mb-1\">99.9%</div>\n<p className=\"text-ink-700 text-sm\">On-time delivery</p>\n                </div>\n                <div className=\"p-4 rounded-xl bg-slate-50 border border-slate-200\">\n                  <div className=\"text-3xl font-black text-blue-600 mb-1\">100%</div>\n<p className=\"text-ink-700 text-sm\">Flexible subscriptions</p>\n                </div>\n                <div className=\"p-4 rounded-xl bg-slate-50 border border-slate-200\">\n                  <div className=\"text-3xl font-black text-purple-600 mb-1\">0</div>\n<p className=\"text-ink-700 text-sm\">Food colorings added</p>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Reasons to choose HASIVU */}\n      <section id=\"reasons\" className=\"mx-auto max-w-7xl px-4 py-12 md:py-16\">\n        <div className=\"grid md:grid-cols-3 gap-8\">\n          <FeatureItem icon={Leaf} title=\"Natural Ingredients\" description=\"Sustainably sourced whole and fresh ingredients. We keep it clean and simple.\" />\n          <FeatureItem icon={GraduationCap} title=\"Designed by Nutritionists\" description=\"Balanced, age-appropriate meals aligned to recommended dietary allowances.\" />\n          <FeatureItem icon={ChefHat} title=\"Prepared by Chefs & Parents\" description=\"A team of chefs and parents ensure variety, taste and safety every day.\" />\n        </div>\n      </section>\n\n      {/* How it works */}\n      <section id=\"how\" className=\"bg-white border-y border-slate-200/70\">\n        <div className=\"mx-auto max-w-7xl px-4 py-16\">\n<h2 className=\"text-3xl md:text-4xl font-black text-ink-900 text-center mb-10\">How it works</h2>\n          <div className=\"grid md:grid-cols-3 gap-6\">\n            <Card className=\"rounded-2xl border-slate-200\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-3 text-ink-900\">\n                  <Utensils className=\"h-5 w-5 text-emerald-600\" />\n                  1. Order Online\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"text-ink-700\">Choose a single meal or subscribe for the week/month. Customize preferences and allergies.</CardContent>\n            </Card>\n            <Card className=\"rounded-2xl border-slate-200\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-3 text-ink-900\">\n                  <Clock className=\"h-5 w-5 text-cyan-600\" />\n                  2. Delivered Warm\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"text-ink-700\">Meals arrive to the classroom just before recess. Packed for freshness and warmth.</CardContent>\n            </Card>\n            <Card className=\"rounded-2xl border-slate-200\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-3 text-ink-900\">\n                  <Repeat className=\"h-5 w-5 text-blue-600\" />\n                  3. Full Flexibility\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"text-ink-700\">Change, pause, or cancel by midnight. Manage everything from your dashboard.</CardContent>\n            </Card>\n          </div>\n          <div className=\"text-center mt-10\">\n<Link href=\"/menu\">\n              <Button\n                size=\"lg\"\n                className=\"rounded-xl bg-gradient-to-r from-emerald-500 to-cyan-500\"\n                onClick={() => events.ctaClick('how_start_order', { location: 'how_it_works' })}\n              >\n                Start an Order\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Testimonials */}\n      <section id=\"testimonials\" className=\"mx-auto max-w-7xl px-4 py-16\">\n        <div className=\"text-center mb-10\">\n          <Badge className=\"mb-3 bg-purple-100 text-purple-700 border-purple-200\">Parents say it best</Badge>\n          <h2 className=\"text-3xl md:text-4xl font-black text-ink-900\">Loved by busy families</h2>\n        </div>\n        <div className=\"grid md:grid-cols-3 gap-6\">\n          {testimonials.map((t, i) => (\n            <Card key={i} className=\"rounded-2xl border-slate-200\">\n              <CardContent className=\"p-6\">\n                <div className=\"flex mb-3\">\n                  {[...Array(5)].map((_, idx) => (\n                    <Star key={idx} className=\"h-4 w-4 text-yellow-400 fill-current\" />\n                  ))}\n                </div>\n                <p className=\"text-ink-700 italic\">“{t.quote}”</p>\n                <div className=\"mt-4 text-sm text-ink-700 font-medium\">{t.author}</div>\n                <div className=\"text-xs text-ink-500\">{t.title}</div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </section>\n\n      {/* Social and contact */}\n      <section id=\"contact\" className=\"mx-auto max-w-7xl px-4 py-16\">\n        <div className=\"grid md:grid-cols-2 gap-8 items-center\">\n          <div>\n            <h3 className=\"text-2xl md:text-3xl font-black text-ink-900\">We feed your kids like our own</h3>\n            <p className=\"mt-3 text-ink-700\">Follow us for menu highlights, behind-the-scenes, and nutrition tips.</p>\n            <div className=\"mt-6 flex gap-3\">\n<a href={instagramUrl} target=\"_blank\" rel=\"noreferrer\" aria-label=\"HASIVU on Instagram\" className=\"inline-flex items-center gap-2 rounded-xl border border-slate-200 px-4 py-2 text-ink-700 hover:bg-slate-50\">\n                <Instagram className=\"h-4 w-4\" /> Instagram\n              </a>\n<a href={twitterUrl} target=\"_blank\" rel=\"noreferrer\" aria-label=\"HASIVU on Twitter\" className=\"inline-flex items-center gap-2 rounded-xl border border-slate-200 px-4 py-2 text-ink-700 hover:bg-slate-50\">\n                <Twitter className=\"h-4 w-4\" /> Twitter\n              </a>\n<a href={linkedinUrl} target=\"_blank\" rel=\"noreferrer\" aria-label=\"HASIVU on LinkedIn\" className=\"inline-flex items-center gap-2 rounded-xl border border-slate-200 px-4 py-2 text-ink-700 hover:bg-slate-50\">\n                <Linkedin className=\"h-4 w-4\" /> LinkedIn\n              </a>\n            </div>\n          </div>\n\n          <Card className=\"rounded-2xl border-slate-200\">\n            <CardHeader>\n              <CardTitle className=\"text-ink-900\">Let's get talking!</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-3 text-ink-700\">\n              <div className=\"flex items-center gap-3\"><Mail className=\"h-4 w-4 text-emerald-600\" aria-hidden=\"true\" /> support@hasivu.com</div>\n              <div className=\"flex items-center gap-3\"><Phone className=\"h-4 w-4 text-cyan-600\" aria-hidden=\"true\" /> +91 91361 47011</div>\n              <div className=\"flex items-center gap-3\"><MapPin className=\"h-4 w-4 text-blue-600\" aria-hidden=\"true\" /> Bangalore, India</div>\n            </CardContent>\n          </Card>\n        </div>\n      </section>\n\n      {/* FAQs */}\n      <section id=\"faqs\" className=\"bg-white border-y border-slate-200/70\">\n        <div className=\"mx-auto max-w-3xl px-4 py-16\">\n          <div className=\"text-center mb-8\">\n            <Badge className=\"mb-3 bg-slate-100 text-ink-700 border-slate-200\">FAQs</Badge>\n            <h2 className=\"text-3xl font-black text-ink-900\">Questions parents ask</h2>\n          </div>\n          <Accordion type=\"single\" collapsible className=\"w-full\">\n            <AccordionItem value=\"item-1\">\n              <AccordionTrigger>Can I pause or cancel a subscription?</AccordionTrigger>\n              <AccordionContent>\n                Yes — change, pause, or cancel meals up to midnight the day before. Your dashboard gives you full control.\n              </AccordionContent>\n            </AccordionItem>\n            <AccordionItem value=\"item-2\">\n              <AccordionTrigger>Are meals delivered warm to classrooms?</AccordionTrigger>\n              <AccordionContent>\n                Meals are prepared fresh and delivered to classrooms just before recess to keep them warm and safe.\n              </AccordionContent>\n            </AccordionItem>\n            <AccordionItem value=\"item-3\">\n              <AccordionTrigger>How do you handle allergies?</AccordionTrigger>\n              <AccordionContent>\n                You can set dietary preferences and allergies during ordering. We filter options and label allergens clearly.\n              </AccordionContent>\n            </AccordionItem>\n          </Accordion>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <footer className=\"border-t border-slate-200/80 bg-white\">\n        <div className=\"mx-auto max-w-7xl px-4 py-8 grid md:grid-cols-3 gap-6 items-center\">\n          <div className=\"text-sm text-ink-700\">© {new Date().getFullYear()} HASIVU</div>\n          <div className=\"flex justify-center gap-6 text-sm\">\n            <Link href=\"/\" className=\"text-ink-700 hover:text-ink-900\">Home</Link>\n            <Link href=\"#faqs\" className=\"text-ink-700 hover:text-ink-900\">FAQs</Link>\n            <Link href=\"/privacy\" className=\"text-ink-700 hover:text-ink-900\">Privacy</Link>\n            <Link href=\"/terms\" className=\"text-ink-700 hover:text-ink-900\">Terms</Link>\n          </div>\n          <div className=\"text-right\">\n<Link href=\"/menu\">\n              <Button\n                size=\"sm\"\n                variant=\"outline\"\n                className=\"rounded-xl\"\n                onClick={() => events.ctaClick('footer_order_now', { location: 'footer' })}\n              >\n                Order Now\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </footer>\n\n      {/* Video Dialog */}\n      <Dialog open={videoOpen} onOpenChange={setVideoOpen}>\n        <DialogContent className=\"sm:max-w-[900px]\">\n          <DialogHeader>\n            <DialogTitle>How to Order</DialogTitle>\n          </DialogHeader>\n          <div className=\"aspect-video w-full rounded-lg overflow-hidden bg-black\">\n            {/* Replace with a real hosted video URL when available */}\n            <video\n              src=\"/videos/how-to-order.mp4\"\n              className=\"w-full h-full\"\n              controls\n              poster=\"/videos/how-to-order-poster.jpg\"\n            />\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","/Users/mahesha/Downloads/hasivu-platform/web/src/lib/analytics.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/components/vendor-marketplace/VendorCard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/components/vendor-marketplace/VendorSearchInterface.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/admin/feature-flags/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/administration/layout.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/analytics/business-intelligence/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/analytics/cross-school/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/analytics/executive-dashboard/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/analytics/federated-learning/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/analytics/orchestrator/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/analytics/payments-dashboard/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/analytics/performance-benchmarking/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/analytics/predictive-insights/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/analytics/real-time-benchmarking/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/analytics/revenue-optimization/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/analytics/strategic-insights/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/auth/change-password/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/auth/check/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/auth/forgot-password/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/auth/login/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/auth/logout/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/auth/profile/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/auth/register/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/auth/reset-password/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/auth/verify-email/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/feature-flags/[key]/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/kitchen/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/nutrition/analyze/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/nutrition/compliance/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/nutrition/optimize-meal/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/nutrition/recommendations/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/nutrition/trends/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/orders/[orderId]/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/orders/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/payments/analytics/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/payments/orders/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/payments/refund/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/payments/verify/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/payments/webhook/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/rfid/bulk-import/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/rfid/cards/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/rfid/delivery-verification/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/rfid/verify/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/schools/[schoolId]/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/schools/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/api/status/route.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/auth/layout.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/auth/loading.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/auth/login/admin/page.tsx",["2459"],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/auth/login/kitchen/page.tsx",["2460"],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/auth/login/parent/page.tsx",["2461"],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/auth/login/vendor/page.tsx",["2462"],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/auth/login-safari/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/daily-menu/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/dashboard/school-admin/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/dashboard/student/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/dashboard/vendor/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/login/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/register/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/app/test-fixes/page.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/DailyMenuDisplay.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/DatePicker.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ErrorBoundary.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/administration/AdminNavigation.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/PasswordStrengthIndicator.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/ProductionLoginForm.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/ProductionRegisterForm.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/SafariCompatibleLoginForm.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/auth/__tests__/LoginForm.test.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/cart/ShoppingCartSidebar.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/checkout/CheckoutFlow.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/currency/CurrencySettings.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/currency/index.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/advanced-visualization-engine.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/ai-powered-insights-platform.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/business-intelligence-dashboard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/index.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/integration-api-layer.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/dashboard/self-service-analytics-interface.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/error-boundary/index.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/KitchenAutomationEngine.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/KitchenPerformanceMetrics.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/KitchenRealTimeMonitor.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/WorkflowColumn.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/WorkflowOrderCard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/__tests__/OrderWorkflowBoard.test.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/config.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/types.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/kitchen/utils.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/landing/LandingPageFeatures.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/landing/LandingPageHero.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/landing/OptimizedLandingPage.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/notifications/CommunicationAnalytics.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/notifications/EmailCommunication.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/notifications/NotificationCenter.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/notifications/NotificationDashboard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/notifications/SMSCommunication.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/notifications/WhatsAppIntegration.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/onboarding/EnhancedOnboardingFlow.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/onboarding/steps/AdminSetupStep.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/onboarding/steps/CompletionStep.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/onboarding/steps/IntegrationTestStep.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/onboarding/steps/RFIDSetupStep.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/onboarding/steps/StakeholderSetupStep.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/orders/OrderCancellationModal.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/orders/OrderCard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/orders/OrderCreationForm.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/payment/PartialPaymentManager.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/payments/BillingDashboard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/payments/PaymentAnalyticsDashboard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/payments/PaymentDashboard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/payments/PaymentForm.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/payments/PaymentSecurityDashboard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/payments/PaymentTestingDashboard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/payments/SubscriptionManagementUI.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/payments/SubscriptionManager.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/reporting/AdvancedReportingDashboard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/reporting/InsightCard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/rfid/DeliveryTracking.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/rfid/DeliveryVerification.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/rfid/ParentDashboard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/rfid/RFIDCardManagement.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/rfid/RFIDScanIndicator.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/security/SecurityDashboard.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/accessible-ui.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/cart-sidebar.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/date-range-picker.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/menu-header.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/menu-search-filter.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/mobile-optimized.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/optimized-background.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/spinner.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/contexts/__tests__/AuthContext.test.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/contexts/enhanced-auth-context.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/contexts/production-auth-context.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/contexts/secure-auth-context.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/contexts/shopping-cart-context.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/__tests__/useAuth.test.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/lib/api/reporting.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/services/nutritional-compliance.types.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/types/business-intelligence.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/types/feature-flags.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/types/json-types.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/types/menu.types.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/types/orders.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/utils/password-validation.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useDailyMenu.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useFeatureFlag.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/services/api/api-client.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/services/auth-api.service.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/services/feature-flag.service.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/types/administration.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/components/ui/use-toast.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useAnalytics.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/src/hooks/useVendorSearch.ts",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/components/vendor-marketplace/VendorAnalytics.tsx",[],[],"/Users/mahesha/Downloads/hasivu-platform/web/components/vendor-marketplace/VendorComparison.tsx",[],[],{"ruleId":"2463","severity":2,"message":"2464","line":19,"column":10,"nodeType":"2465","messageId":"2466","endLine":19,"endColumn":26},{"ruleId":"2463","severity":2,"message":"2467","line":239,"column":3,"nodeType":"2465","messageId":"2466","endLine":239,"endColumn":22},{"ruleId":null,"fatal":true,"severity":2,"message":"2468","line":1184,"column":3,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2469","line":1317,"column":18,"nodeType":null},{"ruleId":"2470","severity":1,"message":"2471","line":64,"column":7,"nodeType":"2472","messageId":"2473","endLine":64,"endColumn":20},{"ruleId":"2470","severity":1,"message":"2471","line":65,"column":7,"nodeType":"2472","messageId":"2473","endLine":65,"endColumn":20},{"ruleId":"2470","severity":1,"message":"2471","line":66,"column":7,"nodeType":"2472","messageId":"2473","endLine":66,"endColumn":20},{"ruleId":"2470","severity":1,"message":"2471","line":67,"column":7,"nodeType":"2472","messageId":"2473","endLine":67,"endColumn":20},{"ruleId":"2470","severity":1,"message":"2471","line":68,"column":7,"nodeType":"2472","messageId":"2473","endLine":68,"endColumn":23},{"ruleId":"2463","severity":2,"message":"2474","line":13,"column":3,"nodeType":"2465","messageId":"2466","endLine":13,"endColumn":7},{"ruleId":"2463","severity":2,"message":"2475","line":87,"column":13,"nodeType":"2465","messageId":"2466","endLine":87,"endColumn":26},{"ruleId":"2476","severity":1,"message":"2477","line":261,"column":24,"nodeType":"2478","messageId":"2479","endLine":261,"endColumn":27,"suggestions":"2480"},{"ruleId":"2463","severity":2,"message":"2481","line":16,"column":3,"nodeType":"2465","messageId":"2466","endLine":16,"endColumn":9},{"ruleId":"2476","severity":1,"message":"2477","line":90,"column":40,"nodeType":"2478","messageId":"2479","endLine":90,"endColumn":43,"suggestions":"2482"},{"ruleId":"2463","severity":2,"message":"2483","line":130,"column":21,"nodeType":"2465","messageId":"2466","endLine":130,"endColumn":29},{"ruleId":"2463","severity":2,"message":"2484","line":130,"column":31,"nodeType":"2465","messageId":"2466","endLine":130,"endColumn":40},{"ruleId":"2463","severity":2,"message":"2485","line":130,"column":42,"nodeType":"2465","messageId":"2466","endLine":130,"endColumn":50},{"ruleId":"2476","severity":1,"message":"2477","line":133,"column":56,"nodeType":"2478","messageId":"2479","endLine":133,"endColumn":59,"suggestions":"2486"},{"ruleId":"2463","severity":2,"message":"2487","line":134,"column":29,"nodeType":"2465","messageId":"2466","endLine":134,"endColumn":49},{"ruleId":"2470","severity":1,"message":"2471","line":179,"column":9,"nodeType":"2472","messageId":"2473","endLine":179,"endColumn":20},{"ruleId":"2470","severity":1,"message":"2471","line":194,"column":9,"nodeType":"2472","messageId":"2473","endLine":194,"endColumn":20},{"ruleId":"2463","severity":2,"message":"2488","line":11,"column":3,"nodeType":"2465","messageId":"2466","endLine":11,"endColumn":13},{"ruleId":"2463","severity":2,"message":"2489","line":15,"column":10,"nodeType":"2465","messageId":"2466","endLine":15,"endColumn":19},{"ruleId":"2470","severity":1,"message":"2471","line":137,"column":13,"nodeType":"2472","messageId":"2473","endLine":137,"endColumn":24},{"ruleId":"2463","severity":2,"message":"2490","line":16,"column":3,"nodeType":"2465","messageId":"2466","endLine":16,"endColumn":9},{"ruleId":"2463","severity":2,"message":"2474","line":18,"column":3,"nodeType":"2465","messageId":"2466","endLine":18,"endColumn":7},{"ruleId":"2463","severity":2,"message":"2491","line":19,"column":3,"nodeType":"2465","messageId":"2466","endLine":19,"endColumn":10},{"ruleId":"2463","severity":2,"message":"2492","line":3,"column":68,"nodeType":"2465","messageId":"2466","endLine":3,"endColumn":77},{"ruleId":"2463","severity":2,"message":"2493","line":9,"column":3,"nodeType":"2465","messageId":"2466","endLine":9,"endColumn":10},{"ruleId":"2463","severity":2,"message":"2494","line":15,"column":3,"nodeType":"2465","messageId":"2466","endLine":15,"endColumn":6},{"ruleId":"2463","severity":2,"message":"2495","line":16,"column":3,"nodeType":"2465","messageId":"2466","endLine":16,"endColumn":7},{"ruleId":"2463","severity":2,"message":"2496","line":18,"column":3,"nodeType":"2465","messageId":"2466","endLine":18,"endColumn":10},{"ruleId":"2463","severity":2,"message":"2497","line":19,"column":3,"nodeType":"2465","messageId":"2466","endLine":19,"endColumn":10},{"ruleId":"2498","severity":2,"message":"2499","line":50,"column":7,"nodeType":"2500","messageId":"2501","endLine":50,"endColumn":20,"suggestions":"2502"},{"ruleId":"2498","severity":2,"message":"2499","line":52,"column":9,"nodeType":"2500","messageId":"2501","endLine":52,"endColumn":22,"suggestions":"2503"},{"ruleId":"2498","severity":2,"message":"2499","line":61,"column":7,"nodeType":"2500","messageId":"2501","endLine":61,"endColumn":20,"suggestions":"2504"},{"ruleId":"2498","severity":2,"message":"2499","line":71,"column":7,"nodeType":"2500","messageId":"2501","endLine":71,"endColumn":20,"suggestions":"2505"},{"ruleId":"2498","severity":2,"message":"2499","line":73,"column":9,"nodeType":"2500","messageId":"2501","endLine":73,"endColumn":22,"suggestions":"2506"},{"ruleId":"2498","severity":2,"message":"2499","line":105,"column":9,"nodeType":"2500","messageId":"2501","endLine":105,"endColumn":22,"suggestions":"2507"},{"ruleId":"2498","severity":2,"message":"2499","line":107,"column":11,"nodeType":"2500","messageId":"2501","endLine":107,"endColumn":24,"suggestions":"2508"},{"ruleId":"2470","severity":1,"message":"2471","line":133,"column":9,"nodeType":"2472","messageId":"2473","endLine":133,"endColumn":21},{"ruleId":"2463","severity":2,"message":"2509","line":159,"column":21,"nodeType":"2465","messageId":"2466","endLine":159,"endColumn":33},{"ruleId":"2498","severity":2,"message":"2499","line":163,"column":5,"nodeType":"2500","messageId":"2501","endLine":163,"endColumn":18,"suggestions":"2510"},{"ruleId":"2463","severity":2,"message":"2511","line":3,"column":51,"nodeType":"2465","messageId":"2466","endLine":3,"endColumn":57},{"ruleId":"2463","severity":2,"message":"2512","line":15,"column":3,"nodeType":"2465","messageId":"2466","endLine":15,"endColumn":11},{"ruleId":"2463","severity":2,"message":"2496","line":23,"column":3,"nodeType":"2465","messageId":"2466","endLine":23,"endColumn":10},{"ruleId":"2463","severity":2,"message":"2513","line":25,"column":3,"nodeType":"2465","messageId":"2466","endLine":25,"endColumn":13},{"ruleId":"2463","severity":2,"message":"2514","line":27,"column":3,"nodeType":"2465","messageId":"2466","endLine":27,"endColumn":8},{"ruleId":"2476","severity":1,"message":"2477","line":56,"column":10,"nodeType":"2478","messageId":"2479","endLine":56,"endColumn":13,"suggestions":"2515"},{"ruleId":"2470","severity":1,"message":"2471","line":129,"column":7,"nodeType":"2472","messageId":"2473","endLine":129,"endColumn":20},{"ruleId":"2470","severity":1,"message":"2471","line":139,"column":7,"nodeType":"2472","messageId":"2473","endLine":139,"endColumn":20},{"ruleId":"2470","severity":1,"message":"2471","line":152,"column":7,"nodeType":"2472","messageId":"2473","endLine":152,"endColumn":20},{"ruleId":"2470","severity":1,"message":"2471","line":170,"column":9,"nodeType":"2472","messageId":"2473","endLine":170,"endColumn":22},{"ruleId":"2470","severity":1,"message":"2471","line":193,"column":7,"nodeType":"2472","messageId":"2473","endLine":193,"endColumn":20},{"ruleId":"2470","severity":1,"message":"2471","line":238,"column":7,"nodeType":"2472","messageId":"2473","endLine":238,"endColumn":20},{"ruleId":"2470","severity":1,"message":"2471","line":271,"column":7,"nodeType":"2472","messageId":"2473","endLine":271,"endColumn":20},{"ruleId":"2470","severity":1,"message":"2471","line":297,"column":9,"nodeType":"2472","messageId":"2473","endLine":297,"endColumn":22},{"ruleId":"2470","severity":1,"message":"2471","line":340,"column":7,"nodeType":"2472","messageId":"2473","endLine":340,"endColumn":20},{"ruleId":"2476","severity":1,"message":"2477","line":787,"column":55,"nodeType":"2478","messageId":"2479","endLine":787,"endColumn":58,"suggestions":"2516"},{"ruleId":"2470","severity":1,"message":"2471","line":798,"column":7,"nodeType":"2472","messageId":"2473","endLine":798,"endColumn":20},{"ruleId":"2463","severity":2,"message":"2517","line":11,"column":3,"nodeType":"2465","messageId":"2466","endLine":11,"endColumn":9},{"ruleId":"2463","severity":2,"message":"2518","line":15,"column":3,"nodeType":"2465","messageId":"2466","endLine":15,"endColumn":14},{"ruleId":"2463","severity":2,"message":"2497","line":20,"column":3,"nodeType":"2465","messageId":"2466","endLine":20,"endColumn":10},{"ruleId":"2470","severity":1,"message":"2471","line":101,"column":9,"nodeType":"2472","messageId":"2473","endLine":101,"endColumn":22},{"ruleId":"2498","severity":2,"message":"2499","line":321,"column":11,"nodeType":"2500","messageId":"2501","endLine":321,"endColumn":64,"suggestions":"2519"},{"ruleId":"2470","severity":1,"message":"2471","line":386,"column":9,"nodeType":"2472","messageId":"2473","endLine":386,"endColumn":21},{"ruleId":"2463","severity":2,"message":"2520","line":17,"column":3,"nodeType":"2465","messageId":"2466","endLine":17,"endColumn":9},{"ruleId":"2463","severity":2,"message":"2521","line":18,"column":3,"nodeType":"2465","messageId":"2466","endLine":18,"endColumn":11},{"ruleId":"2463","severity":2,"message":"2522","line":23,"column":3,"nodeType":"2465","messageId":"2466","endLine":23,"endColumn":8},{"ruleId":"2476","severity":1,"message":"2477","line":31,"column":9,"nodeType":"2478","messageId":"2479","endLine":31,"endColumn":12,"suggestions":"2523"},{"ruleId":"2476","severity":1,"message":"2477","line":43,"column":9,"nodeType":"2478","messageId":"2479","endLine":43,"endColumn":12,"suggestions":"2524"},{"ruleId":"2476","severity":1,"message":"2477","line":152,"column":38,"nodeType":"2478","messageId":"2479","endLine":152,"endColumn":41,"suggestions":"2525"},{"ruleId":"2476","severity":1,"message":"2477","line":173,"column":45,"nodeType":"2478","messageId":"2479","endLine":173,"endColumn":48,"suggestions":"2526"},{"ruleId":"2470","severity":1,"message":"2471","line":266,"column":7,"nodeType":"2472","messageId":"2473","endLine":266,"endColumn":20},{"ruleId":"2476","severity":1,"message":"2477","line":274,"column":11,"nodeType":"2478","messageId":"2479","endLine":274,"endColumn":14,"suggestions":"2527"},{"ruleId":"2470","severity":1,"message":"2471","line":304,"column":7,"nodeType":"2472","messageId":"2473","endLine":304,"endColumn":20},{"ruleId":"2470","severity":1,"message":"2471","line":355,"column":11,"nodeType":"2472","messageId":"2473","endLine":355,"endColumn":24},{"ruleId":"2470","severity":1,"message":"2471","line":370,"column":7,"nodeType":"2472","messageId":"2473","endLine":370,"endColumn":20},{"ruleId":"2470","severity":1,"message":"2471","line":393,"column":7,"nodeType":"2472","messageId":"2473","endLine":393,"endColumn":20},{"ruleId":"2470","severity":1,"message":"2471","line":403,"column":7,"nodeType":"2472","messageId":"2473","endLine":403,"endColumn":20},{"ruleId":"2470","severity":1,"message":"2471","line":414,"column":7,"nodeType":"2472","messageId":"2473","endLine":414,"endColumn":20},{"ruleId":"2470","severity":1,"message":"2471","line":454,"column":7,"nodeType":"2472","messageId":"2473","endLine":454,"endColumn":20},{"ruleId":"2476","severity":1,"message":"2477","line":461,"column":11,"nodeType":"2478","messageId":"2479","endLine":461,"endColumn":14,"suggestions":"2528"},{"ruleId":"2470","severity":1,"message":"2471","line":469,"column":7,"nodeType":"2472","messageId":"2473","endLine":469,"endColumn":20},{"ruleId":"2470","severity":1,"message":"2471","line":478,"column":7,"nodeType":"2472","messageId":"2473","endLine":478,"endColumn":20},{"ruleId":"2463","severity":2,"message":"2511","line":3,"column":51,"nodeType":"2465","messageId":"2466","endLine":3,"endColumn":57},{"ruleId":"2463","severity":2,"message":"2481","line":17,"column":3,"nodeType":"2465","messageId":"2466","endLine":17,"endColumn":9},{"ruleId":"2463","severity":2,"message":"2512","line":22,"column":3,"nodeType":"2465","messageId":"2466","endLine":22,"endColumn":11},{"ruleId":"2463","severity":2,"message":"2529","line":23,"column":3,"nodeType":"2465","messageId":"2466","endLine":23,"endColumn":10},{"ruleId":"2463","severity":2,"message":"2530","line":25,"column":3,"nodeType":"2465","messageId":"2466","endLine":25,"endColumn":6},{"ruleId":"2463","severity":2,"message":"2522","line":26,"column":3,"nodeType":"2465","messageId":"2466","endLine":26,"endColumn":8},{"ruleId":"2463","severity":2,"message":"2531","line":27,"column":3,"nodeType":"2465","messageId":"2466","endLine":27,"endColumn":11},{"ruleId":"2476","severity":1,"message":"2477","line":34,"column":54,"nodeType":"2478","messageId":"2479","endLine":34,"endColumn":57,"suggestions":"2532"},{"ruleId":"2470","severity":1,"message":"2471","line":84,"column":7,"nodeType":"2472","messageId":"2473","endLine":84,"endColumn":20},{"ruleId":"2498","severity":2,"message":"2499","line":108,"column":7,"nodeType":"2500","messageId":"2501","endLine":108,"endColumn":66,"suggestions":"2533"},{"ruleId":"2498","severity":2,"message":"2499","line":122,"column":5,"nodeType":"2500","messageId":"2501","endLine":122,"endColumn":18,"suggestions":"2534"},{"ruleId":"2470","severity":1,"message":"2471","line":173,"column":7,"nodeType":"2472","messageId":"2473","endLine":173,"endColumn":20},{"ruleId":"2470","severity":1,"message":"2471","line":205,"column":7,"nodeType":"2472","messageId":"2473","endLine":205,"endColumn":20},{"ruleId":"2470","severity":1,"message":"2471","line":231,"column":7,"nodeType":"2472","messageId":"2473","endLine":231,"endColumn":20},{"ruleId":"2476","severity":1,"message":"2477","line":249,"column":50,"nodeType":"2478","messageId":"2479","endLine":249,"endColumn":53,"suggestions":"2535"},{"ruleId":"2470","severity":1,"message":"2471","line":277,"column":7,"nodeType":"2472","messageId":"2473","endLine":277,"endColumn":20},{"ruleId":"2470","severity":1,"message":"2471","line":297,"column":7,"nodeType":"2472","messageId":"2473","endLine":297,"endColumn":20},{"ruleId":"2498","severity":2,"message":"2499","line":324,"column":9,"nodeType":"2500","messageId":"2501","endLine":324,"endColumn":66,"suggestions":"2536"},{"ruleId":"2498","severity":2,"message":"2499","line":326,"column":11,"nodeType":"2500","messageId":"2501","endLine":326,"endColumn":24,"suggestions":"2537"},{"ruleId":"2470","severity":1,"message":"2471","line":346,"column":9,"nodeType":"2472","messageId":"2473","endLine":346,"endColumn":21},{"ruleId":"2463","severity":2,"message":"2538","line":434,"column":21,"nodeType":"2465","messageId":"2466","endLine":434,"endColumn":35},{"ruleId":"2470","severity":1,"message":"2471","line":498,"column":7,"nodeType":"2472","messageId":"2473","endLine":498,"endColumn":20},{"ruleId":"2463","severity":2,"message":"2539","line":6,"column":10,"nodeType":"2465","messageId":"2466","endLine":6,"endColumn":15},{"ruleId":"2463","severity":2,"message":"2540","line":13,"column":3,"nodeType":"2465","messageId":"2466","endLine":13,"endColumn":10},{"ruleId":"2463","severity":2,"message":"2481","line":14,"column":3,"nodeType":"2465","messageId":"2466","endLine":14,"endColumn":9},{"ruleId":"2463","severity":2,"message":"2518","line":18,"column":3,"nodeType":"2465","messageId":"2466","endLine":18,"endColumn":14},{"ruleId":"2470","severity":1,"message":"2471","line":209,"column":9,"nodeType":"2472","messageId":"2473","endLine":209,"endColumn":22},{"ruleId":"2476","severity":1,"message":"2477","line":267,"column":40,"nodeType":"2478","messageId":"2479","endLine":267,"endColumn":43,"suggestions":"2541"},{"ruleId":"2470","severity":1,"message":"2471","line":401,"column":9,"nodeType":"2472","messageId":"2473","endLine":401,"endColumn":20},{"ruleId":"2470","severity":1,"message":"2471","line":410,"column":9,"nodeType":"2472","messageId":"2473","endLine":410,"endColumn":22},{"ruleId":"2470","severity":1,"message":"2471","line":531,"column":7,"nodeType":"2472","messageId":"2473","endLine":531,"endColumn":20},{"ruleId":"2463","severity":2,"message":"2542","line":9,"column":41,"nodeType":"2465","messageId":"2466","endLine":9,"endColumn":54},{"ruleId":"2463","severity":2,"message":"2543","line":11,"column":10,"nodeType":"2465","messageId":"2466","endLine":11,"endColumn":21},{"ruleId":"2463","severity":2,"message":"2544","line":15,"column":3,"nodeType":"2465","messageId":"2466","endLine":15,"endColumn":8},{"ruleId":"2463","severity":2,"message":"2545","line":17,"column":3,"nodeType":"2465","messageId":"2466","endLine":17,"endColumn":8},{"ruleId":"2463","severity":2,"message":"2546","line":18,"column":3,"nodeType":"2465","messageId":"2466","endLine":18,"endColumn":15},{"ruleId":"2463","severity":2,"message":"2547","line":20,"column":3,"nodeType":"2465","messageId":"2466","endLine":20,"endColumn":16},{"ruleId":"2463","severity":2,"message":"2548","line":24,"column":3,"nodeType":"2465","messageId":"2466","endLine":24,"endColumn":13},{"ruleId":"2463","severity":2,"message":"2549","line":26,"column":3,"nodeType":"2465","messageId":"2466","endLine":26,"endColumn":16},{"ruleId":"2463","severity":2,"message":"2550","line":27,"column":3,"nodeType":"2465","messageId":"2466","endLine":27,"endColumn":9},{"ruleId":"2463","severity":2,"message":"2513","line":28,"column":3,"nodeType":"2465","messageId":"2466","endLine":28,"endColumn":13},{"ruleId":"2463","severity":2,"message":"2551","line":8,"column":37,"nodeType":"2465","messageId":"2466","endLine":8,"endColumn":41},{"ruleId":"2463","severity":2,"message":"2552","line":8,"column":43,"nodeType":"2465","messageId":"2466","endLine":8,"endColumn":48},{"ruleId":"2463","severity":2,"message":"2553","line":8,"column":50,"nodeType":"2465","messageId":"2466","endLine":8,"endColumn":56},{"ruleId":"2463","severity":2,"message":"2554","line":9,"column":16,"nodeType":"2465","messageId":"2466","endLine":9,"endColumn":27},{"ruleId":"2463","severity":2,"message":"2555","line":10,"column":10,"nodeType":"2465","messageId":"2466","endLine":10,"endColumn":16},{"ruleId":"2463","severity":2,"message":"2539","line":11,"column":10,"nodeType":"2465","messageId":"2466","endLine":11,"endColumn":15},{"ruleId":"2476","severity":1,"message":"2477","line":60,"column":33,"nodeType":"2478","messageId":"2479","endLine":60,"endColumn":36,"suggestions":"2556"},{"ruleId":"2476","severity":1,"message":"2477","line":97,"column":30,"nodeType":"2478","messageId":"2479","endLine":97,"endColumn":33,"suggestions":"2557"},{"ruleId":"2463","severity":2,"message":"2558","line":121,"column":31,"nodeType":"2465","messageId":"2466","endLine":121,"endColumn":36},{"ruleId":"2476","severity":1,"message":"2477","line":196,"column":9,"nodeType":"2478","messageId":"2479","endLine":196,"endColumn":12,"suggestions":"2559"},{"ruleId":"2476","severity":1,"message":"2477","line":197,"column":23,"nodeType":"2478","messageId":"2479","endLine":197,"endColumn":26,"suggestions":"2560"},{"ruleId":"2476","severity":1,"message":"2477","line":198,"column":28,"nodeType":"2478","messageId":"2479","endLine":198,"endColumn":31,"suggestions":"2561"},{"ruleId":"2476","severity":1,"message":"2477","line":199,"column":25,"nodeType":"2478","messageId":"2479","endLine":199,"endColumn":28,"suggestions":"2562"},{"ruleId":"2463","severity":2,"message":"2563","line":124,"column":39,"nodeType":"2465","messageId":"2466","endLine":124,"endColumn":58},{"ruleId":"2463","severity":2,"message":"2564","line":377,"column":81,"nodeType":"2465","messageId":"2466","endLine":377,"endColumn":97},{"ruleId":"2463","severity":2,"message":"2564","line":454,"column":61,"nodeType":"2465","messageId":"2466","endLine":454,"endColumn":77},{"ruleId":"2463","severity":2,"message":"2565","line":553,"column":10,"nodeType":"2465","messageId":"2466","endLine":553,"endColumn":20},{"ruleId":"2463","severity":2,"message":"2566","line":553,"column":22,"nodeType":"2465","messageId":"2466","endLine":553,"endColumn":35},{"ruleId":"2463","severity":2,"message":"2567","line":556,"column":54,"nodeType":"2465","messageId":"2466","endLine":556,"endColumn":86},{"ruleId":"2463","severity":2,"message":"2568","line":570,"column":11,"nodeType":"2465","messageId":"2466","endLine":570,"endColumn":21},{"ruleId":"2476","severity":1,"message":"2477","line":577,"column":47,"nodeType":"2478","messageId":"2479","endLine":577,"endColumn":50,"suggestions":"2569"},{"ruleId":"2463","severity":2,"message":"2564","line":577,"column":52,"nodeType":"2465","messageId":"2466","endLine":577,"endColumn":68},{"ruleId":"2463","severity":2,"message":"2570","line":419,"column":10,"nodeType":"2465","messageId":"2466","endLine":419,"endColumn":19},{"ruleId":"2463","severity":2,"message":"2571","line":99,"column":9,"nodeType":"2465","messageId":"2466","endLine":99,"endColumn":21},{"ruleId":"2463","severity":2,"message":"2553","line":14,"column":3,"nodeType":"2465","messageId":"2466","endLine":14,"endColumn":9},{"ruleId":"2463","severity":2,"message":"2572","line":17,"column":3,"nodeType":"2465","messageId":"2466","endLine":17,"endColumn":10},{"ruleId":"2463","severity":2,"message":"2573","line":22,"column":3,"nodeType":"2465","messageId":"2466","endLine":22,"endColumn":17},{"ruleId":"2463","severity":2,"message":"2574","line":218,"column":9,"nodeType":"2465","messageId":"2466","endLine":218,"endColumn":21},{"ruleId":null,"fatal":true,"severity":2,"message":"2575","line":847,"column":18,"nodeType":null},{"ruleId":"2463","severity":2,"message":"2576","line":7,"column":26,"nodeType":"2465","messageId":"2466","endLine":7,"endColumn":35},{"ruleId":"2463","severity":2,"message":"2577","line":11,"column":3,"nodeType":"2465","messageId":"2466","endLine":11,"endColumn":16},{"ruleId":"2463","severity":2,"message":"2578","line":57,"column":35,"nodeType":"2465","messageId":"2466","endLine":57,"endColumn":61},{"ruleId":"2463","severity":2,"message":"2579","line":777,"column":13,"nodeType":"2465","messageId":"2466","endLine":777,"endColumn":29},{"ruleId":null,"fatal":true,"severity":2,"message":"2468","line":8,"column":0,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2580","line":1,"column":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2580","line":1,"column":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2580","line":1,"column":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2580","line":1,"column":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2580","line":1,"column":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2580","line":1,"column":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2580","line":4,"column":11,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2468","line":5,"column":0,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2581","line":6,"column":4,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2580","line":1,"column":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2582","line":8,"column":2,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2580","line":1,"column":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2580","line":1,"column":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2580","line":1,"column":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2580","line":1,"column":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2580","line":1,"column":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2580","line":1,"column":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2580","line":1,"column":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2580","line":3,"column":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2583","line":1,"column":121,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2580","line":1,"column":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2580","line":2,"column":7,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2580","line":1,"column":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2580","line":1,"column":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2580","line":1,"column":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2580","line":1,"column":1,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2580","line":1,"column":1,"nodeType":null},{"ruleId":"2476","severity":1,"message":"2477","line":33,"column":66,"nodeType":"2478","messageId":"2479","endLine":33,"endColumn":69,"suggestions":"2584"},{"ruleId":null,"fatal":true,"severity":2,"message":"2585","line":34,"column":54,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2468","line":45,"column":0,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2468","line":45,"column":0,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"2468","line":45,"column":0,"nodeType":null},"@typescript-eslint/no-unused-vars","'ROLE_PERMISSIONS' is defined but never used.","Identifier","unusedVar","'requiredPermissions' is assigned a value but never used.","Parsing error: Declaration or statement expected.","Parsing error: Expected corresponding JSX closing tag for 'Tabs'.","no-console","Unexpected console statement.","MemberExpression","unexpected","'Bell' is defined but never used.","'currentHeight' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["2586","2587"],"'Signal' is defined but never used.",["2588","2589"],"'isTablet' is assigned a value but never used.","'isDesktop' is assigned a value but never used.","'safeArea' is assigned a value but never used.",["2590","2591"],"'setNotificationCount' is assigned a value but never used.","'SheetClose' is defined but never used.","'Separator' is defined but never used.","'Wallet' is defined but never used.","'History' is defined but never used.","'ReactNode' is defined but never used.","'Loader2' is defined but never used.","'Sun' is defined but never used.","'Moon' is defined but never used.","'VolumeX' is defined but never used.","'Vibrate' is defined but never used.","@typescript-eslint/ban-ts-comment","Use \"@ts-expect-error\" instead of \"@ts-ignore\", as \"@ts-ignore\" will do nothing if the following line is error-free.","Line","tsIgnoreInsteadOfExpectError",["2592"],["2593"],["2594"],["2595"],["2596"],["2597"],["2598"],"'setDataUsage' is assigned a value but never used.",["2599"],"'useRef' is defined but never used.","'Settings' is defined but never used.","'Smartphone' is defined but never used.","'Check' is defined but never used.",["2600","2601"],["2602","2603"],"'QrCode' is defined but never used.","'CheckCircle' is defined but never used.",["2604"],"'Upload' is defined but never used.","'Download' is defined but never used.","'Cloud' is defined but never used.",["2605","2606"],["2607","2608"],["2609","2610"],["2611","2612"],["2613","2614"],["2615","2616"],"'Monitor' is defined but never used.","'Zap' is defined but never used.","'CloudOff' is defined but never used.",["2617","2618"],["2619"],["2620"],["2621","2622"],["2623"],["2624"],"'connectionType' is assigned a value but never used.","'Badge' is defined but never used.","'Battery' is defined but never used.",["2625","2626"],"'PullToRefresh' is defined but never used.","'ShareButton' is defined but never used.","'Users' is defined but never used.","'Heart' is defined but never used.","'ShoppingCart' is defined but never used.","'AlertTriangle' is defined but never used.","'ArrowRight' is defined but never used.","'MessageCircle' is defined but never used.","'Camera' is defined but never used.","'Star' is defined but never used.","'Clock' is defined but never used.","'MapPin' is defined but never used.","'CardContent' is defined but never used.","'Button' is defined but never used.",["2627","2628"],["2629","2630"],"'index' is defined but never used. Allowed unused args must match /^_/u.",["2631","2632"],["2633","2634"],["2635","2636"],["2637","2638"],"'e' is defined but never used. Allowed unused args must match /^_/u.","'velocity' is defined but never used. Allowed unused args must match /^_/u.","'isDragging' is assigned a value but never used.","'setIsDragging' is assigned a value but never used.","'center' is defined but never used. Allowed unused args must match /^_/u.","'pinchState' is assigned a value but never used.",["2639","2640"],"'isFocused' is assigned a value but never used.","'scrollToItem' is assigned a value but never used.","'XCircle' is defined but never used.","'MoreHorizontal' is defined but never used.","'dragControls' is assigned a value but never used.","Parsing error: Expected corresponding JSX closing tag for 'TabsContent'.","'fireEvent' is defined but never used.","'CommandDialog' is defined but never used.","'errorInfo' is defined but never used. Allowed unused args must match /^_/u.","'initialListeners' is assigned a value but never used.","Parsing error: Expression expected.","Parsing error: Identifier expected. 'const' is a reserved word that cannot be used here.","Parsing error: ',' expected.","Parsing error: Invalid character.",["2641","2642"],"Parsing error: Unexpected keyword or identifier.",{"messageId":"2643","fix":"2644","desc":"2645"},{"messageId":"2646","fix":"2647","desc":"2648"},{"messageId":"2643","fix":"2649","desc":"2645"},{"messageId":"2646","fix":"2650","desc":"2648"},{"messageId":"2643","fix":"2651","desc":"2645"},{"messageId":"2646","fix":"2652","desc":"2648"},{"messageId":"2653","fix":"2654","desc":"2655"},{"messageId":"2653","fix":"2656","desc":"2655"},{"messageId":"2653","fix":"2657","desc":"2655"},{"messageId":"2653","fix":"2658","desc":"2655"},{"messageId":"2653","fix":"2659","desc":"2655"},{"messageId":"2653","fix":"2660","desc":"2655"},{"messageId":"2653","fix":"2661","desc":"2655"},{"messageId":"2653","fix":"2662","desc":"2655"},{"messageId":"2643","fix":"2663","desc":"2645"},{"messageId":"2646","fix":"2664","desc":"2648"},{"messageId":"2643","fix":"2665","desc":"2645"},{"messageId":"2646","fix":"2666","desc":"2648"},{"messageId":"2653","fix":"2667","desc":"2655"},{"messageId":"2643","fix":"2668","desc":"2645"},{"messageId":"2646","fix":"2669","desc":"2648"},{"messageId":"2643","fix":"2670","desc":"2645"},{"messageId":"2646","fix":"2671","desc":"2648"},{"messageId":"2643","fix":"2672","desc":"2645"},{"messageId":"2646","fix":"2673","desc":"2648"},{"messageId":"2643","fix":"2674","desc":"2645"},{"messageId":"2646","fix":"2675","desc":"2648"},{"messageId":"2643","fix":"2676","desc":"2645"},{"messageId":"2646","fix":"2677","desc":"2648"},{"messageId":"2643","fix":"2678","desc":"2645"},{"messageId":"2646","fix":"2679","desc":"2648"},{"messageId":"2643","fix":"2680","desc":"2645"},{"messageId":"2646","fix":"2681","desc":"2648"},{"messageId":"2653","fix":"2682","desc":"2655"},{"messageId":"2653","fix":"2683","desc":"2655"},{"messageId":"2643","fix":"2684","desc":"2645"},{"messageId":"2646","fix":"2685","desc":"2648"},{"messageId":"2653","fix":"2686","desc":"2655"},{"messageId":"2653","fix":"2687","desc":"2655"},{"messageId":"2643","fix":"2688","desc":"2645"},{"messageId":"2646","fix":"2689","desc":"2648"},{"messageId":"2643","fix":"2690","desc":"2645"},{"messageId":"2646","fix":"2691","desc":"2648"},{"messageId":"2643","fix":"2692","desc":"2645"},{"messageId":"2646","fix":"2693","desc":"2648"},{"messageId":"2643","fix":"2694","desc":"2645"},{"messageId":"2646","fix":"2695","desc":"2648"},{"messageId":"2643","fix":"2696","desc":"2645"},{"messageId":"2646","fix":"2697","desc":"2648"},{"messageId":"2643","fix":"2698","desc":"2645"},{"messageId":"2646","fix":"2699","desc":"2648"},{"messageId":"2643","fix":"2700","desc":"2645"},{"messageId":"2646","fix":"2701","desc":"2648"},{"messageId":"2643","fix":"2702","desc":"2645"},{"messageId":"2646","fix":"2703","desc":"2648"},{"messageId":"2643","fix":"2704","desc":"2645"},{"messageId":"2646","fix":"2705","desc":"2648"},"suggestUnknown",{"range":"2706","text":"2707"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"2708","text":"2709"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"2710","text":"2707"},{"range":"2711","text":"2709"},{"range":"2712","text":"2707"},{"range":"2713","text":"2709"},"replaceTsIgnoreWithTsExpectError",{"range":"2714","text":"2715"},"Replace \"@ts-ignore\" with \"@ts-expect-error\".",{"range":"2716","text":"2715"},{"range":"2717","text":"2715"},{"range":"2718","text":"2715"},{"range":"2719","text":"2715"},{"range":"2720","text":"2715"},{"range":"2721","text":"2715"},{"range":"2722","text":"2715"},{"range":"2723","text":"2707"},{"range":"2724","text":"2709"},{"range":"2725","text":"2707"},{"range":"2726","text":"2709"},{"range":"2727","text":"2728"},{"range":"2729","text":"2707"},{"range":"2730","text":"2709"},{"range":"2731","text":"2707"},{"range":"2732","text":"2709"},{"range":"2733","text":"2707"},{"range":"2734","text":"2709"},{"range":"2735","text":"2707"},{"range":"2736","text":"2709"},{"range":"2737","text":"2707"},{"range":"2738","text":"2709"},{"range":"2739","text":"2707"},{"range":"2740","text":"2709"},{"range":"2741","text":"2707"},{"range":"2742","text":"2709"},{"range":"2743","text":"2744"},{"range":"2745","text":"2715"},{"range":"2746","text":"2707"},{"range":"2747","text":"2709"},{"range":"2748","text":"2749"},{"range":"2750","text":"2715"},{"range":"2751","text":"2707"},{"range":"2752","text":"2709"},{"range":"2753","text":"2707"},{"range":"2754","text":"2709"},{"range":"2755","text":"2707"},{"range":"2756","text":"2709"},{"range":"2757","text":"2707"},{"range":"2758","text":"2709"},{"range":"2759","text":"2707"},{"range":"2760","text":"2709"},{"range":"2761","text":"2707"},{"range":"2762","text":"2709"},{"range":"2763","text":"2707"},{"range":"2764","text":"2709"},{"range":"2765","text":"2707"},{"range":"2766","text":"2709"},{"range":"2767","text":"2707"},{"range":"2768","text":"2709"},[7016,7019],"unknown",[7016,7019],"never",[2042,2045],[2042,2045],[3905,3908],[3905,3908],[1098,1111],"// @ts-expect-error",[1152,1165],[1415,1428],[1717,1730],[1778,1791],[2569,2582],[2634,2647],[4206,4219],[1061,1064],[1061,1064],[24159,24162],[24159,24162],[9466,9519],"// @ts-expect-error - advanced constraints may not be typed",[672,675],[672,675],[947,950],[947,950],[4685,4688],[4685,4688],[5325,5328],[5325,5328],[8387,8390],[8387,8390],[13920,13923],[13920,13923],[790,793],[790,793],[2714,2773],"// @ts-expect-error - connection is not in TypeScript definitions",[3205,3218],[6640,6643],[6640,6643],[8591,8648],"// @ts-expect-error - battery API not in TypeScript definitions",[8700,8713],[8080,8083],[8080,8083],[1786,1789],[1786,1789],[2936,2939],[2936,2939],[5990,5993],[5990,5993],[6017,6020],[6017,6020],[6058,6061],[6058,6061],[6096,6099],[6096,6099],[14544,14547],[14544,14547],[903,906],[903,906]]