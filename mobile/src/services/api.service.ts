 * HASIVU Platform - API Service
 * HTTP client with authentication, interceptors, and error handling
 * Generated by SuperClaude Wave 3: Frontend Implementation
import axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from 'axios';
import NetInfo from '@react-native-community/  netinfo';
import { config } from '@/  constants/  config';
 * API response interface;
export interface ApiResponse<T = any> {}
  pagination?: {}
 * Request queue item for offline support;
 * API client class with comprehensive features;
    this.setupInterceptors();
    this.setupNetworkListener();
   * Setup request and response interceptors;
  private setupInterceptors(): void {}
        config.metadata = { startTime: Date.now() };
        // Add request ID for tracking
        config.headers['X-Request-ID'] = this.generateRequestId();
        // Log request in development
        if (__DEV__) {}
          console.log(`üöÄ API Request: ${config.method?.toUpperCase()} ${config.url}``
          console.log(`‚úÖ API Response: ${response.config.method?.toUpperCase()} ${response.config.url}``
            responseTime: `${responseTime}ms``
          console.error(`‚ùå API Error: ${originalRequest?.method?.toUpperCase()} ${originalRequest?.url}``
            originalRequest.headers.Authorization = `Bearer ${newToken}``
    this.client.defaults.headers.Authorization = `Bearer ${token}``
      formattedError.code = errorData?.error?.code || `HTTP_${error.response.status}``
    return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}``