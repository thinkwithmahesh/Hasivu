{
  "summary": {
    "totalLambdaFunctions": 115,
    "documentedEndpoints": 112,
    "completionPercentage": 100,
    "qualityScore": 100
  },
  "openApiValidation": {
    "valid": true,
    "spec": {
      "openapi": "3.0.0",
      "info": {
        "title": "HASIVU Platform API - Complete Specification",
        "version": "1.0.0",
        "description": "Smart School Food Delivery System with RFID Verification - Comprehensive serverless API with 106+ Lambda functions\\n\\n## Security\\n\\nThis API implements comprehensive security measures:\\n\\n- **JWT Authentication**: Bearer token authentication using AWS Cognito\\n- **Rate Limiting**: Endpoint-specific rate limits to prevent abuse\\n- **Input Validation**: Strict validation using Zod schemas\\n- **CORS**: Properly configured cross-origin resource sharing\\n- **ReDoS Protection**: All regex patterns use secure, bounded constructs\\n\\n## Rate Limiting\\n\\nRate limits are enforced per endpoint category:\\n\\n- **authentication**: 10 requests per minute per IP\\n- **userManagement**: 100 requests per minute per user\\n- **healthCheck**: No limit\\n- **menuManagement**: 200 requests per minute per user\\n- **orderManagement**: 50 requests per minute per user\\n- **rfidManagement**: 100 requests per minute per device\\n- **paymentProcessing**: 20 requests per minute per user\\n- **notifications**: 50 requests per minute per user\\n- **analytics**: 100 requests per minute per user\\n- **nutrition**: 50 requests per minute per user\\n- **enterprise**: 200 requests per minute per user\\n- **parentDashboard**: 100 requests per minute per user\\n- **templates**: 50 requests per minute per user\\n- **mobile**: 200 requests per minute per device\\n- **vendorManagement**: 50 requests per minute per user\\n- **staticContent**: 1000 requests per minute per IP\\n- **monitoring**: 100 requests per minute per user\\n\\n## API Versioning\\n\\nThis API uses semantic versioning. Breaking changes increment the major version.\\n\\nCurrent version: **v1.0.0**\\n\\nVersioning strategies supported:\\n- URL path versioning: `/api/v1/...`\\n- Accept header versioning: `application/vnd.hasivu.v1+json`",
        "contact": {
          "name": "HASIVU Platform Team",
          "url": "https://hasivu.com",
          "email": "api-support@hasivu.com"
        },
        "license": {
          "name": "MIT",
          "url": "https://opensource.org/licenses/MIT"
        },
        "termsOfService": "https://hasivu.com/terms"
      },
      "servers": [
        {
          "url": "https://api.hasivu.com",
          "description": "Production server"
        },
        {
          "url": "https://staging-api.hasivu.com",
          "description": "Staging server"
        },
        {
          "url": "http://localhost:3001",
          "description": "Development server"
        }
      ],
      "security": [
        {
          "CognitoAuth": []
        }
      ],
      "components": {
        "securitySchemes": {
          "CognitoAuth": {
            "type": "http",
            "scheme": "bearer",
            "bearerFormat": "JWT",
            "description": "AWS Cognito JWT token authentication. Format: 'Bearer {token}'"
          },
          "ApiKeyAuth": {
            "type": "apiKey",
            "in": "header",
            "name": "X-API-Key",
            "description": "API key for service-to-service authentication"
          },
          "WebhookAuth": {
            "type": "apiKey",
            "in": "header",
            "name": "X-Webhook-Signature",
            "description": "Webhook signature for secure webhook handling"
          }
        },
        "schemas": {
          "Error": {
            "type": "object",
            "required": ["success", "error", "meta"],
            "properties": {
              "success": {
                "type": "boolean",
                "example": false
              },
              "error": {
                "type": "object",
                "required": ["code", "message"],
                "properties": {
                  "code": {
                    "type": "string",
                    "example": "VALIDATION_ERROR",
                    "enum": [
                      "VALIDATION_ERROR",
                      "AUTHENTICATION_ERROR",
                      "AUTHORIZATION_ERROR",
                      "NOT_FOUND",
                      "CONFLICT",
                      "RATE_LIMIT_EXCEEDED",
                      "INTERNAL_ERROR",
                      "SERVICE_UNAVAILABLE",
                      "PAYMENT_ERROR",
                      "RFID_ERROR"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "example": "Invalid input data"
                  },
                  "details": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "value": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "boolean"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "meta": {
                "$ref": "#/components/schemas/ResponseMeta"
              }
            }
          },
          "SuccessResponse": {
            "type": "object",
            "required": ["success", "data", "meta"],
            "properties": {
              "success": {
                "type": "boolean",
                "example": true
              },
              "data": {
                "type": "object",
                "description": "Response payload - structure varies by endpoint"
              },
              "meta": {
                "$ref": "#/components/schemas/ResponseMeta"
              }
            }
          },
          "ResponseMeta": {
            "type": "object",
            "required": ["timestamp", "correlationId"],
            "properties": {
              "timestamp": {
                "type": "string",
                "format": "date-time",
                "example": "2025-01-21T10:30:00.000Z"
              },
              "correlationId": {
                "type": "string",
                "format": "uuid",
                "example": "550e8400-e29b-41d4-a716-446655440000"
              },
              "requestId": {
                "type": "string",
                "example": "req_1234567890abcdef"
              },
              "version": {
                "type": "string",
                "example": "1.0.0"
              },
              "executionTime": {
                "type": "number",
                "description": "Execution time in milliseconds",
                "example": 125
              }
            }
          },
          "PaginationMeta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResponseMeta"
              },
              {
                "type": "object",
                "properties": {
                  "pagination": {
                    "type": "object",
                    "required": ["page", "limit", "total", "pages"],
                    "properties": {
                      "page": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 1
                      },
                      "limit": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 100,
                        "example": 20
                      },
                      "total": {
                        "type": "integer",
                        "minimum": 0,
                        "example": 150
                      },
                      "pages": {
                        "type": "integer",
                        "minimum": 0,
                        "example": 8
                      },
                      "hasNext": {
                        "type": "boolean",
                        "example": true
                      },
                      "hasPrev": {
                        "type": "boolean",
                        "example": false
                      }
                    }
                  }
                }
              }
            ]
          },
          "User": {
            "type": "object",
            "required": ["id", "email", "firstName", "lastName", "role"],
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "example": "550e8400-e29b-41d4-a716-446655440000"
              },
              "email": {
                "type": "string",
                "format": "email",
                "example": "student@school.edu"
              },
              "firstName": {
                "type": "string",
                "minLength": 1,
                "maxLength": 50,
                "example": "John"
              },
              "lastName": {
                "type": "string",
                "minLength": 1,
                "maxLength": 50,
                "example": "Doe"
              },
              "role": {
                "type": "string",
                "enum": ["student", "parent", "teacher", "staff", "school_admin", "admin", "super_admin"],
                "example": "student"
              },
              "schoolId": {
                "type": "string",
                "format": "uuid",
                "example": "123e4567-e89b-12d3-a456-426614174000"
              },
              "phone": {
                "type": "string",
                "pattern": "^[+]?[1-9]?[0-9]{7,15}$",
                "example": "+1234567890"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "example": "2025-01-21T10:30:00.000Z"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "example": "2025-01-21T10:30:00.000Z"
              },
              "isActive": {
                "type": "boolean",
                "example": true
              },
              "preferences": {
                "type": "object",
                "properties": {
                  "language": {
                    "type": "string",
                    "enum": ["en", "hi", "ta", "es", "fr"],
                    "example": "en"
                  },
                  "notifications": {
                    "type": "boolean",
                    "example": true
                  },
                  "theme": {
                    "type": "string",
                    "enum": ["light", "dark"],
                    "example": "light"
                  }
                }
              }
            }
          },
          "MenuItem": {
            "type": "object",
            "required": ["id", "name", "price", "category"],
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100,
                "example": "Grilled Chicken Sandwich"
              },
              "description": {
                "type": "string",
                "maxLength": 500,
                "example": "Freshly grilled chicken breast with lettuce and tomato"
              },
              "price": {
                "type": "number",
                "multipleOf": 0.01,
                "minimum": 0,
                "example": 12.99
              },
              "category": {
                "type": "string",
                "enum": ["appetizer", "main", "dessert", "beverage", "snack"],
                "example": "main"
              },
              "cuisine": {
                "type": "string",
                "example": "Continental"
              },
              "isVegetarian": {
                "type": "boolean",
                "example": false
              },
              "isVegan": {
                "type": "boolean",
                "example": false
              },
              "allergens": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": ["nuts", "dairy", "gluten", "soy", "eggs", "shellfish", "fish"]
                },
                "example": ["gluten"]
              },
              "nutritionInfo": {
                "type": "object",
                "properties": {
                  "calories": {
                    "type": "number",
                    "example": 320
                  },
                  "protein": {
                    "type": "number",
                    "example": 25
                  },
                  "carbs": {
                    "type": "number",
                    "example": 30
                  },
                  "fat": {
                    "type": "number",
                    "example": 8
                  }
                }
              },
              "imageUrl": {
                "type": "string",
                "format": "uri",
                "example": "https://cdn.hasivu.com/images/menu/chicken-sandwich.jpg"
              },
              "isAvailable": {
                "type": "boolean",
                "example": true
              },
              "schoolId": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "Order": {
            "type": "object",
            "required": ["id", "userId", "items", "totalAmount", "status"],
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "orderNumber": {
                "type": "string",
                "example": "ORD-2025-001234"
              },
              "userId": {
                "type": "string",
                "format": "uuid"
              },
              "schoolId": {
                "type": "string",
                "format": "uuid"
              },
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "menuItemId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "quantity": {
                      "type": "integer",
                      "minimum": 1,
                      "example": 2
                    },
                    "unitPrice": {
                      "type": "number",
                      "example": 12.99
                    },
                    "customizations": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["No onions", "Extra cheese"]
                    }
                  }
                }
              },
              "totalAmount": {
                "type": "number",
                "multipleOf": 0.01,
                "minimum": 0,
                "example": 25.98
              },
              "currency": {
                "type": "string",
                "enum": ["INR", "USD"],
                "example": "INR"
              },
              "status": {
                "type": "string",
                "enum": ["pending", "confirmed", "preparing", "ready", "delivered", "cancelled"],
                "example": "confirmed"
              },
              "deliveryType": {
                "type": "string",
                "enum": ["pickup", "delivery"],
                "example": "pickup"
              },
              "deliveryTime": {
                "type": "string",
                "format": "date-time"
              },
              "deliveryLocation": {
                "type": "string",
                "example": "Classroom 5B"
              },
              "paymentStatus": {
                "type": "string",
                "enum": ["pending", "paid", "failed", "refunded"],
                "example": "paid"
              },
              "rfidVerification": {
                "type": "object",
                "properties": {
                  "cardNumber": {
                    "type": "string",
                    "example": "RFID123456789"
                  },
                  "verifiedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "verifiedBy": {
                    "type": "string",
                    "example": "Delivery Staff"
                  }
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "RFIDCard": {
            "type": "object",
            "required": ["id", "cardNumber", "studentId", "status"],
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "cardNumber": {
                "type": "string",
                "pattern": "^[0-9A-Fa-f]{8,16}$",
                "example": "RFID123456789"
              },
              "studentId": {
                "type": "string",
                "format": "uuid"
              },
              "schoolId": {
                "type": "string",
                "format": "uuid"
              },
              "status": {
                "type": "string",
                "enum": ["active", "inactive", "lost", "expired"],
                "example": "active"
              },
              "expiryDate": {
                "type": "string",
                "format": "date"
              },
              "issueDate": {
                "type": "string",
                "format": "date"
              },
              "lastUsed": {
                "type": "string",
                "format": "date-time"
              },
              "permissions": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": ["order_food", "access_library", "attendance"]
                },
                "example": ["order_food"]
              }
            }
          },
          "PaymentOrder": {
            "type": "object",
            "required": ["id", "amount", "currency", "status"],
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "orderId": {
                "type": "string",
                "example": "order_123456789"
              },
              "amount": {
                "type": "number",
                "multipleOf": 0.01,
                "minimum": 0,
                "example": 25.98
              },
              "currency": {
                "type": "string",
                "enum": ["INR", "USD"],
                "example": "INR"
              },
              "status": {
                "type": "string",
                "enum": ["created", "pending", "paid", "failed", "cancelled", "refunded"],
                "example": "paid"
              },
              "paymentMethod": {
                "type": "string",
                "enum": ["card", "wallet", "upi", "bank_transfer"],
                "example": "upi"
              },
              "gatewayOrderId": {
                "type": "string",
                "example": "razorpay_order_123456"
              },
              "gatewayPaymentId": {
                "type": "string",
                "example": "razorpay_payment_789012"
              },
              "receipt": {
                "type": "string",
                "example": "receipt_001234"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "paidAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "Notification": {
            "type": "object",
            "required": ["id", "type", "title", "message", "userId"],
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "order_confirmation",
                  "payment_success",
                  "delivery_notification",
                  "system_alert",
                  "promotional"
                ],
                "example": "order_confirmation"
              },
              "title": {
                "type": "string",
                "maxLength": 100,
                "example": "Order Confirmed"
              },
              "message": {
                "type": "string",
                "maxLength": 500,
                "example": "Your lunch order has been confirmed and will be ready at 12:30 PM"
              },
              "userId": {
                "type": "string",
                "format": "uuid"
              },
              "channels": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": ["email", "sms", "push", "whatsapp"]
                },
                "example": ["push", "email"]
              },
              "data": {
                "type": "object",
                "description": "Additional structured data for the notification"
              },
              "isRead": {
                "type": "boolean",
                "example": false
              },
              "sentAt": {
                "type": "string",
                "format": "date-time"
              },
              "readAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        },
        "parameters": {
          "PageParam": {
            "name": "page",
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          "LimitParam": {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          },
          "SearchParam": {
            "name": "search",
            "in": "query",
            "description": "Search query string",
            "schema": {
              "type": "string",
              "maxLength": 100
            }
          },
          "SortParam": {
            "name": "sort",
            "in": "query",
            "description": "Sort field and direction (e.g., 'createdAt:desc')",
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z][a-zA-Z0-9]*:(asc|desc)$"
            }
          }
        },
        "responses": {
          "BadRequest": {
            "description": "Bad Request - Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "validation_error": {
                    "summary": "Validation Error",
                    "value": {
                      "success": false,
                      "error": {
                        "code": "VALIDATION_ERROR",
                        "message": "Validation failed",
                        "details": [
                          {
                            "field": "email",
                            "message": "Please provide a valid email address",
                            "value": "invalid-email"
                          }
                        ]
                      },
                      "meta": {
                        "timestamp": "2025-01-21T10:30:00.000Z",
                        "correlationId": "550e8400-e29b-41d4-a716-446655440000"
                      }
                    }
                  }
                }
              }
            }
          },
          "Unauthorized": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "missing_token": {
                    "summary": "Missing Authorization Token",
                    "value": {
                      "success": false,
                      "error": {
                        "code": "AUTHENTICATION_ERROR",
                        "message": "Authentication token is required"
                      },
                      "meta": {
                        "timestamp": "2025-01-21T10:30:00.000Z",
                        "correlationId": "550e8400-e29b-41d4-a716-446655440000"
                      }
                    }
                  },
                  "invalid_token": {
                    "summary": "Invalid Token",
                    "value": {
                      "success": false,
                      "error": {
                        "code": "AUTHENTICATION_ERROR",
                        "message": "Invalid or expired authentication token"
                      },
                      "meta": {
                        "timestamp": "2025-01-21T10:30:00.000Z",
                        "correlationId": "550e8400-e29b-41d4-a716-446655440000"
                      }
                    }
                  }
                }
              }
            }
          },
          "Forbidden": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "NotFound": {
            "description": "Not Found - Resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "Conflict": {
            "description": "Conflict - Resource already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "RateLimitExceeded": {
            "description": "Rate Limit Exceeded",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Request limit per time window",
                "schema": {
                  "type": "integer"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "Remaining requests in current window",
                "schema": {
                  "type": "integer"
                }
              },
              "X-RateLimit-Reset": {
                "description": "Time when rate limit resets (Unix timestamp)",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "InternalServerError": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "ServiceUnavailable": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "paths": {
        "/health": {
          "get": {
            "tags": ["Health Check"],
            "summary": "Basic health check",
            "description": "Basic health check. Part of Health Check API.",
            "operationId": "getHealth",
            "security": [],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "No limit"
          }
        },
        "/health/detailed": {
          "get": {
            "tags": ["Health Check"],
            "summary": "Detailed health check with dependencies",
            "description": "Detailed health check with dependencies. Part of Health Check API.",
            "operationId": "getHealth_detailed",
            "security": [],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "No limit"
          }
        },
        "/health/ready": {
          "get": {
            "tags": ["Health Check"],
            "summary": "Readiness check for K8s",
            "description": "Readiness check for K8s. Part of Health Check API.",
            "operationId": "getHealth_ready",
            "security": [],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "No limit"
          }
        },
        "/health/live": {
          "get": {
            "tags": ["Health Check"],
            "summary": "Liveness check for K8s",
            "description": "Liveness check for K8s. Part of Health Check API.",
            "operationId": "getHealth_live",
            "security": [],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "No limit"
          }
        },
        "/auth/register": {
          "post": {
            "tags": ["Authentication"],
            "summary": "Register new user",
            "description": "Register a new user account with AWS Cognito. Supports multiple roles including students, parents, teachers, and administrators.",
            "operationId": "registerUser",
            "security": [],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": ["email", "password", "firstName", "lastName", "role", "schoolId"],
                    "properties": {
                      "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@school.edu",
                        "description": "User's email address (must be unique)"
                      },
                      "password": {
                        "type": "string",
                        "minLength": 8,
                        "maxLength": 128,
                        "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[\\w!@#$%^&*]{8,128}$",
                        "example": "SecurePass123!",
                        "description": "Password must contain at least one lowercase letter, one uppercase letter, one digit, and one special character"
                      },
                      "firstName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50,
                        "example": "John",
                        "description": "User's first name"
                      },
                      "lastName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50,
                        "example": "Doe",
                        "description": "User's last name"
                      },
                      "role": {
                        "type": "string",
                        "enum": ["student", "parent", "teacher", "staff", "school_admin", "admin", "super_admin"],
                        "example": "student",
                        "description": "User's role in the system"
                      },
                      "schoolId": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-e89b-12d3-a456-426614174000",
                        "description": "ID of the school the user belongs to"
                      },
                      "phone": {
                        "type": "string",
                        "pattern": "^[+]?[1-9]?[0-9]{7,15}$",
                        "example": "+1234567890",
                        "description": "User's phone number (optional)"
                      },
                      "dateOfBirth": {
                        "type": "string",
                        "format": "date",
                        "example": "2005-06-15",
                        "description": "Date of birth (required for students)"
                      },
                      "grade": {
                        "type": "string",
                        "example": "10th",
                        "description": "Student's grade level (required for students)"
                      },
                      "parentEmail": {
                        "type": "string",
                        "format": "email",
                        "example": "parent@family.com",
                        "description": "Parent's email address (required for students)"
                      }
                    }
                  },
                  "examples": {
                    "student_registration": {
                      "summary": "Student Registration",
                      "value": {
                        "email": "john.doe@school.edu",
                        "password": "SecurePass123!",
                        "firstName": "John",
                        "lastName": "Doe",
                        "role": "student",
                        "schoolId": "123e4567-e89b-12d3-a456-426614174000",
                        "phone": "+1234567890",
                        "dateOfBirth": "2005-06-15",
                        "grade": "10th",
                        "parentEmail": "parent@family.com"
                      }
                    },
                    "teacher_registration": {
                      "summary": "Teacher Registration",
                      "value": {
                        "email": "teacher@school.edu",
                        "password": "SecurePass123!",
                        "firstName": "Jane",
                        "lastName": "Smith",
                        "role": "teacher",
                        "schoolId": "123e4567-e89b-12d3-a456-426614174000",
                        "phone": "+1234567891"
                      }
                    }
                  }
                }
              }
            },
            "responses": {
              "201": {
                "description": "User registered successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/SuccessResponse"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "userId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "550e8400-e29b-41d4-a716-446655440000"
                                },
                                "email": {
                                  "type": "string",
                                  "format": "email",
                                  "example": "john.doe@school.edu"
                                },
                                "status": {
                                  "type": "string",
                                  "enum": ["pending_verification", "active"],
                                  "example": "pending_verification"
                                },
                                "verificationRequired": {
                                  "type": "boolean",
                                  "example": true
                                },
                                "message": {
                                  "type": "string",
                                  "example": "Registration successful. Please check your email for verification instructions."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            }
          }
        },
        "/auth/login": {
          "post": {
            "tags": ["Authentication"],
            "summary": "User login",
            "description": "Authenticate user credentials and return JWT tokens for session management",
            "operationId": "loginUser",
            "security": [],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": ["email", "password"],
                    "properties": {
                      "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@school.edu",
                        "description": "User's email address"
                      },
                      "password": {
                        "type": "string",
                        "example": "SecurePass123!",
                        "description": "User's password"
                      },
                      "rememberMe": {
                        "type": "boolean",
                        "default": false,
                        "example": true,
                        "description": "Whether to extend session duration"
                      },
                      "deviceInfo": {
                        "type": "object",
                        "properties": {
                          "deviceId": {
                            "type": "string",
                            "example": "device_12345"
                          },
                          "deviceName": {
                            "type": "string",
                            "example": "iPhone 13 Pro"
                          },
                          "platform": {
                            "type": "string",
                            "enum": ["web", "ios", "android"],
                            "example": "web"
                          }
                        }
                      }
                    }
                  },
                  "examples": {
                    "basic_login": {
                      "summary": "Basic Login",
                      "value": {
                        "email": "john.doe@school.edu",
                        "password": "SecurePass123!"
                      }
                    },
                    "extended_session": {
                      "summary": "Login with Extended Session",
                      "value": {
                        "email": "john.doe@school.edu",
                        "password": "SecurePass123!",
                        "rememberMe": true,
                        "deviceInfo": {
                          "deviceId": "device_12345",
                          "deviceName": "iPhone 13 Pro",
                          "platform": "ios"
                        }
                      }
                    }
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Login successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/SuccessResponse"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "accessToken": {
                                  "type": "string",
                                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                                  "description": "JWT access token for API authentication"
                                },
                                "refreshToken": {
                                  "type": "string",
                                  "example": "refresh_token_example",
                                  "description": "Refresh token for obtaining new access tokens"
                                },
                                "tokenType": {
                                  "type": "string",
                                  "example": "Bearer",
                                  "description": "Token type for Authorization header"
                                },
                                "expiresIn": {
                                  "type": "integer",
                                  "example": 3600,
                                  "description": "Access token expiration time in seconds"
                                },
                                "user": {
                                  "$ref": "#/components/schemas/User"
                                },
                                "permissions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "example": ["order_food", "view_menu", "update_profile"]
                                },
                                "sessionId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "550e8400-e29b-41d4-a716-446655440000"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "description": "Account locked or requires verification",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Error"
                    },
                    "examples": {
                      "account_locked": {
                        "summary": "Account Locked",
                        "value": {
                          "success": false,
                          "error": {
                            "code": "AUTHORIZATION_ERROR",
                            "message": "Account is temporarily locked due to multiple failed login attempts"
                          },
                          "meta": {
                            "timestamp": "2025-01-21T10:30:00.000Z",
                            "correlationId": "550e8400-e29b-41d4-a716-446655440000"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            }
          }
        },
        "/auth/refresh": {
          "post": {
            "tags": ["Authentication"],
            "summary": "Refresh JWT token",
            "description": "Refresh expired JWT access token using refresh token",
            "operationId": "refreshToken",
            "security": [],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": ["refreshToken"],
                    "properties": {
                      "refreshToken": {
                        "type": "string",
                        "example": "refresh_token_example",
                        "description": "Valid refresh token"
                      }
                    }
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Token refreshed successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/SuccessResponse"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "accessToken": {
                                  "type": "string",
                                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                },
                                "tokenType": {
                                  "type": "string",
                                  "example": "Bearer"
                                },
                                "expiresIn": {
                                  "type": "integer",
                                  "example": 3600
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            }
          }
        },
        "/auth/me": {
          "get": {
            "tags": ["Authentication"],
            "summary": "Get current user profile",
            "description": "Retrieve authenticated user's profile information and permissions",
            "operationId": "getCurrentUser",
            "responses": {
              "200": {
                "description": "User profile retrieved successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/SuccessResponse"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "data": {
                              "allOf": [
                                {
                                  "$ref": "#/components/schemas/User"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "permissions": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "example": ["order_food", "view_menu", "update_profile"]
                                    },
                                    "lastLoginAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "example": "2025-01-21T10:30:00.000Z"
                                    },
                                    "sessionInfo": {
                                      "type": "object",
                                      "properties": {
                                        "sessionId": {
                                          "type": "string",
                                          "format": "uuid"
                                        },
                                        "deviceInfo": {
                                          "type": "object",
                                          "properties": {
                                            "platform": {
                                              "type": "string"
                                            },
                                            "userAgent": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            }
          }
        },
        "/auth/logout": {
          "post": {
            "tags": ["Authentication"],
            "summary": "User logout",
            "description": "Logout user, invalidate session, and clear tokens",
            "operationId": "logoutUser",
            "requestBody": {
              "required": false,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "logoutFromAllDevices": {
                        "type": "boolean",
                        "default": false,
                        "example": true,
                        "description": "Whether to logout from all devices"
                      }
                    }
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Logout successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/SuccessResponse"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "message": {
                                  "type": "string",
                                  "example": "Successfully logged out"
                                },
                                "sessionsClosed": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Number of sessions that were closed"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            }
          }
        },
        "/auth/change-password": {
          "patch": {
            "tags": ["Authentication"],
            "summary": "Change user password",
            "description": "Change authenticated user's password with current password verification",
            "operationId": "changePassword",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": ["currentPassword", "newPassword", "confirmPassword"],
                    "properties": {
                      "currentPassword": {
                        "type": "string",
                        "example": "CurrentPass123!",
                        "description": "User's current password"
                      },
                      "newPassword": {
                        "type": "string",
                        "minLength": 8,
                        "maxLength": 128,
                        "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[\\w!@#$%^&*]{8,128}$",
                        "example": "NewSecurePass123!",
                        "description": "New password meeting security requirements"
                      },
                      "confirmPassword": {
                        "type": "string",
                        "example": "NewSecurePass123!",
                        "description": "Confirmation of new password (must match newPassword)"
                      },
                      "logoutFromOtherDevices": {
                        "type": "boolean",
                        "default": true,
                        "example": true,
                        "description": "Whether to logout from other devices after password change"
                      }
                    }
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Password changed successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/SuccessResponse"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "message": {
                                  "type": "string",
                                  "example": "Password changed successfully"
                                },
                                "requiresReauth": {
                                  "type": "boolean",
                                  "example": false,
                                  "description": "Whether user needs to re-authenticate"
                                },
                                "sessionsInvalidated": {
                                  "type": "integer",
                                  "example": 3,
                                  "description": "Number of other sessions that were invalidated"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            }
          }
        },
        "/auth/profile": {
          "patch": {
            "tags": ["Authentication"],
            "summary": "Update user profile",
            "description": "Update authenticated user's profile information",
            "operationId": "updateUserProfile",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50,
                        "example": "John",
                        "description": "Updated first name"
                      },
                      "lastName": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50,
                        "example": "Doe",
                        "description": "Updated last name"
                      },
                      "phone": {
                        "type": "string",
                        "pattern": "^[+]?[1-9]?[0-9]{7,15}$",
                        "example": "+1234567890",
                        "description": "Updated phone number"
                      },
                      "preferences": {
                        "type": "object",
                        "properties": {
                          "language": {
                            "type": "string",
                            "enum": ["en", "hi", "ta", "es", "fr"],
                            "example": "en",
                            "description": "Preferred language"
                          },
                          "notifications": {
                            "type": "boolean",
                            "example": true,
                            "description": "Whether to receive notifications"
                          },
                          "theme": {
                            "type": "string",
                            "enum": ["light", "dark"],
                            "example": "light",
                            "description": "UI theme preference"
                          },
                          "timezone": {
                            "type": "string",
                            "example": "Asia/Kolkata",
                            "description": "User's timezone"
                          }
                        }
                      },
                      "dietaryRestrictions": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": ["vegetarian", "vegan", "gluten-free", "lactose-free", "nut-free"]
                        },
                        "example": ["vegetarian", "gluten-free"],
                        "description": "User's dietary restrictions"
                      },
                      "allergens": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": ["nuts", "dairy", "gluten", "soy", "eggs", "shellfish", "fish"]
                        },
                        "example": ["nuts", "dairy"],
                        "description": "User's known allergens"
                      }
                    }
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Profile updated successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/SuccessResponse"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "data": {
                              "$ref": "#/components/schemas/User"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            }
          }
        },
        "/users": {
          "get": {
            "tags": ["User Management"],
            "summary": "Get all users with filtering",
            "description": "Get all users with filtering. Part of User Management API.",
            "operationId": "getUsers",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per user"
          }
        },
        "/users/{id}": {
          "get": {
            "tags": ["User Management"],
            "summary": "Get user by ID",
            "description": "Get user by ID. Part of User Management API.",
            "operationId": "getUsersById",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "Id identifier"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per user"
          },
          "put": {
            "tags": ["User Management"],
            "summary": "Update user information",
            "description": "Update user information. Part of User Management API.",
            "operationId": "putUsersById",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "Id identifier"
              }
            ],
            "responses": {
              "200": {
                "description": "Resource updated successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "userManagement put data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/users/bulk-import": {
          "post": {
            "tags": ["User Management"],
            "summary": "Bulk import users from CSV",
            "description": "Bulk import users from CSV. Part of User Management API.",
            "operationId": "postUsers_bulk-import",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "userManagement post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/users/{id}/children": {
          "post": {
            "tags": ["User Management"],
            "summary": "Manage parent-child relationships",
            "description": "Manage parent-child relationships. Part of User Management API.",
            "operationId": "postUsersById_children",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "Id identifier"
              }
            ],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "userManagement post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/health/status": {
          "get": {
            "tags": ["Health Check"],
            "summary": "System status overview",
            "description": "System status overview. Part of Health Check API.",
            "operationId": "getHealth_status",
            "security": [],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "No limit"
          }
        },
        "/health/database": {
          "get": {
            "tags": ["Health Check"],
            "summary": "Database connectivity check",
            "description": "Database connectivity check. Part of Health Check API.",
            "operationId": "getHealth_database",
            "security": [],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "No limit"
          }
        },
        "/health/comprehensive": {
          "get": {
            "tags": ["Health Check"],
            "summary": "Comprehensive system health",
            "description": "Comprehensive system health. Part of Health Check API.",
            "operationId": "getHealth_comprehensive",
            "security": [],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "No limit"
          }
        },
        "/health/dashboard": {
          "get": {
            "tags": ["Health Check"],
            "summary": "Health dashboard data",
            "description": "Health dashboard data. Part of Health Check API.",
            "operationId": "getHealth_dashboard",
            "security": [],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "No limit"
          }
        },
        "/health/system": {
          "get": {
            "tags": ["Health Check"],
            "summary": "System health metrics",
            "description": "System health metrics. Part of Health Check API.",
            "operationId": "getHealth_system",
            "security": [],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "No limit"
          }
        },
        "/health/system-status": {
          "get": {
            "tags": ["Health Check"],
            "summary": "Detailed system status",
            "description": "Detailed system status. Part of Health Check API.",
            "operationId": "getHealth_system-status",
            "security": [],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "No limit"
          }
        },
        "/health/check": {
          "get": {
            "tags": ["Health Check"],
            "summary": "General health check endpoint",
            "description": "General health check endpoint. Part of Health Check API.",
            "operationId": "getHealth_check",
            "security": [],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "No limit"
          }
        },
        "/menu/items": {
          "get": {
            "tags": ["Menu Management"],
            "summary": "Get menu items with filtering",
            "description": "Get menu items with filtering. Part of Menu Management API.",
            "operationId": "getMenu_items",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "200 requests per minute per user"
          },
          "post": {
            "tags": ["Menu Management"],
            "summary": "Create new menu item",
            "description": "Create new menu item. Part of Menu Management API.",
            "operationId": "postMenu_items",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "200 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "menuManagement post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/menu/items/{id}": {
          "get": {
            "tags": ["Menu Management"],
            "summary": "Get menu item by ID",
            "description": "Get menu item by ID. Part of Menu Management API.",
            "operationId": "getMenu_itemsById",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "Id identifier"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "200 requests per minute per user"
          },
          "put": {
            "tags": ["Menu Management"],
            "summary": "Update menu item",
            "description": "Update menu item. Part of Menu Management API.",
            "operationId": "putMenu_itemsById",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "Id identifier"
              }
            ],
            "responses": {
              "200": {
                "description": "Resource updated successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "200 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "menuManagement put data"
                      }
                    }
                  }
                }
              }
            }
          },
          "delete": {
            "tags": ["Menu Management"],
            "summary": "Delete menu item",
            "description": "Delete menu item. Part of Menu Management API.",
            "operationId": "deleteMenu_itemsById",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "Id identifier"
              }
            ],
            "responses": {
              "204": {
                "description": "Resource deleted successfully"
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "200 requests per minute per user"
          }
        },
        "/menu/search": {
          "get": {
            "tags": ["Menu Management"],
            "summary": "Search menu items",
            "description": "Search menu items. Part of Menu Management API.",
            "operationId": "getMenu_search",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "200 requests per minute per user"
          }
        },
        "/menu/daily": {
          "post": {
            "tags": ["Menu Management"],
            "summary": "Create daily menu plan",
            "description": "Create daily menu plan. Part of Menu Management API.",
            "operationId": "postMenu_daily",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "200 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "menuManagement post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/menu/plans": {
          "post": {
            "tags": ["Menu Management"],
            "summary": "Create meal plan",
            "description": "Create meal plan. Part of Menu Management API.",
            "operationId": "postMenu_plans",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "200 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "menuManagement post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/menu/slots": {
          "post": {
            "tags": ["Menu Management"],
            "summary": "Manage meal time slots",
            "description": "Manage meal time slots. Part of Menu Management API.",
            "operationId": "postMenu_slots",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "200 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "menuManagement post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/orders": {
          "get": {
            "tags": ["Order Management"],
            "summary": "Get orders with pagination",
            "description": "Get orders with pagination. Part of Order Management API.",
            "operationId": "getOrders",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "50 requests per minute per user"
          },
          "post": {
            "tags": ["Order Management"],
            "summary": "Create new order",
            "description": "Create new order. Part of Order Management API.",
            "operationId": "postOrders",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "50 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "orderManagement post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/orders/{id}": {
          "get": {
            "tags": ["Order Management"],
            "summary": "Get order by ID",
            "description": "Get order by ID. Part of Order Management API.",
            "operationId": "getOrdersById",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "Id identifier"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "50 requests per minute per user"
          },
          "put": {
            "tags": ["Order Management"],
            "summary": "Update order details",
            "description": "Update order details. Part of Order Management API.",
            "operationId": "putOrdersById",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "Id identifier"
              }
            ],
            "responses": {
              "200": {
                "description": "Resource updated successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "50 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "orderManagement put data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/orders/{id}/status": {
          "patch": {
            "tags": ["Order Management"],
            "summary": "Update order status",
            "description": "Update order status. Part of Order Management API.",
            "operationId": "patchOrdersById_status",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string",
                  "format": "uuid"
                },
                "description": "Id identifier"
              },
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Resource updated successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "50 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "orderManagement patch data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/rfid/cards": {
          "post": {
            "tags": ["RFID Management"],
            "summary": "Create RFID card",
            "description": "Create RFID card. Part of RFID Management API.",
            "operationId": "postRfid_cards",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per device",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "rfidManagement post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/rfid/cards/{cardNumber}": {
          "get": {
            "tags": ["RFID Management"],
            "summary": "Get RFID card details",
            "description": "Get RFID card details. Part of RFID Management API.",
            "operationId": "getRfid_cardsById",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "name": "cardNumber",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "description": "CardNumber identifier"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per device"
          }
        },
        "/rfid/verify": {
          "post": {
            "tags": ["RFID Management"],
            "summary": "Verify RFID card for delivery",
            "description": "Verify RFID card for delivery. Part of RFID Management API.",
            "operationId": "postRfid_verify",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per device",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "rfidManagement post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/rfid/delivery/verify": {
          "post": {
            "tags": ["RFID Management"],
            "summary": "RFID delivery verification",
            "description": "RFID delivery verification. Part of RFID Management API.",
            "operationId": "postRfid_delivery_verify",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per device",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "rfidManagement post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/rfid/photo/verify": {
          "post": {
            "tags": ["RFID Management"],
            "summary": "Photo verification for delivery",
            "description": "Photo verification for delivery. Part of RFID Management API.",
            "operationId": "postRfid_photo_verify",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per device",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "rfidManagement post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/rfid/cards/bulk-import": {
          "post": {
            "tags": ["RFID Management"],
            "summary": "Bulk import RFID cards",
            "description": "Bulk import RFID cards. Part of RFID Management API.",
            "operationId": "postRfid_cards_bulk-import",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per device",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "rfidManagement post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/rfid/readers": {
          "get": {
            "tags": ["RFID Management"],
            "summary": "Manage RFID readers",
            "description": "Manage RFID readers. Part of RFID Management API.",
            "operationId": "getRfid_readers",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per device"
          }
        },
        "/rfid/mobile/cards": {
          "get": {
            "tags": ["RFID Management"],
            "summary": "Mobile RFID card management",
            "description": "Mobile RFID card management. Part of RFID Management API.",
            "operationId": "getRfid_mobile_cards",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per device"
          }
        },
        "/rfid/mobile/tracking": {
          "get": {
            "tags": ["RFID Management"],
            "summary": "Mobile RFID tracking",
            "description": "Mobile RFID tracking. Part of RFID Management API.",
            "operationId": "getRfid_mobile_tracking",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per device"
          }
        },
        "/payment/orders": {
          "post": {
            "tags": ["Payment Processing"],
            "summary": "Create payment order",
            "description": "Create payment order. Part of Payment Processing API.",
            "operationId": "postPayment_orders",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "20 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "paymentProcessing post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/payment/verify": {
          "post": {
            "tags": ["Payment Processing"],
            "summary": "Verify payment status",
            "description": "Verify payment status. Part of Payment Processing API.",
            "operationId": "postPayment_verify",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "20 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "paymentProcessing post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/payment/webhook": {
          "post": {
            "tags": ["Payment Processing"],
            "summary": "Payment gateway webhook",
            "description": "Payment gateway webhook. Part of Payment Processing API.",
            "operationId": "postPayment_webhook",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "20 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "paymentProcessing post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/payment/webhook-handler": {
          "post": {
            "tags": ["Payment Processing"],
            "summary": "Advanced webhook handler",
            "description": "Advanced webhook handler. Part of Payment Processing API.",
            "operationId": "postPayment_webhook-handler",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "20 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "paymentProcessing post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/payment/methods": {
          "get": {
            "tags": ["Payment Processing"],
            "summary": "Manage payment methods",
            "description": "Manage payment methods. Part of Payment Processing API.",
            "operationId": "getPayment_methods",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "20 requests per minute per user"
          }
        },
        "/payment/retry": {
          "post": {
            "tags": ["Payment Processing"],
            "summary": "Retry failed payments",
            "description": "Retry failed payments. Part of Payment Processing API.",
            "operationId": "postPayment_retry",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "20 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "paymentProcessing post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/payment/analytics": {
          "get": {
            "tags": ["Payment Processing"],
            "summary": "Payment analytics dashboard",
            "description": "Payment analytics dashboard. Part of Payment Processing API.",
            "operationId": "getPayment_analytics",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "20 requests per minute per user"
          }
        },
        "/payment/reconciliation": {
          "post": {
            "tags": ["Payment Processing"],
            "summary": "Payment reconciliation",
            "description": "Payment reconciliation. Part of Payment Processing API.",
            "operationId": "postPayment_reconciliation",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "20 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "paymentProcessing post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/payment/invoices": {
          "get": {
            "tags": ["Payment Processing"],
            "summary": "Generate invoices",
            "description": "Generate invoices. Part of Payment Processing API.",
            "operationId": "getPayment_invoices",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "20 requests per minute per user"
          }
        },
        "/payment/invoices/send": {
          "post": {
            "tags": ["Payment Processing"],
            "summary": "Send invoice emails",
            "description": "Send invoice emails. Part of Payment Processing API.",
            "operationId": "postPayment_invoices_send",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "20 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "paymentProcessing post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/payment/invoices/templates": {
          "get": {
            "tags": ["Payment Processing"],
            "summary": "Manage invoice templates",
            "description": "Manage invoice templates. Part of Payment Processing API.",
            "operationId": "getPayment_invoices_templates",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "20 requests per minute per user"
          }
        },
        "/payment/invoices/analytics": {
          "get": {
            "tags": ["Payment Processing"],
            "summary": "Invoice analytics",
            "description": "Invoice analytics. Part of Payment Processing API.",
            "operationId": "getPayment_invoices_analytics",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "20 requests per minute per user"
          }
        },
        "/payment/pdf/generate": {
          "post": {
            "tags": ["Payment Processing"],
            "summary": "Generate payment PDFs",
            "description": "Generate payment PDFs. Part of Payment Processing API.",
            "operationId": "postPayment_pdf_generate",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "20 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "paymentProcessing post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/payment/subscriptions": {
          "get": {
            "tags": ["Payment Processing"],
            "summary": "Manage subscriptions",
            "description": "Manage subscriptions. Part of Payment Processing API.",
            "operationId": "getPayment_subscriptions",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "20 requests per minute per user"
          }
        },
        "/payment/subscriptions/plans": {
          "get": {
            "tags": ["Payment Processing"],
            "summary": "Subscription plans",
            "description": "Subscription plans. Part of Payment Processing API.",
            "operationId": "getPayment_subscriptions_plans",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "20 requests per minute per user"
          }
        },
        "/payment/subscriptions/analytics": {
          "get": {
            "tags": ["Payment Processing"],
            "summary": "Subscription analytics",
            "description": "Subscription analytics. Part of Payment Processing API.",
            "operationId": "getPayment_subscriptions_analytics",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "20 requests per minute per user"
          }
        },
        "/payment/billing/automation": {
          "post": {
            "tags": ["Payment Processing"],
            "summary": "Automated billing",
            "description": "Automated billing. Part of Payment Processing API.",
            "operationId": "postPayment_billing_automation",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "20 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "paymentProcessing post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/payment/dunning": {
          "post": {
            "tags": ["Payment Processing"],
            "summary": "Dunning management",
            "description": "Dunning management. Part of Payment Processing API.",
            "operationId": "postPayment_dunning",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "20 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "paymentProcessing post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/payment/advanced": {
          "get": {
            "tags": ["Payment Processing"],
            "summary": "Advanced payment features",
            "description": "Advanced payment features. Part of Payment Processing API.",
            "operationId": "getPayment_advanced",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "20 requests per minute per user"
          }
        },
        "/payment/intelligence": {
          "get": {
            "tags": ["Payment Processing"],
            "summary": "Payment intelligence",
            "description": "Payment intelligence. Part of Payment Processing API.",
            "operationId": "getPayment_intelligence",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "20 requests per minute per user"
          }
        },
        "/payment/ml-insights": {
          "get": {
            "tags": ["Payment Processing"],
            "summary": "ML payment insights",
            "description": "ML payment insights. Part of Payment Processing API.",
            "operationId": "getPayment_ml-insights",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "20 requests per minute per user"
          }
        },
        "/payment/orders-fixed": {
          "post": {
            "tags": ["Payment Processing"],
            "summary": "Create payment order (fixed)",
            "description": "Create payment order (fixed). Part of Payment Processing API.",
            "operationId": "postPayment_orders-fixed",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "20 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "paymentProcessing post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/notifications/send": {
          "post": {
            "tags": ["Notifications"],
            "summary": "Send notification",
            "description": "Send notification. Part of Notifications API.",
            "operationId": "postNotifications_send",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "50 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "notifications post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/notifications": {
          "get": {
            "tags": ["Notifications"],
            "summary": "Get user notifications",
            "description": "Get user notifications. Part of Notifications API.",
            "operationId": "getNotifications",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "50 requests per minute per user"
          }
        },
        "/notifications/webhooks/whatsapp": {
          "post": {
            "tags": ["Notifications"],
            "summary": "WhatsApp webhook handler",
            "description": "WhatsApp webhook handler. Part of Notifications API.",
            "operationId": "postNotifications_webhooks_whatsapp",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "50 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "notifications post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/analytics/orchestrator": {
          "get": {
            "tags": ["Analytics"],
            "summary": "Analytics orchestration",
            "description": "Analytics orchestration. Part of Analytics API.",
            "operationId": "getAnalytics_orchestrator",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per user"
          }
        },
        "/analytics/business-intelligence": {
          "get": {
            "tags": ["Analytics"],
            "summary": "BI aggregation",
            "description": "BI aggregation. Part of Analytics API.",
            "operationId": "getAnalytics_business-intelligence",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per user"
          }
        },
        "/analytics/cross-school": {
          "get": {
            "tags": ["Analytics"],
            "summary": "Cross-school analytics",
            "description": "Cross-school analytics. Part of Analytics API.",
            "operationId": "getAnalytics_cross-school",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per user"
          }
        },
        "/analytics/executive-dashboard": {
          "get": {
            "tags": ["Analytics"],
            "summary": "Executive dashboard",
            "description": "Executive dashboard. Part of Analytics API.",
            "operationId": "getAnalytics_executive-dashboard",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per user"
          }
        },
        "/analytics/federated-learning": {
          "get": {
            "tags": ["Analytics"],
            "summary": "Federated learning engine",
            "description": "Federated learning engine. Part of Analytics API.",
            "operationId": "getAnalytics_federated-learning",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per user"
          }
        },
        "/analytics/payments-dashboard": {
          "get": {
            "tags": ["Analytics"],
            "summary": "Payments dashboard",
            "description": "Payments dashboard. Part of Analytics API.",
            "operationId": "getAnalytics_payments-dashboard",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per user"
          }
        },
        "/analytics/performance-benchmarking": {
          "get": {
            "tags": ["Analytics"],
            "summary": "Performance benchmarking",
            "description": "Performance benchmarking. Part of Analytics API.",
            "operationId": "getAnalytics_performance-benchmarking",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per user"
          }
        },
        "/analytics/predictive-insights": {
          "get": {
            "tags": ["Analytics"],
            "summary": "Predictive insights",
            "description": "Predictive insights. Part of Analytics API.",
            "operationId": "getAnalytics_predictive-insights",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per user"
          }
        },
        "/analytics/real-time-benchmarking": {
          "get": {
            "tags": ["Analytics"],
            "summary": "Real-time benchmarking",
            "description": "Real-time benchmarking. Part of Analytics API.",
            "operationId": "getAnalytics_real-time-benchmarking",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per user"
          }
        },
        "/analytics/revenue-optimization": {
          "get": {
            "tags": ["Analytics"],
            "summary": "Revenue optimization",
            "description": "Revenue optimization. Part of Analytics API.",
            "operationId": "getAnalytics_revenue-optimization",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per user"
          }
        },
        "/analytics/strategic-insights": {
          "get": {
            "tags": ["Analytics"],
            "summary": "Strategic insights",
            "description": "Strategic insights. Part of Analytics API.",
            "operationId": "getAnalytics_strategic-insights",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per user"
          }
        },
        "/nutrition/analyze": {
          "post": {
            "tags": ["Nutrition"],
            "summary": "Analyze nutritional content",
            "description": "Analyze nutritional content. Part of Nutrition API.",
            "operationId": "postNutrition_analyze",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "50 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "nutrition post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/nutrition/recommendations": {
          "get": {
            "tags": ["Nutrition"],
            "summary": "Dietary recommendations",
            "description": "Dietary recommendations. Part of Nutrition API.",
            "operationId": "getNutrition_recommendations",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "50 requests per minute per user"
          }
        },
        "/nutrition/meal-planning": {
          "post": {
            "tags": ["Nutrition"],
            "summary": "AI meal planning",
            "description": "AI meal planning. Part of Nutrition API.",
            "operationId": "postNutrition_meal-planning",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "50 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "nutrition post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/nutrition/meal-optimization": {
          "post": {
            "tags": ["Nutrition"],
            "summary": "Meal optimization AI",
            "description": "Meal optimization AI. Part of Nutrition API.",
            "operationId": "postNutrition_meal-optimization",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "50 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "nutrition post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/nutrition/compliance": {
          "get": {
            "tags": ["Nutrition"],
            "summary": "Nutrition compliance check",
            "description": "Nutrition compliance check. Part of Nutrition API.",
            "operationId": "getNutrition_compliance",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "50 requests per minute per user"
          }
        },
        "/nutrition/trends": {
          "get": {
            "tags": ["Nutrition"],
            "summary": "Nutritional trend analysis",
            "description": "Nutritional trend analysis. Part of Nutrition API.",
            "operationId": "getNutrition_trends",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "50 requests per minute per user"
          }
        },
        "/enterprise/cross-school-analytics": {
          "get": {
            "tags": ["Enterprise"],
            "summary": "Cross-school analytics",
            "description": "Cross-school analytics. Part of Enterprise API.",
            "operationId": "getEnterprise_cross-school-analytics",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "200 requests per minute per user"
          }
        },
        "/enterprise/district-admin": {
          "get": {
            "tags": ["Enterprise"],
            "summary": "District administration",
            "description": "District administration. Part of Enterprise API.",
            "operationId": "getEnterprise_district-admin",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "200 requests per minute per user"
          }
        },
        "/enterprise/billing-consolidation": {
          "get": {
            "tags": ["Enterprise"],
            "summary": "Billing consolidation",
            "description": "Billing consolidation. Part of Enterprise API.",
            "operationId": "getEnterprise_billing-consolidation",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "200 requests per minute per user"
          }
        },
        "/enterprise/multi-school": {
          "get": {
            "tags": ["Enterprise"],
            "summary": "Multi-school orchestration",
            "description": "Multi-school orchestration. Part of Enterprise API.",
            "operationId": "getEnterprise_multi-school",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "200 requests per minute per user"
          }
        },
        "/enterprise/school-hierarchy": {
          "get": {
            "tags": ["Enterprise"],
            "summary": "School hierarchy management",
            "description": "School hierarchy management. Part of Enterprise API.",
            "operationId": "getEnterprise_school-hierarchy",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "200 requests per minute per user"
          }
        },
        "/enterprise/tenant-manager": {
          "get": {
            "tags": ["Enterprise"],
            "summary": "Tenant management",
            "description": "Tenant management. Part of Enterprise API.",
            "operationId": "getEnterprise_tenant-manager",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "200 requests per minute per user"
          }
        },
        "/parent-dashboard/orchestrator": {
          "get": {
            "tags": ["Epic 7 - Parent Dashboard"],
            "summary": "Parent dashboard orchestration",
            "description": "Parent dashboard orchestration. Part of Epic 7 - Parent Dashboard API.",
            "operationId": "getParent-dashboard_orchestrator",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per user"
          }
        },
        "/parent-dashboard/insights": {
          "get": {
            "tags": ["Epic 7 - Parent Dashboard"],
            "summary": "Personalized insights",
            "description": "Personalized insights. Part of Epic 7 - Parent Dashboard API.",
            "operationId": "getParent-dashboard_insights",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per user"
          }
        },
        "/parent-dashboard/child-progress": {
          "get": {
            "tags": ["Epic 7 - Parent Dashboard"],
            "summary": "Child progress analytics",
            "description": "Child progress analytics. Part of Epic 7 - Parent Dashboard API.",
            "operationId": "getParent-dashboard_child-progress",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per user"
          }
        },
        "/parent-dashboard/engagement": {
          "get": {
            "tags": ["Epic 7 - Parent Dashboard"],
            "summary": "Engagement intelligence",
            "description": "Engagement intelligence. Part of Epic 7 - Parent Dashboard API.",
            "operationId": "getParent-dashboard_engagement",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per user"
          }
        },
        "/parent-dashboard/customization": {
          "post": {
            "tags": ["Epic 7 - Parent Dashboard"],
            "summary": "Dashboard customization",
            "description": "Dashboard customization. Part of Epic 7 - Parent Dashboard API.",
            "operationId": "postParent-dashboard_customization",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "parentDashboard post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/templates/ai-personalization": {
          "get": {
            "tags": ["Templates"],
            "summary": "AI personalization",
            "description": "AI personalization. Part of Templates API.",
            "operationId": "getTemplates_ai-personalization",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "50 requests per minute per user"
          }
        },
        "/templates/behavioral-analytics": {
          "get": {
            "tags": ["Templates"],
            "summary": "Behavioral analytics",
            "description": "Behavioral analytics. Part of Templates API.",
            "operationId": "getTemplates_behavioral-analytics",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "50 requests per minute per user"
          }
        },
        "/templates/content-generator": {
          "post": {
            "tags": ["Templates"],
            "summary": "Content generation",
            "description": "Content generation. Part of Templates API.",
            "operationId": "postTemplates_content-generator",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "50 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "templates post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/templates/cultural-adapter": {
          "post": {
            "tags": ["Templates"],
            "summary": "Cultural adaptation",
            "description": "Cultural adaptation. Part of Templates API.",
            "operationId": "postTemplates_cultural-adapter",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "50 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "templates post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/templates/recommendation-engine": {
          "get": {
            "tags": ["Templates"],
            "summary": "Recommendation engine",
            "description": "Recommendation engine. Part of Templates API.",
            "operationId": "getTemplates_recommendation-engine",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "50 requests per minute per user"
          }
        },
        "/templates/optimizer": {
          "post": {
            "tags": ["Templates"],
            "summary": "Template optimization",
            "description": "Template optimization. Part of Templates API.",
            "operationId": "postTemplates_optimizer",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "50 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "templates post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/mobile/delivery-tracking": {
          "get": {
            "tags": ["Mobile"],
            "summary": "Mobile delivery tracking",
            "description": "Mobile delivery tracking. Part of Mobile API.",
            "operationId": "getMobile_delivery-tracking",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "200 requests per minute per device"
          }
        },
        "/mobile/device-registration": {
          "post": {
            "tags": ["Mobile"],
            "summary": "Mobile device registration",
            "description": "Mobile device registration. Part of Mobile API.",
            "operationId": "postMobile_device-registration",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "200 requests per minute per device",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "mobile post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/mobile/parent-notifications": {
          "get": {
            "tags": ["Mobile"],
            "summary": "Mobile parent notifications",
            "description": "Mobile parent notifications. Part of Mobile API.",
            "operationId": "getMobile_parent-notifications",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [
              {
                "$ref": "#/components/parameters/PageParam"
              },
              {
                "$ref": "#/components/parameters/LimitParam"
              },
              {
                "$ref": "#/components/parameters/SearchParam"
              },
              {
                "$ref": "#/components/parameters/SortParam"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "200 requests per minute per device"
          }
        },
        "/vendor/ai-procurement": {
          "post": {
            "tags": ["Vendor Management"],
            "summary": "AI procurement engine",
            "description": "AI procurement engine. Part of Vendor Management API.",
            "operationId": "postVendor_ai-procurement",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "201": {
                "description": "Resource created successfully",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "409": {
                "$ref": "#/components/responses/Conflict"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "50 requests per minute per user",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "description": "vendorManagement post data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/static/{path+}": {
          "get": {
            "tags": ["Static Content"],
            "summary": "Serve static files",
            "description": "Serve static files. Part of Static Content API.",
            "operationId": "getStaticById",
            "security": [],
            "parameters": [
              {
                "name": "path+",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "description": "Path+ identifier"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "1000 requests per minute per IP"
          }
        },
        "/content/{path+}": {
          "get": {
            "tags": ["Static Content"],
            "summary": "Serve dynamic content",
            "description": "Serve dynamic content. Part of Static Content API.",
            "operationId": "getContentById",
            "security": [],
            "parameters": [
              {
                "name": "path+",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "description": "Path+ identifier"
              }
            ],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "1000 requests per minute per IP"
          }
        },
        "/monitoring/dashboard": {
          "get": {
            "tags": ["Monitoring"],
            "summary": "Monitoring dashboard",
            "description": "Monitoring dashboard. Part of Monitoring API.",
            "operationId": "getMonitoring_dashboard",
            "security": [
              {
                "CognitoAuth": []
              }
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Operation successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessResponse"
                    }
                  }
                }
              },
              "400": {
                "$ref": "#/components/responses/BadRequest"
              },
              "401": {
                "$ref": "#/components/responses/Unauthorized"
              },
              "403": {
                "$ref": "#/components/responses/Forbidden"
              },
              "404": {
                "$ref": "#/components/responses/NotFound"
              },
              "500": {
                "$ref": "#/components/responses/InternalServerError"
              }
            },
            "x-rate-limit": "100 requests per minute per user"
          }
        }
      },
      "tags": [
        {
          "name": "Health Check",
          "description": "System health and monitoring endpoints for production deployment"
        },
        {
          "name": "Authentication",
          "description": "User authentication and authorization endpoints with AWS Cognito integration"
        },
        {
          "name": "User Management",
          "description": "User profile and management operations with role-based access control"
        },
        {
          "name": "Menu Management",
          "description": "Food menu item management, categorization, and nutrition tracking"
        },
        {
          "name": "Order Management",
          "description": "Order creation, tracking, and status management with real-time updates"
        },
        {
          "name": "RFID Management",
          "description": "RFID card management and contactless delivery verification system"
        },
        {
          "name": "Payment Processing",
          "description": "Payment orders, transaction processing, and billing with Razorpay integration"
        },
        {
          "name": "Notifications",
          "description": "Multi-channel notification delivery and management (Email, SMS, WhatsApp, Push)"
        },
        {
          "name": "Analytics",
          "description": "Business intelligence, reporting, and predictive analytics engine"
        },
        {
          "name": "Enterprise",
          "description": "Multi-school administration and district-level management"
        },
        {
          "name": "Nutrition",
          "description": "AI-powered nutrition analysis, meal planning, and dietary recommendations"
        },
        {
          "name": "Vendor Management",
          "description": "Vendor marketplace, procurement, and supply chain management"
        },
        {
          "name": "Templates",
          "description": "AI-powered content generation and cultural adaptation"
        },
        {
          "name": "Mobile",
          "description": "Mobile app specific endpoints for delivery tracking and notifications"
        },
        {
          "name": "Epic 7 - Parent Dashboard",
          "description": "Advanced parent dashboard with AI insights and child progress analytics"
        }
      ],
      "x-tag-groups": [
        {
          "name": "Core API",
          "tags": ["Health Check", "Authentication", "User Management"]
        },
        {
          "name": "Food Service",
          "tags": ["Menu Management", "Order Management", "Nutrition"]
        },
        {
          "name": "Payment & RFID",
          "tags": ["Payment Processing", "RFID Management"]
        },
        {
          "name": "Communication",
          "tags": ["Notifications", "Templates"]
        },
        {
          "name": "Analytics & Insights",
          "tags": ["Analytics", "Epic 7 - Parent Dashboard"]
        },
        {
          "name": "Enterprise & Management",
          "tags": ["Enterprise", "Vendor Management"]
        },
        {
          "name": "Mobile & Devices",
          "tags": ["Mobile"]
        }
      ]
    },
    "endpointCount": 112,
    "categories": {
      "Health & System": {
        "count": 11,
        "endpoints": [
          "GET /health",
          "GET /health/detailed",
          "GET /health/ready",
          "GET /health/live",
          "GET /health/status",
          "GET /health/database",
          "GET /health/comprehensive",
          "GET /health/dashboard",
          "GET /health/system",
          "GET /health/system-status",
          "GET /health/check"
        ]
      },
      "Authentication": {
        "count": 7,
        "endpoints": [
          "POST /auth/register",
          "POST /auth/login",
          "POST /auth/refresh",
          "GET /auth/me",
          "POST /auth/logout",
          "PATCH /auth/change-password",
          "PATCH /auth/profile"
        ]
      },
      "User Management": {
        "count": 5,
        "endpoints": [
          "GET /users",
          "GET /users/{id}",
          "PUT /users/{id}",
          "POST /users/bulk-import",
          "POST /users/{id}/children"
        ]
      },
      "Menu Management": {
        "count": 9,
        "endpoints": [
          "GET /menu/items",
          "POST /menu/items",
          "GET /menu/items/{id}",
          "PUT /menu/items/{id}",
          "DELETE /menu/items/{id}",
          "GET /menu/search",
          "POST /menu/daily",
          "POST /menu/plans",
          "POST /menu/slots"
        ]
      },
      "Order Management": {
        "count": 6,
        "endpoints": [
          "GET /orders",
          "POST /orders",
          "GET /orders/{id}",
          "PUT /orders/{id}",
          "PATCH /orders/{id}/status",
          "POST /payment/orders"
        ]
      },
      "RFID System": {
        "count": 9,
        "endpoints": [
          "POST /rfid/cards",
          "GET /rfid/cards/{cardNumber}",
          "POST /rfid/verify",
          "POST /rfid/delivery/verify",
          "POST /rfid/photo/verify",
          "POST /rfid/cards/bulk-import",
          "GET /rfid/readers",
          "GET /rfid/mobile/cards",
          "GET /rfid/mobile/tracking"
        ]
      },
      "Payment Processing": {
        "count": 21,
        "endpoints": [
          "POST /payment/verify",
          "POST /payment/webhook",
          "POST /payment/webhook-handler",
          "GET /payment/methods",
          "POST /payment/retry",
          "GET /payment/analytics",
          "POST /payment/reconciliation",
          "GET /payment/invoices",
          "POST /payment/invoices/send",
          "GET /payment/invoices/templates",
          "GET /payment/invoices/analytics",
          "POST /payment/pdf/generate",
          "GET /payment/subscriptions",
          "GET /payment/subscriptions/plans",
          "GET /payment/subscriptions/analytics",
          "POST /payment/billing/automation",
          "POST /payment/dunning",
          "GET /payment/advanced",
          "GET /payment/intelligence",
          "GET /payment/ml-insights",
          "POST /payment/orders-fixed"
        ]
      },
      "Notifications": {
        "count": 3,
        "endpoints": ["POST /notifications/send", "GET /notifications", "POST /notifications/webhooks/whatsapp"]
      },
      "Analytics & Reporting": {
        "count": 11,
        "endpoints": [
          "GET /analytics/orchestrator",
          "GET /analytics/business-intelligence",
          "GET /analytics/cross-school",
          "GET /analytics/executive-dashboard",
          "GET /analytics/federated-learning",
          "GET /analytics/payments-dashboard",
          "GET /analytics/performance-benchmarking",
          "GET /analytics/predictive-insights",
          "GET /analytics/real-time-benchmarking",
          "GET /analytics/revenue-optimization",
          "GET /analytics/strategic-insights"
        ]
      },
      "Nutrition System": {
        "count": 6,
        "endpoints": [
          "POST /nutrition/analyze",
          "GET /nutrition/recommendations",
          "POST /nutrition/meal-planning",
          "POST /nutrition/meal-optimization",
          "GET /nutrition/compliance",
          "GET /nutrition/trends"
        ]
      },
      "Enterprise Features": {
        "count": 6,
        "endpoints": [
          "GET /enterprise/cross-school-analytics",
          "GET /enterprise/district-admin",
          "GET /enterprise/billing-consolidation",
          "GET /enterprise/multi-school",
          "GET /enterprise/school-hierarchy",
          "GET /enterprise/tenant-manager"
        ]
      },
      "Other": {
        "count": 5,
        "endpoints": [
          "GET /parent-dashboard/orchestrator",
          "GET /parent-dashboard/insights",
          "GET /parent-dashboard/child-progress",
          "GET /parent-dashboard/engagement",
          "POST /parent-dashboard/customization"
        ]
      },
      "Templates & Localization": {
        "count": 6,
        "endpoints": [
          "GET /templates/ai-personalization",
          "GET /templates/behavioral-analytics",
          "POST /templates/content-generator",
          "POST /templates/cultural-adapter",
          "GET /templates/recommendation-engine",
          "POST /templates/optimizer"
        ]
      },
      "Mobile APIs": {
        "count": 3,
        "endpoints": [
          "GET /mobile/delivery-tracking",
          "POST /mobile/device-registration",
          "GET /mobile/parent-notifications"
        ]
      },
      "Vendor Marketplace": {
        "count": 1,
        "endpoints": ["POST /vendor/ai-procurement"]
      },
      "Static Content": {
        "count": 2,
        "endpoints": ["GET /static/{path+}", "GET /content/{path+}"]
      },
      "Parent Dashboard": {
        "count": 1,
        "endpoints": ["GET /monitoring/dashboard"]
      }
    },
    "fileSize": 218661
  },
  "swaggerValidation": {
    "available": true,
    "score": 5,
    "maxScore": 6,
    "details": {
      "hasSwaggerUI": true,
      "hasAPISpec": true,
      "hasAuthentication": true,
      "hasExamples": false,
      "hasInteractiveTesting": true,
      "hasStyling": true
    },
    "fileSize": 6613
  },
  "lambdaValidation": {
    "count": 115,
    "files": [
      "src/functions/analytics/analytics-orchestrator.ts",
      "src/functions/analytics/business-intelligence-aggregator.ts",
      "src/functions/analytics/cross-school-analytics.ts",
      "src/functions/analytics/executive-dashboard-engine.ts",
      "src/functions/analytics/federated-learning-engine.ts",
      "src/functions/analytics/payments-dashboard.ts",
      "src/functions/analytics/performance-benchmarking.ts",
      "src/functions/analytics/predictive-insights-engine.ts",
      "src/functions/analytics/real-time-benchmarking.ts",
      "src/functions/analytics/revenue-optimization-analyzer.ts",
      "src/functions/analytics/strategic-insights-generator.ts",
      "src/functions/auth/change-password.ts",
      "src/functions/auth/login.ts",
      "src/functions/auth/logout.ts",
      "src/functions/auth/profile.ts",
      "src/functions/auth/refresh.ts",
      "src/functions/auth/register.ts",
      "src/functions/auth/update-profile.ts",
      "src/functions/enterprise/cross-school-analytics.ts",
      "src/functions/enterprise/district-admin.ts",
      "src/functions/enterprise/enterprise-billing-consolidation.ts",
      "src/functions/enterprise/multi-school-orchestrator.ts",
      "src/functions/enterprise/school-hierarchy-manager.ts",
      "src/functions/enterprise/tenant-manager.ts",
      "src/functions/epic-7-2-parent-dashboard/child-progress-analytics.ts",
      "src/functions/epic-7-2-parent-dashboard/dashboard-customization.ts",
      "src/functions/epic-7-2-parent-dashboard/engagement-intelligence.ts",
      "src/functions/epic-7-2-parent-dashboard/parent-dashboard-orchestrator.ts",
      "src/functions/epic-7-2-parent-dashboard/personalized-insights-engine.ts",
      "src/functions/health/basic.ts",
      "src/functions/health/check-health.ts",
      "src/functions/health/comprehensive.ts",
      "src/functions/health/dashboard.ts",
      "src/functions/health/database-health.ts",
      "src/functions/health/detailed.ts",
      "src/functions/health/health-check.ts",
      "src/functions/health/live.ts",
      "src/functions/health/ready.ts",
      "src/functions/health/status.ts",
      "src/functions/health/system-health.ts",
      "src/functions/health/system-status.ts",
      "src/functions/menu/createMenuItem.ts",
      "src/functions/menu/deleteMenuItem.ts",
      "src/functions/menu/getMenuItemById.ts",
      "src/functions/menu/getMenuItems.ts",
      "src/functions/menu/searchMenuItems.ts",
      "src/functions/menu/updateMenuItem.ts",
      "src/functions/menus/create-daily-menu.ts",
      "src/functions/menus/create-plan.ts",
      "src/functions/menus/manage-slots.ts",
      "src/functions/mobile/delivery-tracking.ts",
      "src/functions/mobile/device-registration.ts",
      "src/functions/mobile/parent-notifications.ts",
      "src/functions/monitoring/dashboard.ts",
      "src/functions/nutrition/dietary-recommendation-engine.ts",
      "src/functions/nutrition/meal-optimization-ai.ts",
      "src/functions/nutrition/meal-planner-ai.ts",
      "src/functions/nutrition/nutrition-analyzer.ts",
      "src/functions/nutrition/nutrition-compliance-checker.ts",
      "src/functions/nutrition/nutritional-trend-analyzer.ts",
      "src/functions/orders/create-order.ts",
      "src/functions/orders/get-order.ts",
      "src/functions/orders/get-orders.ts",
      "src/functions/orders/update-order.ts",
      "src/functions/orders/update-status.ts",
      "src/functions/payments/advanced-payment-intelligence.ts",
      "src/functions/payments/advanced-payment.ts",
      "src/functions/payments/billing-automation.ts",
      "src/functions/payments/create-order-fixed.ts",
      "src/functions/payments/create-order.ts",
      "src/functions/payments/dunning-management.ts",
      "src/functions/payments/invoice-analytics.ts",
      "src/functions/payments/invoice-generator.ts",
      "src/functions/payments/invoice-mailer.ts",
      "src/functions/payments/invoice-templates.ts",
      "src/functions/payments/manage-payment-methods.ts",
      "src/functions/payments/ml-payment-insights.ts",
      "src/functions/payments/payment-analytics.ts",
      "src/functions/payments/payment-retry.ts",
      "src/functions/payments/pdf-generator.ts",
      "src/functions/payments/reconciliation.ts",
      "src/functions/payments/subscription-analytics.ts",
      "src/functions/payments/subscription-management.ts",
      "src/functions/payments/subscription-plans.ts",
      "src/functions/payments/verify.ts",
      "src/functions/payments/webhook-handler.ts",
      "src/functions/payments/webhook.ts",
      "src/functions/rfid/bulk-import-cards.ts",
      "src/functions/rfid/create-card.ts",
      "src/functions/rfid/delivery-verification.ts",
      "src/functions/rfid/get-card.ts",
      "src/functions/rfid/manage-readers.ts",
      "src/functions/rfid/mobile-card-management.ts",
      "src/functions/rfid/mobile-tracking.ts",
      "src/functions/rfid/photo-verification.ts",
      "src/functions/rfid/verify-card.ts",
      "src/functions/shared/cognito.service.ts",
      "src/functions/shared/database.service.ts",
      "src/functions/shared/logger.service.ts",
      "src/functions/shared/response.utils.ts",
      "src/functions/shared/validation.service.ts",
      "src/functions/static/serve-content.ts",
      "src/functions/static/serve-static.ts",
      "src/functions/templates/ai-personalization.ts",
      "src/functions/templates/behavioral-analytics.ts",
      "src/functions/templates/content-generator.ts",
      "src/functions/templates/cultural-adapter.ts",
      "src/functions/templates/recommendation-engine.ts",
      "src/functions/templates/template-optimizer.ts",
      "src/functions/users/bulkImport.ts",
      "src/functions/users/getUserById.ts",
      "src/functions/users/getUsers.ts",
      "src/functions/users/manageChildren.ts",
      "src/functions/users/updateUser.ts",
      "src/functions/vendor/ai-procurement-engine.ts"
    ]
  },
  "categories": {
    "Health & System": {
      "count": 11,
      "endpoints": [
        "GET /health",
        "GET /health/detailed",
        "GET /health/ready",
        "GET /health/live",
        "GET /health/status",
        "GET /health/database",
        "GET /health/comprehensive",
        "GET /health/dashboard",
        "GET /health/system",
        "GET /health/system-status",
        "GET /health/check"
      ]
    },
    "Authentication": {
      "count": 7,
      "endpoints": [
        "POST /auth/register",
        "POST /auth/login",
        "POST /auth/refresh",
        "GET /auth/me",
        "POST /auth/logout",
        "PATCH /auth/change-password",
        "PATCH /auth/profile"
      ]
    },
    "User Management": {
      "count": 5,
      "endpoints": [
        "GET /users",
        "GET /users/{id}",
        "PUT /users/{id}",
        "POST /users/bulk-import",
        "POST /users/{id}/children"
      ]
    },
    "Menu Management": {
      "count": 9,
      "endpoints": [
        "GET /menu/items",
        "POST /menu/items",
        "GET /menu/items/{id}",
        "PUT /menu/items/{id}",
        "DELETE /menu/items/{id}",
        "GET /menu/search",
        "POST /menu/daily",
        "POST /menu/plans",
        "POST /menu/slots"
      ]
    },
    "Order Management": {
      "count": 6,
      "endpoints": [
        "GET /orders",
        "POST /orders",
        "GET /orders/{id}",
        "PUT /orders/{id}",
        "PATCH /orders/{id}/status",
        "POST /payment/orders"
      ]
    },
    "RFID System": {
      "count": 9,
      "endpoints": [
        "POST /rfid/cards",
        "GET /rfid/cards/{cardNumber}",
        "POST /rfid/verify",
        "POST /rfid/delivery/verify",
        "POST /rfid/photo/verify",
        "POST /rfid/cards/bulk-import",
        "GET /rfid/readers",
        "GET /rfid/mobile/cards",
        "GET /rfid/mobile/tracking"
      ]
    },
    "Payment Processing": {
      "count": 21,
      "endpoints": [
        "POST /payment/verify",
        "POST /payment/webhook",
        "POST /payment/webhook-handler",
        "GET /payment/methods",
        "POST /payment/retry",
        "GET /payment/analytics",
        "POST /payment/reconciliation",
        "GET /payment/invoices",
        "POST /payment/invoices/send",
        "GET /payment/invoices/templates",
        "GET /payment/invoices/analytics",
        "POST /payment/pdf/generate",
        "GET /payment/subscriptions",
        "GET /payment/subscriptions/plans",
        "GET /payment/subscriptions/analytics",
        "POST /payment/billing/automation",
        "POST /payment/dunning",
        "GET /payment/advanced",
        "GET /payment/intelligence",
        "GET /payment/ml-insights",
        "POST /payment/orders-fixed"
      ]
    },
    "Notifications": {
      "count": 3,
      "endpoints": ["POST /notifications/send", "GET /notifications", "POST /notifications/webhooks/whatsapp"]
    },
    "Analytics & Reporting": {
      "count": 11,
      "endpoints": [
        "GET /analytics/orchestrator",
        "GET /analytics/business-intelligence",
        "GET /analytics/cross-school",
        "GET /analytics/executive-dashboard",
        "GET /analytics/federated-learning",
        "GET /analytics/payments-dashboard",
        "GET /analytics/performance-benchmarking",
        "GET /analytics/predictive-insights",
        "GET /analytics/real-time-benchmarking",
        "GET /analytics/revenue-optimization",
        "GET /analytics/strategic-insights"
      ]
    },
    "Nutrition System": {
      "count": 6,
      "endpoints": [
        "POST /nutrition/analyze",
        "GET /nutrition/recommendations",
        "POST /nutrition/meal-planning",
        "POST /nutrition/meal-optimization",
        "GET /nutrition/compliance",
        "GET /nutrition/trends"
      ]
    },
    "Enterprise Features": {
      "count": 6,
      "endpoints": [
        "GET /enterprise/cross-school-analytics",
        "GET /enterprise/district-admin",
        "GET /enterprise/billing-consolidation",
        "GET /enterprise/multi-school",
        "GET /enterprise/school-hierarchy",
        "GET /enterprise/tenant-manager"
      ]
    },
    "Other": {
      "count": 5,
      "endpoints": [
        "GET /parent-dashboard/orchestrator",
        "GET /parent-dashboard/insights",
        "GET /parent-dashboard/child-progress",
        "GET /parent-dashboard/engagement",
        "POST /parent-dashboard/customization"
      ]
    },
    "Templates & Localization": {
      "count": 6,
      "endpoints": [
        "GET /templates/ai-personalization",
        "GET /templates/behavioral-analytics",
        "POST /templates/content-generator",
        "POST /templates/cultural-adapter",
        "GET /templates/recommendation-engine",
        "POST /templates/optimizer"
      ]
    },
    "Mobile APIs": {
      "count": 3,
      "endpoints": [
        "GET /mobile/delivery-tracking",
        "POST /mobile/device-registration",
        "GET /mobile/parent-notifications"
      ]
    },
    "Vendor Marketplace": {
      "count": 1,
      "endpoints": ["POST /vendor/ai-procurement"]
    },
    "Static Content": {
      "count": 2,
      "endpoints": ["GET /static/{path+}", "GET /content/{path+}"]
    },
    "Parent Dashboard": {
      "count": 1,
      "endpoints": ["GET /monitoring/dashboard"]
    }
  },
  "timestamp": "2025-09-21T11:46:27.630Z"
}
