export declare function getFutureDate(daysAhead?: number): Date;
export declare function getPastDate(daysAgo?: number): Date;
export declare function createTestUser(overrides?: {}): {
    id: string;
    email: string;
    name: string;
    role: string;
    phoneNumber: string;
    isEmailVerified: boolean;
    isPhoneVerified: boolean;
    createdAt: Date;
    updatedAt: Date;
};
export declare function createTestMenuItem(overrides?: {}): {
    id: string;
    name: string;
    description: string;
    category: string;
    price: number;
    cost: number;
    available: boolean;
    preparationTime: number;
    calories: number;
    allergens: never[];
    tags: string[];
    imageUrl: string;
    schoolId: string;
    createdAt: Date;
    updatedAt: Date;
};
export declare function createTestDailyMenu(overrides?: {}): {
    id: string;
    schoolId: string;
    date: Date;
    menuItems: {
        id: string;
        name: string;
        description: string;
        category: string;
        price: number;
        cost: number;
        available: boolean;
        preparationTime: number;
        calories: number;
        allergens: never[];
        tags: string[];
        imageUrl: string;
        schoolId: string;
        createdAt: Date;
        updatedAt: Date;
    }[];
    specialNotes: string;
    isActive: boolean;
    createdAt: Date;
    updatedAt: Date;
};
export declare function createTestOrder(overrides?: {}): {
    id: string;
    userId: string;
    schoolId: string;
    menuItemId: string;
    quantity: number;
    totalAmount: number;
    status: string;
    deliveryDate: Date;
    orderType: string;
    paymentStatus: string;
    notes: string;
    createdAt: Date;
    updatedAt: Date;
};
export declare function createTestPayment(overrides?: {}): {
    id: string;
    orderId: string;
    userId: string;
    amount: number;
    currency: string;
    status: string;
    gateway: string;
    gatewayOrderId: string;
    gatewayPaymentId: null;
    gatewaySignature: null;
    method: null;
    createdAt: Date;
    updatedAt: Date;
};
export declare function createTestRFIDCard(overrides?: {}): {
    id: string;
    cardNumber: string;
    userId: string;
    status: string;
    type: string;
    issuedAt: Date;
    expiresAt: Date;
    lastUsedAt: null;
    createdAt: Date;
    updatedAt: Date;
};
export declare function createTestDeliveryVerification(overrides?: {}): {
    id: string;
    orderId: string;
    rfidCardNumber: string;
    rfidReaderId: string;
    verificationStatus: string;
    verifiedAt: Date;
    location: string;
    notes: string;
    createdAt: Date;
};
export declare function createTestSchool(overrides?: {}): {
    id: string;
    name: string;
    address: string;
    city: string;
    state: string;
    country: string;
    postalCode: string;
    phoneNumber: string;
    email: string;
    subscriptionStatus: string;
    subscriptionPlan: string;
    createdAt: Date;
    updatedAt: Date;
};
export declare function createMockAPIGatewayEvent(overrides?: {}): {
    body: null;
    headers: {
        'Content-Type': string;
        'User-Agent': string;
    };
    httpMethod: string;
    isBase64Encoded: boolean;
    path: string;
    pathParameters: null;
    queryStringParameters: null;
    multiValueQueryStringParameters: null;
    stageVariables: null;
    requestContext: any;
    resource: string;
    multiValueHeaders: {};
};
export declare function createMockLambdaContext(overrides?: {}): {
    callbackWaitsForEmptyEventLoop: boolean;
    functionName: string;
    functionVersion: string;
    invokedFunctionArn: string;
    memoryLimitInMB: string;
    awsRequestId: string;
    logGroupName: string;
    logStreamName: string;
    getRemainingTimeInMillis: () => number;
    done: () => void;
    fail: () => void;
    succeed: () => void;
};
export declare const testMenuItems: {
    id: string;
    name: string;
    description: string;
    category: string;
    price: number;
    cost: number;
    available: boolean;
    preparationTime: number;
    calories: number;
    allergens: never[];
    tags: string[];
    imageUrl: string;
    schoolId: string;
    createdAt: Date;
    updatedAt: Date;
}[];
export declare const testUsers: {
    id: string;
    email: string;
    name: string;
    role: string;
    phoneNumber: string;
    isEmailVerified: boolean;
    isPhoneVerified: boolean;
    createdAt: Date;
    updatedAt: Date;
}[];
//# sourceMappingURL=test-data.d.ts.map