version: '3.8'

services:
  # Blue Environment Services
  backend-blue:
    image: ${DOCKER_REGISTRY}/hasivu-platform:${IMAGE_TAG:-latest}
    container_name: hasivu-platform-backend-blue
    ports:
      - "3003:3001"  # Blue environment backend port
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=http://frontend-blue:3000
      - DEPLOYMENT_ENV=blue
    networks:
      - hasivu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend-blue:
    image: ${DOCKER_REGISTRY}/hasivu-platform:${IMAGE_TAG:-latest}
    container_name: hasivu-platform-frontend-blue
    ports:
      - "3002:3000"  # Blue environment frontend port
    environment:
      - NODE_ENV=production
      - PORT=3000
      - NEXT_PUBLIC_API_BASE_URL=http://backend-blue:3001
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXT_TELEMETRY_DISABLED=1
      - DEPLOYMENT_ENV=blue
    depends_on:
      - backend-blue
    networks:
      - hasivu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Green Environment Services
  backend-green:
    image: ${DOCKER_REGISTRY}/hasivu-platform:${IMAGE_TAG:-latest}
    container_name: hasivu-platform-backend-green
    ports:
      - "3005:3001"  # Green environment backend port
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=http://frontend-green:3000
      - DEPLOYMENT_ENV=green
    networks:
      - hasivu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend-green:
    image: ${DOCKER_REGISTRY}/hasivu-platform:${IMAGE_TAG:-latest}
    container_name: hasivu-platform-frontend-green
    ports:
      - "3004:3000"  # Green environment frontend port
    environment:
      - NODE_ENV=production
      - PORT=3000
      - NEXT_PUBLIC_API_BASE_URL=http://backend-green:3001
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXT_TELEMETRY_DISABLED=1
      - DEPLOYMENT_ENV=green
    depends_on:
      - backend-green
    networks:
      - hasivu-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Shared Services
  nginx:
    image: nginx:1.24-alpine
    container_name: hasivu-platform-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.production.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - frontend-blue
      - frontend-green
      - backend-blue
      - backend-green
    networks:
      - hasivu-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M

  redis:
    image: redis:7-alpine
    container_name: hasivu-platform-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - hasivu-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Monitoring Services
  prometheus:
    image: prom/prometheus:latest
    container_name: hasivu-platform-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - hasivu-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  grafana:
    image: grafana/grafana:latest
    container_name: hasivu-platform-grafana
    ports:
      - "3006:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - hasivu-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  nginx-logs:
    driver: local

networks:
  hasivu-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: hasivu-prod-network